#Область РаспредлениеВРегистрахНакопления

&НаСервере
Процедура ВыполнитьРаспределениеВРегистрахСервер(РегистрТекст, СтруктураДанных)

	//выборка регистраторов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", РегламентированнаяОтчетность.ГоловнаяОрганизация(Объект.Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрАнализ.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК РегистрАнализ
	|ГДЕ
	|	РегистрАнализ.Организация = &Организация
	|	И РегистрАнализ.Активность = ИСТИНА
	|	И РегистрАнализ.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрАнализ.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Если РегистрТекст = "ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация", "ГоловнаяОрганизация");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "НачисленияУдержанияПоСотрудникам", РегистрТекст);
	
	Регистраторы = Запрос.Выполнить().Выгрузить();
	
	Если Регистраторы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//заполнение статьи финансирования
	Для Каждого Регистратор Из Регистраторы Цикл
	
		//чтение набора
		ИмяКолонки = "ФизическоеЛицо";
		Если РегистрТекст = "БухучетНачисленияУдержанияПоСотрудникам"
			ИЛИ РегистрТекст = "БухучетНачисленияУдержанияПоСотрудникамАвансом"
			ИЛИ РегистрТекст = "ВзаиморасчетыССотрудниками"
			ИЛИ РегистрТекст = "ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий"
			ИЛИ РегистрТекст = "ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС"
			ИЛИ РегистрТекст = "ЗарплатаКВыплате"
			ИЛИ РегистрТекст = "ЗарплатаКВыплатеАвансом"
			ИЛИ РегистрТекст = "НачисленияУдержанияПоСотрудникам"
			ИЛИ РегистрТекст = "НачисленияУдержанияПоСотрудникамАвансом" Тогда
			
			ИмяКолонки = "Сотрудник";
		КонецЕсли;
		
		НаборЗаписей = РегистрыНакопления[РегистрТекст].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Значение = Регистратор.Ссылка;
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		БылаЗамена = Ложь;
		
		//перебор строк
		Для Каждого СтрокаНабора Из НаборЗаписей Цикл
			
			//проверим нужно ли заменять
			Если НЕ СтрокаНабора.СтатьяФинансирования = Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			СтатьяФинансированияНовая = Объект.СтатьяФинансирования;
			ЗначениеЗамены = СтруктураДанных.Получить(СтрокаНабора[ИмяКолонки]); 
			Если НЕ ЗначениеЗамены = Неопределено Тогда
				СтатьяФинансированияНовая = ЗначениеЗамены[0];
			КонецЕсли;
			
			//замена
			СтрокаНабора.СтатьяФинансирования = СтатьяФинансированияНовая;
			БылаЗамена = Истина;
			
		КонецЦикла;
		
		//запись
		Если БылаЗамена = Истина Тогда
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				
				Инфо = ИнформацияОбОшибке();
				
				ДопПризнак = "";
				Попытка
					ДопПризнак = "(" + Формат(Регистратор.Ссылка.ПериодРегистрации, "ДФ=MM.yyyy") + ")";
				Исключение
				КонецПопытки;
				
				СообщитьПользователю = НСтр("ru = 'Замена НЕ выполнена: '") + " " + СокрЛП(Регистратор.Ссылка) + ДопПризнак + ". " + Инфо.Описание;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщитьПользователю);
				
			КонецПопытки;
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

.................

&НаКлиенте
Процедура ВыполнитьРаспределениеВРегистрах(Команда)
	
	//подготовка
	ОчиститьСообщения();
	
	//данные по распределению
	СтруктураДанных = СтруктураДанныхРаспредления();
	
	//обработка регистров сведений
	//	СведенияОНачисленияхДляРасчетаСреднегоЗаработкаОбщий
	//	СведенияОНачисленияхДляРасчетаСреднегоЗаработкаФСС
	//	УсловияДоговораГПХ
	
	//обработка регистров накопления
	ВыполнитьРаспределениеВРегистрахСообщение("БухучетНачисленияУдержанияПоКонтрагентамАкционерам", 	СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("БухучетНачисленияУдержанияПоСотрудникам", 				СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("БухучетНачисленияУдержанияПоСотрудникамАвансом", 		СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ВзаиморасчетыСДепонентами", 								СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ВзаиморасчетыССотрудниками", 							СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий", 	СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС", 		СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ЗарплатаКВыплате", 										СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("ЗарплатаКВыплатеАвансом", 								СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("НачисленияУдержанияПоКонтрагентамАкционерам", 			СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("НачисленияУдержанияПоСотрудникам", 						СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("НачисленияУдержанияПоСотрудникамАвансом", 				СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("СтраховыеВзносыПоФизическимЛицам", 						СтруктураДанных);
	ВыполнитьРаспределениеВРегистрахСообщение("УдержанияПоИсполнительнымДокументам", 					СтруктураДанных);
	
	//завершение
	ТекстСообщения = НСтр("ru = 'Обработка выполнена'");
	Сообщить(ТекстСообщения);
	
КонецПроцедуры
