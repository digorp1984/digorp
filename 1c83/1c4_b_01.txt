#Область СлужебныйПрограммныйИнтерфейс

// Процедура рассылки и сверки ФОТ.
//
//		В зависимсоти от настроек, для указанных сотрудников выполняется рассылка данных
//		по ФОТ или результат анализа ошибок. Данные по ФОТ собираются изходя из расчетных
//		регистров. Далее собирается ексел фаил на подобие формы сотрудников. Итоговый
//		фаил сохраняется в указанный каталог (из настройки). Далее высылается информационное
//		письмо пользователю, о том что фаил с ФОТ сформирован. Второй вариант рассылки, это
//		анализ расхождения между кадровым ФОТ и расчетным.
//
//		Настройки - РегистрСведений.ОФК_НастройкаРассылкиДанныхПоФОТ.
//
Процедура РассылкаИАнализФОТ(ДатаДанных) Экспорт
	
	//------------------------------------------------------------------------------------------------------------
	// ПАРАМЕТРЫ
	//------------------------------------------------------------------------------------------------------------
	
	//параметры
	НужноВысылатьФаил = Ложь;
	НужноИнформироватьОСверке = Ложь;
	ДатаПолученияРасчетныхДанных = Дата(1,1,1);
	
	ТекстЛогаРассылки = "";
	ТекстЛогаРассылки = ТекстЛогаРассылки + Символы.ПС + Символы.ПС;
	ТекстЛогаРассылки = ТекстЛогаРассылки + "---------------------------------------------------------------------------------------------------------------------------";
	ТекстЛогаРассылки = ТекстЛогаРассылки + Символы.ПС;
	ТекстЛогаРассылки = ТекстЛогаРассылки + "Лог рассылки данных:";
	ТекстЛогаРассылки = ТекстЛогаРассылки + Символы.ПС;
	
	//чтение настроек
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.Сотрудник,
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.ПолучательПочта,
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.Каталог,
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.УчетнаяЗапись,
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.ВыгружатьФаил,
	|	ОФК_НастройкаРассылкиДанныхПоФОТ.СообщениеОСверке
	|ИЗ
	|	РегистрСведений.ОФК_НастройкаРассылкиДанныхПоФОТ КАК ОФК_НастройкаРассылкиДанныхПоФОТ";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ТаблицаНастроек.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаНастройки Из ТаблицаНастроек Цикл
		
		Если СтрокаНастройки.ВыгружатьФаил = Истина Тогда
			НужноВысылатьФаил = Истина;
		КонецЕсли;
		Если СтрокаНастройки.СообщениеОСверке = Истина Тогда
			НужноИнформироватьОСверке = Истина;
		КонецЕсли;
		
		ТекстЛогаРассылки = ТекстЛогаРассылки + СокрЛП(СтрокаНастройки.Сотрудник) + " [" + СокрЛП(СтрокаНастройки.ПолучательПочта) + "], рассылка: ";
		ТекстЛогаРассылки = ТекстЛогаРассылки + "фаил=" + Формат(СтрокаНастройки.ВыгружатьФаил, "БЛ=Выключено; БИ=Включено") + ", сообщение=" + Формат(СтрокаНастройки.СообщениеОСверке, "БЛ=Выключено; БИ=Включено") + ".";
		ТекстЛогаРассылки = ТекстЛогаРассылки + Символы.ПС;
		
	КонецЦикла;
	
	Если НужноВысылатьФаил = Ложь И НужноИнформироватьОСверке = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//определение расчетного периода
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадровыйПеревод.ДатаНачала КАК ДатаСобытия
	|ПОМЕСТИТЬ ВТВыборка
	|ИЗ
	|	Документ.КадровыйПеревод КАК КадровыйПеревод
	|ГДЕ
	|	КадровыйПеревод.Проведен = ИСТИНА
	|	И КадровыйПеревод.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеОплатыТруда.ДатаИзменения
	|ИЗ
	|	Документ.ИзменениеОплатыТруда КАК ИзменениеОплатыТруда
	|ГДЕ
	|	ИзменениеОплатыТруда.Проведен = ИСТИНА
	|	И ИзменениеОплатыТруда.ПометкаУдаления = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеПлановыхНачислений.ДатаИзменения
	|ИЗ
	|	Документ.ИзменениеПлановыхНачислений КАК ИзменениеПлановыхНачислений
	|ГДЕ
	|	ИзменениеПлановыхНачислений.Проведен = ИСТИНА
	|	И ИзменениеПлановыхНачислений.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТВыборка.ДатаСобытия) КАК ДатаСобытия
	|ИЗ
	|	ВТВыборка КАК ВТВыборка";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаПериод = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ТаблицаПериод.Количество() > 0 Тогда
		ДатаПолученияРасчетныхДанных = КонецМесяца(ТаблицаПериод[0].ДатаСобытия) + 1;
	КонецЕсли;
	
	Если ДатаПолученияРасчетныхДанных < КонецДня(ДатаДанных) Тогда
		ДатаПолученияРасчетныхДанных = КонецДня(ДатаДанных);
	КонецЕсли;
	
	//------------------------------------------------------------------------------------------------------------
	// РАСЧЕТ
	//------------------------------------------------------------------------------------------------------------
	
	//выборка данных: сотрудники + кадровый ФОТ
	ИмяВТСотрудникиОрганизации = "ВТСотрудникиОрганизацииПредварительно";
	КадровыеДанные = "Организация,Подразделение,Должность,ФИОПолные,Состояние,";
	КадровыеДанные = КадровыеДанные + "ТарифнаяСтавка,ФОТ";
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода = КонецДня(ДатаДанных);
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода = КонецДня(ДатаДанных);
	ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные = КадровыеДанные;
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций, ИмяВТСотрудникиОрганизации);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФизическоеЛицо КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Организация КАК Справочник.Организации) КАК Организация,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Подразделение КАК Справочник.ПодразделенияОрганизаций) КАК Подразделение,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Должность КАК Справочник.Должности) КАК Должность,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Состояние КАК Перечисление.СостоянияСотрудника) КАК Состояние,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФИОПолные КАК СТРОКА(255)) КАК СотрудникФИО,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ТарифнаяСтавка КАК ЧИСЛО(15, 2)) КАК Оклад2,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФОТ КАК ЧИСЛО(15, 2)) КАК ФОТ2,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК Оклад,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК ПремияПроцент,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК ФОТ,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК ОкладРасхождение,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК ФОТРасхождение,
	|	ЛОЖЬ КАК ЕстьОшибка
	|ПОМЕСТИТЬ ВТвыбор
	|ИЗ
	|	ВТСотрудникиОрганизацииПредварительно КАК ВТСотрудникиОрганизацииПредварительно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТвыбор.Сотрудник,
	|	ВТвыбор.ФизическоеЛицо,
	|	ВТвыбор.Организация,
	|	ВТвыбор.Подразделение,
	|	ВТвыбор.Должность,
	|	ВТвыбор.Состояние,
	|	ВТвыбор.СотрудникФИО,
	|	ВТвыбор.Оклад2,
	|	ВТвыбор.ФОТ2,
	|	ВТвыбор.Оклад,
	|	ВТвыбор.ПремияПроцент,
	|	ВТвыбор.ФОТ,
	|	ВТвыбор.ОкладРасхождение,
	|	ВТвыбор.ФОТРасхождение,
	|	ВТвыбор.ЕстьОшибка
	|ИЗ
	|	ВТвыбор КАК ВТвыбор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТвыбор.Организация.Префикс,
	|	ВТвыбор.СотрудникФИО";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
		
	//выборка данных: расчетный ФОТ
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков1", ДатаПолученияРасчетныхДанных);
	
	ОтчетАнализФОТ = Отчеты.ОФК_АнализФОТБанка.Создать();
	Запрос.Текст = ОтчетАнализФОТ.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос;
	ОтчетАнализФОТ = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаРасчетныхДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	//объединение данных ФОТ = кадровый & расчетный
	Для Каждого СтрокаРасчетныхДанных Из ТаблицаРасчетныхДанных Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Сотрудник", СтрокаРасчетныхДанных.Сотрудник);
		НайденныеДанные = ТаблицаДанных.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаДанных Из НайденныеДанные Цикл
			СтрокаДанных.Оклад = СтрокаРасчетныхДанных.Оклад;
			СтрокаДанных.ПремияПроцент = СтрокаРасчетныхДанных.ПремияПроцент;
			СтрокаДанных.ФОТ = СтрокаРасчетныхДанных.ФОТИтог;
		КонецЦикла;
		
	КонецЦикла;
	
	//анализ ошибок
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		//для декретников ФОТ = нулю
		Если СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.ОтпускПоБеременностиИРодам
			ИЛИ СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком Тогда
			
			СтрокаДанных.Оклад = СтрокаДанных.Оклад2;
			СтрокаДанных.ФОТ = 0;
			СтрокаДанных.ФОТ2 = 0;
			
		КонецЕсли;
		
		//расчет расхождений
		СтрокаДанных.ОкладРасхождение = СтрокаДанных.Оклад - СтрокаДанных.Оклад2;
		СтрокаДанных.ФОТРасхождение = СтрокаДанных.ФОТ - СтрокаДанных.ФОТ2;
		
		//определение ошибки (дельта 0.1)
		Если СтрокаДанных.ОкладРасхождение < -0.1 ИЛИ СтрокаДанных.ОкладРасхождение > 0.1 Тогда
			СтрокаДанных.ЕстьОшибка = Истина;
		КонецЕсли;
		Если СтрокаДанных.ФОТРасхождение < -0.1 ИЛИ СтрокаДанных.ФОТРасхождение > 0.1 Тогда
			СтрокаДанных.ЕстьОшибка = Истина;
		КонецЕсли;
		
	КонецЦикла;
		
	//------------------------------------------------------------------------------------------------------------
	// ДЕЙСТВИЯ
	//------------------------------------------------------------------------------------------------------------
	
	//рассылка excel
	Если НужноВысылатьФаил = Истина Тогда
		
		//параметры
		МассивРассылки = Новый Массив;
		
		//получение начальных настроек
		Для Каждого СтрокаНастройки Из ТаблицаНастроек Цикл
			
			Если СтрокаНастройки.ВыгружатьФаил = Ложь Тогда
				Продолжить;
			КонецЕсли;
						
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Кому",			СокрЛП(СтрокаНастройки.ПолучательПочта));
			СтруктураПараметров.Вставить("УчетнаяЗапись",	СтрокаНастройки.УчетнаяЗапись);
			СтруктураПараметров.Вставить("ТемаПисьма",		"Сформирована выгрузка по ФОТ. Данные на начало " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + ".");
			СтруктураПараметров.Вставить("ТелоПисьма",		"");
			СтруктураПараметров.Вставить("Вложения",		Неопределено);
			СтруктураПараметров.Вставить("Каталог",			СокрЛП(СтрокаНастройки.Каталог));
			СтруктураПараметров.Вставить("ИмяФайла",		"");
			СтруктураПараметров.Вставить("ИмяФайла2",		"");
			СтруктураПараметров.Вставить("Ошибка",			Ложь);
			
			МассивРассылки.Добавить(СтруктураПараметров);
			
		КонецЦикла;
		
		//формирование файлов
		СформироватьФаилЕкселПоФОТ(ТаблицаДанных, МассивРассылки, ДатаДанных);
		
		//формируем текст письма
		Для Каждого СтруктураПараметров Из МассивРассылки Цикл
			
			ТелоПисьма = "";
			
			Если СтруктураПараметров.Ошибка = Истина Тогда
				
				ТелоПисьма = "На дату " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + "." + Символы.ПС;
				ТелоПисьма = ТелоПисьма + "НЕ сформирована выгрузка по ФОТ." + Символы.ПС;
				ТелоПисьма = ТелоПисьма + "Описание ошибки:" + Символы.ПС;
				ТелоПисьма = ТелоПисьма + СтруктураПараметров.ТелоПисьма;
				
			Иначе
				
				ТелоПисьма = "На дату " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + "." + Символы.ПС;
				ТелоПисьма = ТелоПисьма + "Сформирована выгрузка по ФОТ. Фаил во вложении.";
				ТелоПисьма = ТелоПисьма + Символы.ПС;
				
			КонецЕсли;
			
			СтруктураПараметров.Вставить("ТелоПисьма", ТелоПисьма);
			
		КонецЦикла;
		
		//добавляем вложение
		Для Каждого СтруктураПараметров Из МассивРассылки Цикл
			Если СтруктураПараметров.Ошибка = Ложь Тогда
				
				ДвоичныеДанные = Новый ДвоичныеДанные(СтруктураПараметров.ИмяФайла);
				АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
				
				//добавим фаил во вложение
				Вложения = Новый Массив;
				ОписаниеВложения = Новый Структура;
				ОписаниеВложения.Вставить("Представление", СтруктураПараметров.ИмяФайла2);
				ОписаниеВложения.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
				ОписаниеВложения.Вставить("Кодировка", "");
				ОписаниеВложения.Вставить("Идентификатор", СтруктураПараметров.ИмяФайла2);
				Вложения.Добавить(ОписаниеВложения);
				СтруктураПараметров.Вставить("Вложения", Вложения);
				
			КонецЕсли;
		КонецЦикла;
		
		//отправка писем
		ОтправкаПисем(МассивРассылки);
		
		//удаление временных файлов
		Для Каждого СтруктураПараметров Из МассивРассылки Цикл
			Попытка
				УдалитьФайлы(СтруктураПараметров.ИмяФайла);
			Исключение
			КонецПопытки;
		КонецЦикла;
		
	КонецЕсли;
	
	//информирование
	Если НужноИнформироватьОСверке = Истина Тогда
		
		//текст оишбки
		ЕстьОшибка = Ложь;
		ТекстОшибки = "На дату " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + "." + Символы.ПС;
		ТекстОшибки = ТекстОшибки + "Выявлены сотрудники с расхождением между кадровым и расчетным ФОТ:";
		ТекстОшибки = ТекстОшибки + Символы.ПС;
		ТекстОшибки = ТекстОшибки + "---------------------------------------------------------------------------------------------------------------------------";
		
		Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
			
			Если СтрокаДанных.ЕстьОшибка = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			ЕстьОшибка = Истина;
			
			ТекстОшибки = ТекстОшибки + Символы.ПС;
			ТекстОшибки = ТекстОшибки + "" + СокрЛП(СтрокаДанных.СотрудникФИО);
			ТекстОшибки = ТекстОшибки + " | кадровый = " + Формат(СтрокаДанных.ФОТ2, "ЧДЦ=2; ЧГ=0");
			ТекстОшибки = ТекстОшибки + " | расчетный = " + Формат(СтрокаДанных.ФОТ, "ЧДЦ=2; ЧГ=0");
			ТекстОшибки = ТекстОшибки + " | расхождение = " + Формат(СтрокаДанных.ФОТРасхождение, "ЧДЦ=2; ЧГ=0") + " |";
			
		КонецЦикла;
		
		//доп. проверка
		Если ЕстьОшибка = Ложь Тогда
			Возврат;
		КонецЕсли;
		
		//настройки
		МассивРассылки = Новый Массив;
		
		Для Каждого СтрокаНастройки Из ТаблицаНастроек Цикл
			
			Если СтрокаНастройки.СообщениеОСверке = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Кому",			СокрЛП(СтрокаНастройки.ПолучательПочта));
			СтруктураПараметров.Вставить("УчетнаяЗапись",	СтрокаНастройки.УчетнаяЗапись);
			СтруктураПараметров.Вставить("ТемаПисьма",		"Выявлены ошибки в ФОТ. Дата " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + ".");
			СтруктураПараметров.Вставить("ТелоПисьма",		ТекстОшибки + ТекстЛогаРассылки);
			СтруктураПараметров.Вставить("Вложения",		Неопределено);
			
			МассивРассылки.Добавить(СтруктураПараметров);
			
		КонецЦикла;
		
		//отправка писем
		ОтправкаПисем(МассивРассылки);
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
