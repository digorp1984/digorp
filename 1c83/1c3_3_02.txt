#Область ОФК_ДополнительнаяОбработкаДанных

//--> ОФК Дебов Игорь 15.06.2017
Процедура ОтобратьМоскву(ДанныеОтчета)
	
	МассивУдаляемыхГрупп = Новый Массив;
	
	Для Каждого ДанныеОрганизации Из ДанныеОтчета.Строки Цикл
		
		МассивУдаляемыхСтрок = Новый Массив;
		
		Для Каждого ТекСтрока Из ДанныеОрганизации.Строки Цикл 
			Если СтрНайти(СокрЛП(ТекСтрока.АдресПоПропискеПредставление), "Москва") = 0 Тогда
				МассивУдаляемыхСтрок.Добавить(ТекСтрока);
			КонецЕсли;
		КонецЦикла;	
		
		Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
			ДанныеОрганизации.Строки.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		//обновление номера в группе
		НомерПП = 0;
		Для Каждого ТекСтрока Из ДанныеОрганизации.Строки Цикл 
			НомерПП = НомерПП + 1;
			ТекСтрока.СистемныеПоляНомерПоПорядкуВГруппировке = НомерПП;
		КонецЦикла;	
		
		КоличествоСтрок = ДанныеОрганизации.Строки.Количество();
		Если КоличествоСтрок = 0 Тогда
			МассивУдаляемыхГрупп.Добавить(ДанныеОрганизации);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого УдаляемаяГруппа Из МассивУдаляемыхГрупп Цикл
		ДанныеОтчета.Строки.Удалить(УдаляемаяГруппа);
	КонецЦикла;
	
КонецПроцедуры
//<-- ОФК Дебов Игорь 15.06.2017

//--> ОФК Дебов Игорь 16.06.2017
Процедура ДополнитьДанные(ДанныеОтчета)
	
	//параметры
	СостояниеЖенат = Справочники.СостояниеВБраке.НайтиПоКоду(2);
	
	//выделим физ-лиц
	МассивФизическихЛиц = Новый Массив;
	Для Каждого ДанныеОрганизации Из ДанныеОтчета.Строки Цикл
		Для Каждого ТекСтрока Из ДанныеОрганизации.Строки Цикл 
			МассивФизическихЛиц.Добавить(ТекСтрока.ФизическоеЛицо);
		КонецЦикла;	
	КонецЦикла;
	
	//прочитаем данные по родственникам и образованию
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РодственникиФизическихЛиц.Владелец КАК ФизическоеЛицо,
	|	РодственникиФизическихЛиц.Наименование КАК ФИО,
	|	РодственникиФизическихЛиц.СтепеньРодства КАК СтепеньРодства,
	|	РодственникиФизическихЛиц.СтепеньРодства.Код КАК СтепеньРодстваКод,
	|	ВЫБОР
	|		КОГДА РодственникиФизическихЛиц.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА 0
	|		ИНАЧЕ ГОД(РодственникиФизическихЛиц.ДатаРождения)
	|	КОНЕЦ КАК ГодРождения
	|ПОМЕСТИТЬ ВТРодственники
	|ИЗ
	|	Справочник.РодственникиФизическихЛиц КАК РодственникиФизическихЛиц
	|ГДЕ
	|	РодственникиФизическихЛиц.ПометкаУдаления = ЛОЖЬ
	|	И РодственникиФизическихЛиц.Владелец В(&МассивФизическихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбразованиеФизическихЛиц.Владелец КАК ФизическоеЛицо,
	|	ОбразованиеФизическихЛиц.ВидОбразования КАК ВидОбразования,
	|	ОбразованиеФизическихЛиц.УчебноеЗаведение КАК УчебноеЗаведение,
	|	ВЫБОР
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееОбразование)
	|			ТОГДА 10
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееОбразованиеБакалавриат)
	|			ТОГДА 30
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееОбразованиеСпециалитетМагистратура)
	|			ТОГДА 50
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееОбразованиеПодготовкаКадровВысшейКвалификации)
	|			ТОГДА 9
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.ВысшееПрофессиональноеОбразование)
	|			ТОГДА 70
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.Адъюнктура)
	|			ТОГДА 1
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.АспирантураОрдинатураАдъюнктура)
	|			ТОГДА 2
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.Докторантура)
	|			ТОГДА 3
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.Интернатура)
	|			ТОГДА 4
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.Ординатура)
	|			ТОГДА 2
	|		КОГДА ОбразованиеФизическихЛиц.ВидОбразования = ЗНАЧЕНИЕ(Справочник.ВидыОбразованияФизическихЛиц.НеполноеВысшееОбразование)
	|			ТОГДА 90
	|		ИНАЧЕ 99
	|	КОНЕЦ КАК Приоритет,
	|	ОбразованиеФизическихЛиц.Окончание КАК Окончание,
	|	ОбразованиеФизическихЛиц.Квалификация
	|ПОМЕСТИТЬ ВТОбразование
	|ИЗ
	|	Справочник.ОбразованиеФизическихЛиц КАК ОбразованиеФизическихЛиц
	|ГДЕ
	|	ОбразованиеФизическихЛиц.ПометкаУдаления = ЛОЖЬ
	|	И ОбразованиеФизическихЛиц.Владелец В(&МассивФизическихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбразование.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МИНИМУМ(ВТОбразование.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТОбразованиеСрезНаилучшего
	|ИЗ
	|	ВТОбразование КАК ВТОбразование
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбразование.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбразование.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТОбразование.ВидОбразования КАК ВидОбразования,
	|	ВТОбразование.УчебноеЗаведение КАК УчебноеЗаведение,
	|	ВТОбразование.Окончание КАК Окончание,
	|	ВТОбразование.Квалификация
	|ПОМЕСТИТЬ ВТОбразованиеИтог
	|ИЗ
	|	ВТОбразованиеСрезНаилучшего КАК ВТОбразованиеСрезНаилучшего
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбразование КАК ВТОбразование
	|		ПО ВТОбразованиеСрезНаилучшего.ФизическоеЛицо = ВТОбразование.ФизическоеЛицо
	|			И ВТОбразованиеСрезНаилучшего.Приоритет = ВТОбразование.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРодственники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТРодственники.СтепеньРодства КАК СтепеньРодства,
	|	ВТРодственники.ФИО КАК ФИО,
	|	ВТРодственники.ГодРождения КАК ГодРождения
	|ИЗ
	|	ВТРодственники КАК ВТРодственники
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ВТРодственники.СтепеньРодстваКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбразованиеИтог.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТОбразованиеИтог.ВидОбразования КАК ВидОбразования,
	|	ВТОбразованиеИтог.УчебноеЗаведение КАК УчебноеЗаведение,
	|	ВТОбразованиеИтог.Окончание КАК Окончание,
	|	ВТОбразованиеИтог.Квалификация
	|ИЗ
	|	ВТОбразованиеИтог КАК ВТОбразованиеИтог
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ВидОбразования";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаРодственников = РезультатыЗапроса[РезультатыЗапроса.Количество()-2].Выгрузить();
	ТаблицаОбразования = РезультатыЗапроса[РезультатыЗапроса.Количество()-1].Выгрузить();
	
	//добавим новые колонки в дерево
	ДанныеОтчета.Колонки.Добавить("ГодностьОФК", 		ОбщегоНазначения.ОписаниеТипаСтрока(1));
	ДанныеОтчета.Колонки.Добавить("ВидОбразованияОФК", 	ОбщегоНазначения.ОписаниеТипаСтрока(500));
	ДанныеОтчета.Колонки.Добавить("СостояниеВБракеОФК", ОбщегоНазначения.ОписаниеТипаСтрока(500));
	
	//обработаем дерево
	Для Каждого ДанныеОрганизации Из ДанныеОтчета.Строки Цикл
		Для Каждого ТекСтрока Из ДанныеОрганизации.Строки Цикл 
			
			//параметры
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ФизическоеЛицо", ТекСтрока.ФизическоеЛицо);
			
			//годность (7)
			ГодностьОФК = "-";
			Если ЗначениеЗаполнено(ТекСтрока.Годность) Тогда
				ГодностьОФК = ВРег(Лев(СокрЛП(ТекСтрока.Годность), 1));
			КонецЕсли;
			ТекСтрока.ГодностьОФК = ГодностьОФК;
			
			//образование (10)
			ВидОбразованияОФК = "";
			
			Строкиобразования = ТаблицаОбразования.НайтиСтроки(СтруктураПоиска);
			Если Строкиобразования.Количество() > 0 Тогда
				
				СтрокаОбразования = Строкиобразования[0];
				Если ЗначениеЗаполнено(СтрокаОбразования.ВидОбразования) Тогда
					ВидОбразованияОФК = ВидОбразованияОФК + ?(ВидОбразованияОФК = "", "", Символы.ПС);
					ВидОбразованияОФК = ВидОбразованияОФК + СокрЛП(СтрокаОбразования.ВидОбразования) + ";";
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаОбразования.УчебноеЗаведение) Тогда
					ВидОбразованияОФК = ВидОбразованияОФК + ?(ВидОбразованияОФК = "", "", Символы.ПС);
					ВидОбразованияОФК = ВидОбразованияОФК + СокрЛП(СтрокаОбразования.УчебноеЗаведение) + ";";
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаОбразования.Окончание) Тогда
					ВидОбразованияОФК = ВидОбразованияОФК + ?(ВидОбразованияОФК = "", "", Символы.ПС);
					ВидОбразованияОФК = ВидОбразованияОФК + Формат(СтрокаОбразования.Окончание, "ДФ=yyyy") + "г.;";
				КонецЕсли;
				Если НЕ СокрЛП(СтрокаОбразования.Квалификация) = "" Тогда
					ВидОбразованияОФК = ВидОбразованияОФК + ?(ВидОбразованияОФК = "", "", Символы.ПС);
					ВидОбразованияОФК = ВидОбразованияОФК + СокрЛП(СтрокаОбразования.Квалификация) + ";";
				КонецЕсли;
				
			КонецЕсли;
			
			ТекСтрока.ВидОбразованияОФК = ВидОбразованияОФК;
			
			//место жительства (11)
			Если НЕ СокрЛП(ТекСтрока.АдресПоПропискеПредставление) = "" Тогда
				ТекСтрока.АдресПоПропискеПредставление = "Прописан:" + Символы.ПС + СокрЛП(ТекСтрока.АдресПоПропискеПредставление);
			КонецЕсли;
			
			//семейное положение (11)
			МассивОтбораСтепениРодства = Новый Массив;
			СостояниеВБракеОФК = "";
			
			Если ТекСтрока.СостояниеВБраке = СостояниеЖенат Тогда
				
				СостояниеВБракеОФК = "Женат.";
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Муж"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Жена"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Сын"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Дочь"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Пасынок"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Падчерица"));
				
			Иначе
				
				СостояниеВБракеОФК = "Холост.";
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Сын"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Дочь"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Пасынок"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Падчерица"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Отец"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Мать"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Брат"));
				МассивОтбораСтепениРодства.Добавить(Справочники.СтепениРодстваФизическихЛиц.НайтиПоНаименованию("Сестра"));
				
			КонецЕсли;
			
			СтрокиРодственников = ТаблицаРодственников.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаРодственника Из СтрокиРодственников Цикл
				
				Если МассивОтбораСтепениРодства.Найти(СтрокаРодственника.СтепеньРодства) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				РодственникТекст = "";
				
				Если ЗначениеЗаполнено(СтрокаРодственника.СтепеньРодства) Тогда
					РодственникТекст = РодственникТекст + СокрЛП(СтрокаРодственника.СтепеньРодства) + ": ";
				КонецЕсли;
				Если НЕ СокрЛП(СтрокаРодственника.ФИО) = "" Тогда
					РодственникТекст = РодственникТекст + СокрЛП(СтрокаРодственника.ФИО);
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаРодственника.ГодРождения) Тогда
					РодственникТекст = РодственникТекст + ", " + Формат(СтрокаРодственника.ГодРождения, "ЧДЦ=; ЧГ=0") + "г.р.";
				КонецЕсли;
				
				СостояниеВБракеОФК = СостояниеВБракеОФК + Символы.ПС + РодственникТекст + ";";
				
			КонецЦикла;
			
			ТекСтрока.СостояниеВБракеОФК = СостояниеВБракеОФК;
			
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры
//<-- ОФК Дебов Игорь 16.06.2017

#КонецОбласти
