//головная функция загрузки	
Функция ЗагрузкаXMLНачало()

    //общие параметры
	ОшибкиЗагрузки=Ложь;
	ЗапросДокРеализаций=Новый Запрос;
	ЗапросДокРеализаций.Текст=
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	ПОДСТРОКА(РеализацияТоваровУслуг.Комментарий, 1, 15) КАК НомерСчета
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Проведен = ИСТИНА
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	ВыборкаДокРеал=ЗапросДокРеализаций.Выполнить().Выбрать();
	
	//чтение
	ФаилXML	= Новый ЧтениеXML;
	ПостроительDOM	= Новый ПостроительDOM;
	ФаилXML.ОткрытьФайл(ПутьКФайлу);	
	ФаилDOM=ПостроительDOM.Прочитать(ФаилXML);
	ФаилXML.Закрыть();
	
	//проверка
	invoice=ФаилDOM.ПолучитьЭлементыПоИмени("invoice");
	Если invoice.Количество()=0 Тогда
		ДобавитьСообщениеВЛог("     Ни один тег <invoice> не обнаружен");
		Возврат Истина;
	КонецЕсли;
	
	//чтение + формирование данных
	Для НомСчета = 0 по (invoice.Количество()-1)  цикл	
		//чтение организации
		СчетDOM=invoice.Элемент(НомСчета);
		СписокПараметровДок.Очистить();
		ТабУслуги.Очистить();
		ТабПлатежи.Очистить();
		СписокПараметровДок.Добавить(УбратьКавычки(СчетDOM.ПолучитьАтрибут("id")),"Номер");
		
		Для НомРеквизита = 0 По (СчетDOM.ДочерниеУзлы.Количество()-1) Цикл				
			РеквизитDOM = СчетDOM.ДочерниеУзлы.Элемент(НомРеквизита);
			НаимРеквизита = СокрЛП(РеквизитDOM.ИмяЭлемента);
			ЗначениеРеквизита = УбратьКавычки(РеквизитDOM.ТекстовоеСодержимое);
			
			Если НаимРеквизита = "date" Тогда
				//дата док
				СписокПараметровДок.Добавить(ДатаМ(ЗначениеРеквизита),"Дата");
			ИначеЕсли НаимРеквизита = "rate" Тогда
				//курс валюты
				СписокПараметровДок.Добавить(ПреобразоватьКЧислу(ЗначениеРеквизита),"Курс");
			ИначеЕсли НаимРеквизита = "operator" Тогда
				//сведения о фирме
				ПолучитьСсылкуНаОрганизацию(РеквизитDOM);
			ИначеЕсли НаимРеквизита = "user" Тогда
				//сведения о контрагенте
				ПолучитьСсылкуНаКонтрагентаИДоговор(РеквизитDOM);
			ИначеЕсли НаимРеквизита = "service" Тогда
				//сведения об услугах
				ДобавитьУслугу(РеквизитDOM);
			ИначеЕсли НаимРеквизита = "payments" Тогда
				//сведения о платежах
				ДобавитьПлатеж(РеквизитDOM);
			КонецЕсли;                                       
		КонецЦикла;
		
		//Проверка логической целостности данных
		ДобавитьСообщениеВЛог("     Проверка логической целостности данных ...");
		ПроверкаЛЦ=ПроверкаЛогическойЦелостности();
		Если ПроверкаЛЦ=Истина Тогда
			ДобавитьСообщениеВЛог("     Проверка логической целостности данных ЗАВЕРШЕНА!");	
		Иначе
			ДобавитьСообщениеВЛог("     Исправьте ошибки логической целостности и повторите загрузку!");	
			ОшибкиЗагрузки=Истина;
		КонецЕсли;
		
		//формирование документов
		Если ОшибкиЗагрузки=Ложь Тогда
			ДобавитьСообщениеВЛог("     Формирование документов по организации="+СокрЛП(НайтиПараметр("Организация",2))+"...");
			СоздатьСчет();
			Если СоздаватьРеализациюИСчф=Истина Тогда
				Если НЕ НайтиПараметр("СчетСсылка",2)=Документы.СчетНаОплатуПокупателю.ПустаяСсылка() Тогда
					СоздатьРеализациюТоваровИУслуг(ВыборкаДокРеал);
					Если СоздаватьПлатежи=Истина Тогда
						СоздатьПлатежи();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ДобавитьСообщениеВЛог("     Документы по организации="+СокрЛП(НайтиПараметр("Организация",2))+" СФОРМИРОВАННЫ!");
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОшибкиЗагрузки;
	
КонецФункции





//создание документа реализация товаров и услуг
Процедура СоздатьРеализациюТоваровИУслуг(ВыборкаДокРеал)
	
    //проверка 1
	НомерСчета=НайтиПараметр("Номер",2);
    СуммаПоУслугам=ТабУслуги.Итог("Сумма");
	Если СуммаПоУслугам=0 Тогда
		ДобавитьСообщениеВЛог("          По счету: "+НомерСчета+", общая сумма услуг равна НУЛЮ -> а значит не нужно создавать документ реализацию товаров и услуг");
		Возврат;
	КонецЕсли;

	//проверка 2
	НомерСчетаУнифицированный=Лев(НомерСчета+"################",15);
	Если НомерДоговраИзАСР=Истина Тогда
		РеалНайдена=Ложь;
		НовыйПоиск=Новый Структура("НомерСчета");
		НовыйПоиск.НомерСчета=НомерСчетаУнифицированный;
		ВыборкаДокРеал.Сбросить();
		Пока ВыборкаДокРеал.НайтиСледующий(НовыйПоиск) Цикл
			РеалНайдена=Истина;
			ДобавитьСообщениеВЛог("          По счету: "+НомерСчета+", уже создан документ реализации товаров и услуг: "+СокрЛП(ВыборкаДокРеал.Ссылка));
		КонецЦикла;
		Если РеалНайдена=Истина Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	//начальные параметры
	КонфИд=НайтиПараметр("КонфИд");
	ДатаСчета=НайтиПараметр("Дата",2);
	ДокРТУ=Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	
	//заполнение шапки документа
	ДокРТУ.Дата=ДатаСчета;
	ДокРТУ.Организация=НайтиПараметр("Организация",2);
	ДокРТУ.Контрагент=НайтиПараметр("Контрагент",2);
	ДокРТУ.ДоговорКонтрагента=НайтиПараметр("Договор",2);
	ДокРТУ.ВидОперации=Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	ДокРТУ.Комментарий=НомерСчетаУнифицированный+" Введен на основании: "+НайтиПараметр("СчетСсылка",2);
	ДокРТУ.ВалютаДокумента=НайтиПараметр("Валюта");
	ДокРТУ.СуммаВключаетНДС=СуммаВклНДС;
	ДокРТУ.КратностьВзаиморасчетов=НайтиПараметр("Курс",2);
	ДокРТУ.СчетУчетаРасчетовСКонтрагентом=НайтиПараметр("Счет60.01");
	ДокРТУ.СчетУчетаРасчетовПоАвансам=НайтиПараметр("Счет60.02");
	ДокРТУ.СпособЗачетаАвансов=Перечисления.СпособыЗачетаАвансов.Автоматически;
	
	//Создание табличных строк по услугам
	СуммаДокумента=0;
	Для Каждого СтрУслуг Из ТабУслуги Цикл
		Если СтрУслуг.Сумма=0 Тогда
			Продолжить;
		КонецЕсли;
		
		//создадим документ реализации услуг
		НовСтр=ДокРТУ.Услуги.Добавить();
		НовСтр.Номенклатура=СтрУслуг.Номенклатура;
		НовСтр.Содержание=СокрЛП(СтрУслуг.Номенклатура);
		НовСтр.Количество=СтрУслуг.Количество;
		НовСтр.Цена=СтрУслуг.Цена;
		НовСтр.Сумма=СтрУслуг.Сумма;
		НовСтр.СтавкаНДС=НайтиПараметр("НДС");
		НовСтр.СуммаНДС=СтрУслуг.СуммаНДС;
		СуммаДокумента=СуммаДокумента+НовСтр.Сумма;
		
		//счета в документе
		НовСтр.СчетДоходов=НайтиПараметр("Счет91.01");
		НовСтр.СчетРасходов=НайтиПараметр("Счет91.02");
		НовСтр.СчетУчетаНДСПоРеализации=НайтиПараметр("Счет19.03");
		Если (СокрЛП(НовСтр.СчетДоходов)="90.01.1") И (НомГруппаДоходов.Пустая()=Ложь) Тогда
			НовСтр.Субконто=НомГруппаДоходов;
		КонецЕсли;
	КонецЦикла;
	ДокРТУ.СуммаДокумента=СуммаДокумента;
	
	//запись и проведение документа
	ОшибкаЗаписиПроведения=Ложь;
	Попытка
		Если ФлПроводить=Истина Тогда
			ДокРТУ.Записать(РежимЗаписиДокумента.Запись);
			ДокРТУ.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокРТУ.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		ДобавитьСообщениеВЛог("          Создан документ - реализация товаров и услуг, на основании счета: "+СокрЛП(НайтиПараметр("СчетСсылка",2)));
		СписокПараметровДок.Добавить(ДокРТУ.Ссылка,"РТУСсылка");
	Исключение
		ДобавитьСообщениеВЛог("          Не удалось запись/проведение документа - реализация товаров и услуг, на основании счета: "+СокрЛП(НайтиПараметр("СчетСсылка",2)));
		ДобавитьСообщениеВЛог(ОписаниеОшибки());
		ОшибкаЗаписиПроведения=Истина;
	КонецПопытки;
	Если ОшибкаЗаписиПроведения=Ложь Тогда
		СоздатьСчФактуру();
	КонецЕсли;
	
КонецПроцедуры
