//получаем расчетные данные
&НаСервере
Процедура ПолучитьСтруктуруТаблицыДанных(СтруктураПараметров)
	
	//параметры
	ИспользоватьСФ = Ложь;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		ИспользоватьСФ = Истина;
	КонецЕсли;
	
	//расчет данных
	ЗапросВзносы=Новый Запрос;
	ЗапросВзносы.УстановитьПараметр("НачПериод",	НачалоМесяца(Объект.МесяцНачисления));
	ЗапросВзносы.УстановитьПараметр("КонПериод",	КонецМесяца(Объект.МесяцНачисления));
	ЗапросВзносы.УстановитьПараметр("Организация",	Объект.Организация);
	
	//справочно: Данные получаем в разрезе физ-лиц и по группе в справочнике
	//	определим разбивку по видам затрат (Южный проект, БГОК и т.д.).
	//	Но если включена опция - ИспользоватьСтатьиФинансированияЗарплата, то
	//	страховые взносы распределяются по статьм финансирования.
	
	ЗапросВзносы.Текст =
	"ВЫБРАТЬ
	|	ИсчисленныеСтраховыеВзносыОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИсчисленныеСтраховыеВзносыОбороты.ФизическоеЛицо.Родитель КАК Родитель0,
	|	ИсчисленныеСтраховыеВзносыОбороты.ФизическоеЛицо.Родитель.Родитель КАК Родитель1,
	|	ИсчисленныеСтраховыеВзносыОбороты.ПФРДоПредельнойВеличиныОборот + ИсчисленныеСтраховыеВзносыОбороты.ПФРСПревышенияОборот + ИсчисленныеСтраховыеВзносыОбороты.ПФРПоСуммарномуТарифуОборот + ИсчисленныеСтраховыеВзносыОбороты.ПФРПоСуммарномуТарифуСПревышенияОборот КАК СуммаПлатежаПФР,
	|	ИсчисленныеСтраховыеВзносыОбороты.ФФОМСОборот КАК СуммаПлатежаФФОМС,
	|	ИсчисленныеСтраховыеВзносыОбороты.ФССОборот КАК СуммаПлатежаФСС,
	|	ИсчисленныеСтраховыеВзносыОбороты.ФССНесчастныеСлучаиОборот КАК СуммаПлатежаОСС
	|ПОМЕСТИТЬ ВТСтраховыеВзносы
	|ИЗ
	|	РегистрНакопления.ИсчисленныеСтраховыеВзносы.Обороты(&НачПериод, &КонПериод, , Организация = &Организация) КАК ИсчисленныеСтраховыеВзносыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПособияПоСоциальномуСтрахованиюОбороты.ФизическоеЛицо,
	|	ПособияПоСоциальномуСтрахованиюОбороты.ФизическоеЛицо.Родитель КАК Родитель0,
	|	ПособияПоСоциальномуСтрахованиюОбороты.ФизическоеЛицо.Родитель.Родитель КАК Родитель1,
	|	0 КАК СуммаПлатежаПФР,
	|	0 КАК СуммаПлатежаФФОМС,
	|	ПособияПоСоциальномуСтрахованиюОбороты.СуммаВсегоОборот + ПособияПоСоциальномуСтрахованиюОбороты.СуммаФинансируемаяРаботодателемОборот КАК СуммаПлатежаФСС,
	|	0 КАК СуммаПлатежаОСС
	|ПОМЕСТИТЬ ВТПособияФСС
	|ИЗ
	|	РегистрНакопления.ПособияПоСоциальномуСтрахованию.Обороты(&НачПериод, &КонПериод, , Организация = &Организация) КАК ПособияПоСоциальномуСтрахованиюОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПособияПоУходуЗаРебенкомОбороты.ФизическоеЛицо,
	|	ПособияПоУходуЗаРебенкомОбороты.ФизическоеЛицо.Родитель,
	|	ПособияПоУходуЗаРебенкомОбороты.ФизическоеЛицо.Родитель.Родитель,
	|	0,
	|	0,
	|	ПособияПоУходуЗаРебенкомОбороты.СуммаВсегоПоУходуЗаПервымРебенкомОборот + ПособияПоУходуЗаРебенкомОбороты.СуммаВсегоПоУходуЗаВторымРебенкомОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.ПособияПоУходуЗаРебенком.Обороты(&НачПериод, &КонПериод, , Организация = &Организация) КАК ПособияПоУходуЗаРебенкомОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПособияФСС.ФизическоеЛицо,
	|	ВТПособияФСС.Родитель0,
	|	ВТПособияФСС.Родитель1,
	|	СУММА(ВТПособияФСС.СуммаПлатежаПФР) КАК СуммаПлатежаПФР,
	|	СУММА(ВТПособияФСС.СуммаПлатежаФФОМС) КАК СуммаПлатежаФФОМС,
	|	СУММА(ВТПособияФСС.СуммаПлатежаФСС) КАК СуммаПлатежаФСС,
	|	СУММА(ВТПособияФСС.СуммаПлатежаОСС) КАК СуммаПлатежаОСС
	|ПОМЕСТИТЬ ВТПособияФССИтог
	|ИЗ
	|	ВТПособияФСС КАК ВТПособияФСС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПособияФСС.ФизическоеЛицо,
	|	ВТПособияФСС.Родитель0,
	|	ВТПособияФСС.Родитель1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСтраховыеВзносы.ФизическоеЛицо,
	|	ВТСтраховыеВзносы.Родитель0,
	|	ВТСтраховыеВзносы.Родитель1,
	|	ВТСтраховыеВзносы.СуммаПлатежаПФР,
	|	ВТСтраховыеВзносы.СуммаПлатежаФФОМС,
	|	ВТСтраховыеВзносы.СуммаПлатежаФСС,
	|	ВТСтраховыеВзносы.СуммаПлатежаОСС
	|ПОМЕСТИТЬ ВТОбщая
	|ИЗ
	|	ВТСтраховыеВзносы КАК ВТСтраховыеВзносы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТПособияФССИтог.ФизическоеЛицо,
	|	ВТПособияФССИтог.Родитель0,
	|	ВТПособияФССИтог.Родитель1,
	|	-ВТПособияФССИтог.СуммаПлатежаПФР,
	|	-ВТПособияФССИтог.СуммаПлатежаФФОМС,
	|	-ВТПособияФССИтог.СуммаПлатежаФСС,
	|	-ВТПособияФССИтог.СуммаПлатежаОСС
	|ИЗ
	|	ВТПособияФССИтог КАК ВТПособияФССИтог
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбщая.ФизическоеЛицо,
	|	ВТОбщая.Родитель0 КАК Родитель0,
	|	ВТОбщая.Родитель1 КАК Родитель1,
	|	СУММА(ВТОбщая.СуммаПлатежаПФР) КАК СуммаПлатежаПФР,
	|	СУММА(ВТОбщая.СуммаПлатежаФФОМС) КАК СуммаПлатежаФФОМС,
	|	СУММА(ВТОбщая.СуммаПлатежаФСС) КАК СуммаПлатежаФСС,
	|	СУММА(ВТОбщая.СуммаПлатежаОСС) КАК СуммаПлатежаОСС
	|ИЗ
	|	ВТОбщая КАК ВТОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбщая.ФизическоеЛицо,
	|	ВТОбщая.Родитель0,
	|	ВТОбщая.Родитель1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Родитель1,
	|	Родитель0";
	
	ТблВзносы = ЗапросВзносы.Выполнить().Выгрузить();
	ТблВзносы.Колонки.Добавить("АФМ_Проект", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	
	//распределение по статья финансирования
	Если ИспользоватьСФ = Истина Тогда
		
		ФизическиеЛица = ТблВзносы.ВыгрузитьКолонку("ФизическоеЛицо");
		ДатаНачалаНП = НачалоМесяца(Объект.МесяцНачисления);
		ДатаКонцаНП = КонецМесяца(Объект.МесяцНачисления);
		
		ТблВзносы.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		Для Каждого СтрВзносов Из ТблВзносы Цикл
			СтрВзносов.Период = ДатаНачалаНП;
		КонецЦикла;
		
		//выборка данных
		ТаблицаДолиРаспределения = АФМ_ИзменениеТиповогоФункционала.ПолучитьТаблицуРаспределения(ФизическиеЛица, ИспользоватьСФ, ДатаНачалаНП, ДатаКонцаНП);
		
		//пост обработка долей распределения:
		//	удаление долей по другим организация (вариант когда сотрудник меняет организацию в середине месяца)
		МассивУдаляемыхСтрок = Новый Массив;
		Для Каждого СтрокаРаспределения Из ТаблицаДолиРаспределения Цикл
			Если НЕ Объект.Организация = СтрокаРаспределения.Организация Тогда
				МассивУдаляемыхСтрок.Добавить(СтрокаРаспределения);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из  МассивУдаляемыхСтрок Цикл
			ТаблицаДолиРаспределения.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		//распределение
		ПоляРаспределения = "СуммаПлатежаПФР,СуммаПлатежаФФОМС,СуммаПлатежаФСС,СуммаПлатежаОСС";
		ТблВзносы = АФМ_ИзменениеТиповогоФункционала.РаспределениеПоПроектам(ТблВзносы, ТаблицаДолиРаспределения, "СтатьяФинансирования", "ФизическоеЛицо", Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка(), "Период", ПоляРаспределения);
		
	КонецЕсли;
	
	//общие итоги
	СуммаПлатежаФССИтог = ТблВзносы.Итог("СуммаПлатежаФСС");
	Если СуммаПлатежаФССИтог < 0 Тогда
		//при расчете ФСС вычитаем пособия за счет ФСС, если сумма меньше нуля то ничего перечислять не нужно
		СуммаПлатежаФССИтог = 0;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("СуммаПлатежаПФР",		ТблВзносы.Итог("СуммаПлатежаПФР"));
	СтруктураПараметров.Вставить("СуммаПлатежаФФОМС",	ТблВзносы.Итог("СуммаПлатежаФФОМС"));
	СтруктураПараметров.Вставить("СуммаПлатежаФСС",		СуммаПлатежаФССИтог);
	СтруктураПараметров.Вставить("СуммаПлатежаОСС",		ТблВзносы.Итог("СуммаПлатежаОСС"));
	
	//итоги по проектам	
	ТаблицаДанных=Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Порядок");
	ТаблицаДанных.Колонки.Добавить("Проект");
	ТаблицаДанных.Колонки.Добавить("ПроектСуммаПлатежаПФР");
	ТаблицаДанных.Колонки.Добавить("ПроектСуммаПлатежаФФОМС");
	ТаблицаДанных.Колонки.Добавить("ПроектСуммаПлатежаФСС");
	ТаблицаДанных.Колонки.Добавить("ПроектСуммаПлатежаОСС");
	
	Для Каждого СтрВзносов Из ТблВзносы Цикл
		
		Если ИспользоватьСФ = Ложь Тогда
			
			//по группе физ-лиц
			ПустаяСсылка=Справочники.ФизическиеЛица.ПустаяСсылка();
			Проект=ПустаяСсылка;
			Если (СтрВзносов.Родитель1 <> ПустаяСсылка) И (СтрВзносов.Родитель1 <> Null) Тогда
				Проект=СтрВзносов.Родитель1;
			ИначеЕсли (СтрВзносов.Родитель0 <> ПустаяСсылка) И (СтрВзносов.Родитель0 <> Null) Тогда
				Проект=СтрВзносов.Родитель0;
			КонецЕсли;
			
		Иначе
			
			//по статьям финансирования
			ПустаяСсылка=Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка();
			Проект=ПустаяСсылка;
			Если НЕ СтрВзносов.АФМ_Проект = ПустаяСсылка Тогда
				Проект=СтрВзносов.АФМ_Проект;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Проект = ПустаяСсылка Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаПлатежаФСС = СтрВзносов.СуммаПлатежаФСС;
		Если СуммаПлатежаФССИтог <= 0 Тогда
			СуммаПлатежаФСС = 0;
		КонецЕсли;
		
		ПорядокПроекта = 0;
		Если СтрЧислоВхождений(СокрЛП(Проект), "Основная деятельность") > 0 Тогда
			ПорядокПроекта = 9;
		КонецЕсли;
		
		СтрокаДанных=ТаблицаДанных.Добавить();
		СтрокаДанных.Порядок=ПорядокПроекта;
		СтрокаДанных.Проект=Проект;
		СтрокаДанных.ПроектСуммаПлатежаПФР=СтрВзносов.СуммаПлатежаПФР;
		СтрокаДанных.ПроектСуммаПлатежаФФОМС=СтрВзносов.СуммаПлатежаФФОМС;
		СтрокаДанных.ПроектСуммаПлатежаФСС=СуммаПлатежаФСС;
		СтрокаДанных.ПроектСуммаПлатежаОСС=СтрВзносов.СуммаПлатежаОСС;
		
	КонецЦикла;
	
	ТаблицаДанных.Свернуть("Порядок, Проект", "ПроектСуммаПлатежаПФР, ПроектСуммаПлатежаФФОМС, ПроектСуммаПлатежаФСС, ПроектСуммаПлатежаОСС");
	ТаблицаДанных.Сортировать("Порядок, Проект");
	
	//удалим нулевые строки
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		Если СтрокаДанных.ПроектСуммаПлатежаПФР = 0 И
			СтрокаДанных.ПроектСуммаПлатежаФФОМС = 0 И
			СтрокаДанных.ПроектСуммаПлатежаФСС = 0 И
			СтрокаДанных.ПроектСуммаПлатежаОСС = 0 Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаДанных);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрока Из  МассивУдаляемыхСтрок Цикл
		ТаблицаДанных.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
	//преобразование структуры расчетных данных
	МассивДанных=Новый Массив;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		МассивСтроки=Новый Массив;
		МассивСтроки.Добавить(СокрЛП(СтрокаДанных.Проект));
		МассивСтроки.Добавить(СтрокаДанных.ПроектСуммаПлатежаПФР);
		МассивСтроки.Добавить(СтрокаДанных.ПроектСуммаПлатежаФФОМС);
		МассивСтроки.Добавить(СтрокаДанных.ПроектСуммаПлатежаФСС);
		МассивСтроки.Добавить(СтрокаДанных.ПроектСуммаПлатежаОСС);
		МассивДанных.Добавить(МассивСтроки);
		
	КонецЦикла;
		
	СтруктураПараметров.Вставить("МассивДанных", МассивДанных);
	
КонецПроцедуры
