#Область Этап3_Отправка

&НаКлиенте
Процедура Отправить(Команда)
	
	//проверка
	ОчиститьСообщения();
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	Если Объект.РасчетныеЛисты.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен список расчетных листков для рассылки");
		Возврат;
	КонецЕсли;
	
	//сообщение
	ТекстСообщения = НСтр("ru = 'Выполнение рассылки расчетных листков ...'");
	Состояние(ТекстСообщения);
	
	//очистка ссылок в таблице данных
	Для Каждого СтрокаДанных Из Объект.РасчетныеЛисты Цикл
		Если СтрокаДанных.Отправлено = Ложь Тогда
			СтрокаДанных.ТекстОшибкиОтправки = "";
		КонецЕсли;
	КонецЦикла;
	
	//параметры выгрузки
	ПараметрыВыгрузки = Новый Структура();
	ПараметрыВыгрузки.Вставить("ИДПрограммы",					"1С: Зарплата и Управление Предприятием, редакция 3.1");
	ПараметрыВыгрузки.Вставить("Организация",					Объект.Организация);
	ПараметрыВыгрузки.Вставить("ПарольLotus",					СокрЛП(Объект.ПарольLotus));
	ПараметрыВыгрузки.Вставить("ДатаВыгрузки",					Объект.ДатаВыгрузки);
	ПараметрыВыгрузки.Вставить("ПериодРегистрации",				Объект.ПериодРегистрации);
	ПараметрыВыгрузки.Вставить("ВыключитьОповещениеСотруднику",	Объект.ВыключитьОповещениеСотруднику);
	ДополнитьПараметрыНаСервере(ПараметрыВыгрузки);
	
	//получение структуры данных
	МассивДанных = ПолучитьСтруктуруДанныхДляЛотус(ПараметрыВыгрузки);
	Если МассивДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//выполним рассылку
	ВыполнитьРассылкуВЛотус(ПараметрыВыгрузки, МассивДанных);	
	
	//записать историю
	ЗаписатьИсториюРассылки(МассивДанных);
	
КонецПроцедуры

..............

&НаСервере
Процедура ДополнитьСтруктуруПозицииНаСервере(СтруктураПозиции)
	
	СтруктураПозиции.Вставить("ТабНомер", СокрЛП(СтруктураПозиции.Сотрудник.Код));
	СтруктураПозиции.Вставить("ФИОСотрудника", СокрЛП(СтруктураПозиции.Сотрудник.Наименование));
	
	СтруктураПозиции.Вставить("ТабНомерРуководитель", "");
	СтруктураПозиции.Вставить("ФИОРуководитель", "");
	СтруктураПозиции.Вставить("ТабНомерКопия1", "");
	СтруктураПозиции.Вставить("ФИОКопия1", "");
	СтруктураПозиции.Вставить("ТабНомерКопия2", "");
	СтруктураПозиции.Вставить("ФИОКопия2", "");
	СтруктураПозиции.Вставить("ТабНомерКопия3", "");
	СтруктураПозиции.Вставить("ФИОКопия3", "");
	
	Если ЗначениеЗаполнено(СтруктураПозиции.Руководитель) Тогда
		СтруктураПозиции.Вставить("ТабНомерРуководитель", СокрЛП(СтруктураПозиции.Руководитель.Код));
		СтруктураПозиции.Вставить("ФИОРуководитель", СокрЛП(СтруктураПозиции.Руководитель.Наименование));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураПозиции.Копия1) Тогда
		СтруктураПозиции.Вставить("ТабНомерКопия1", СокрЛП(СтруктураПозиции.Копия1.Код));
		СтруктураПозиции.Вставить("ФИОКопия1", СокрЛП(СтруктураПозиции.Копия1.Наименование));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураПозиции.Копия2) Тогда
		СтруктураПозиции.Вставить("ТабНомерКопия2", СокрЛП(СтруктураПозиции.Копия2.Код));
		СтруктураПозиции.Вставить("ФИОКопия2", СокрЛП(СтруктураПозиции.Копия2.Наименование));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураПозиции.Копия3) Тогда
		СтруктураПозиции.Вставить("ТабНомерКопия3", СокрЛП(СтруктураПозиции.Копия3.Код));
		СтруктураПозиции.Вставить("ФИОКопия3", СокрЛП(СтруктураПозиции.Копия3.Наименование));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВыполнитьРассылкуВЛотус(Параметры, МассивДанных)
	
	// инициализация лотус
	ЛотусСессия = Новый COMОбъект("Lotus.NotesSession");
	
	Отказ = Ложь;
	Попытка
		ЛотусСессия.Initialize(Параметры.ПарольLotus);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка соединения с Lotus Notes.", , , ,Отказ);
	КонецПопытки;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// общие параметры
	richStyle1 = ЛотусСессия.CreateRichTextStyle();
	richstyle1.Bold = 0;
	richstyle1.NotesColor = 0;
	richstyle1.FontSize = 10;
	
	richStyle2 = ЛотусСессия.CreateRichTextStyle();
	richstyle2.Bold = 1;
	richstyle2.NotesColor = 0;
	richstyle2.FontSize = 12;
	
	db = ЛотусСессия.Getdatabase(Параметры.БазаДанныхLotus, Параметры.ЛичныйКабинетLotus, False);
	ofkdb = ЛотусСессия.Getdatabase(Параметры.БазаДанныхLotus, Параметры.ТелефонныйСправочникLotus, False);
	
	If Not ofkdb.isopen = true Then
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("БД ""Сотрудники"" не найдена по пути """ + Параметры.ТелефонныйСправочникLotus + """");
		Возврат;
	EndIf;	
	
	tView = ofkdb.Getview("PersonbyTabNumber_1C");
	
	// список пользователей, которые всегда имееют доступ к расчетным листкам
	МассивРасчетчиков = Новый Массив;
	МассивРасчетчиков.Добавить("CN=Evgeniya V Zolotuhina/O=OFKBANK/C=RU"); // Золотухина
	МассивРасчетчиков.Добавить("CN=Natalia A Naumova/O=OFKBANK/C=RU"); // Наумова
	
	ТекущийПользователь = СокрЛП(ЛотусСессия.username);
	Если МассивРасчетчиков.Найти(ТекущийПользователь) = Неопределено Тогда
		МассивРасчетчиков.Добавить(ТекущийПользователь);
	КонецЕсли;
	
	// идентификатор общей ошибки
	isErrorFlag = 0;
	
	// создадим документ для записи ошибок
	error_doc = db.Createdocument(); 
	error_doc.Replaceitemvalue("Form", 		"Memo");
	error_doc.Replaceitemvalue("Subject", 	"Ошибки выгрузки расчетных листов!");
	error_doc.Replaceitemvalue("From", 		Параметры.ИДПрограммы);
	error_doc.Replaceitemvalue("SendTo", 	ТекущийПользователь);
	error_rtitem = error_doc.Createrichtextitem("Body");
	
	// отправка данных
	Для Каждого СтрокаДанных Из МассивДанных Цикл
		
		Если СтрокаДанных.БылоОтправлено = Истина Тогда
			Продолжить;
		КонецЕсли;		
		
		ОшибкаВСсылках = Ложь;
		
		//-----------------------------------------------------------------------------------------------------------------------
		//определение ссылок Lotus
		//-----------------------------------------------------------------------------------------------------------------------
		
		//ищем сотрудника ИЛИ руководителя
		Получатель1СсылкаLotus = "";
		Если ЗначениеЗаполнено(СтрокаДанных.Руководитель) Тогда
			Получатель1СсылкаLotus = НайтиСотрудникаВЛотус(СтрокаДанных, СокрЛП(Параметры.Префикс) + СтрокаДанных.ТабНомерРуководитель, tView, error_rtitem, ОшибкаВСсылках, 1);
		Иначе
			Получатель1СсылкаLotus = НайтиСотрудникаВЛотус(СтрокаДанных, СокрЛП(Параметры.Префикс) + СтрокаДанных.ТабНомер, tView, error_rtitem, ОшибкаВСсылках);
		КонецЕсли;
		
		//ищем сотрудников которые будут в копии - копия1 ... копия3
		Копия1СсылкаLotus = "";
		Если ЗначениеЗаполнено(СтрокаДанных.Копия1) Тогда
			Копия1СсылкаLotus = НайтиСотрудникаВЛотус(СтрокаДанных, СокрЛП(Параметры.Префикс) + СтрокаДанных.ТабНомерКопия1, tView, error_rtitem, ОшибкаВСсылках, 2);
		КонецЕсли;
		
		Копия2СсылкаLotus = "";
		Если ЗначениеЗаполнено(СтрокаДанных.Копия2) Тогда
			Копия2СсылкаLotus = НайтиСотрудникаВЛотус(СтрокаДанных, СокрЛП(Параметры.Префикс) + СтрокаДанных.ТабНомерКопия2, tView, error_rtitem, ОшибкаВСсылках, 3);
		КонецЕсли;
		
		Копия3СсылкаLotus = "";
		Если ЗначениеЗаполнено(СтрокаДанных.Копия3) Тогда
			Копия3СсылкаLotus = НайтиСотрудникаВЛотус(СтрокаДанных, СокрЛП(Параметры.Префикс) + СтрокаДанных.ТабНомерКопия3, tView, error_rtitem, ОшибкаВСсылках, 4);
		КонецЕсли;
		
		//соберем массив получателей
		МассивПолучателей = Новый Массив;
		Если НЕ Получатель1СсылкаLotus = "" Тогда
			МассивПолучателей.Добавить(Получатель1СсылкаLotus);
		КонецЕсли;
		Если НЕ Копия1СсылкаLotus = "" Тогда
			МассивПолучателей.Добавить(Копия1СсылкаLotus);
		КонецЕсли;
		Если НЕ Копия2СсылкаLotus = "" Тогда
			МассивПолучателей.Добавить(Копия2СсылкаLotus);
		КонецЕсли;
		Если НЕ Копия3СсылкаLotus = "" Тогда
			МассивПолучателей.Добавить(Копия3СсылкаLotus);
		КонецЕсли;
		
		//проверка
		Если ОшибкаВСсылках = Истина ИЛИ МассивПолучателей.Количество() = 0 Тогда
			
			isErrorFlag = 1;
			Продолжить;
			
		КонецЕсли;
		
		//формируем массив ролей (доступа к расчетному листку)
		МассивРолей = Новый Массив;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивРолей, МассивРасчетчиков);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивРолей, МассивПолучателей);
		
		//-----------------------------------------------------------------------------------------------------------------------
		//формируем документ в личном кабинете
		//-----------------------------------------------------------------------------------------------------------------------
		
		doc = db.Createdocument();
		doc.Replaceitemvalue("Form", "ZpNote");
		success = doc.ComputeWithForm(False, False);
		
		Если success Тогда
			
			//прикрепление файла к документу
			rtitem = doc.GetFirstItem("Body");
			rtitem.Remove();
			rtitem = doc.CreateRichTextItem("Body");
			rtitem.isencrypted = true;
			Если (rtitem.Type = 1) Тогда
				Если СтрокаДанных.ФаилСформирован = Истина Тогда
					object = rtitem.EmbedObject(1454, "", СтрокаДанных.Фаил);
				КонецЕсли;
			КонецЕсли;						
			
			//параметры документа
			doc.Replaceitemvalue("Enterprise", 	Параметры.ОрганизацияСокрНаименование);
			doc.Replaceitemvalue("FIO", 		СтрокаДанных.ФИОСотрудника);
			doc.Replaceitemvalue("TabelNumber", СтрокаДанных.ТабНомер);
			doc.Replaceitemvalue("MounthDate", 	Параметры.ПериодРегистрацииМесяц);       
			doc.Replaceitemvalue("YearDate", 	Параметры.ПериодРегистрацииГод);
			doc.Replaceitemvalue("ExecDate", 	Параметры.ДатаВыгрузки);
			
			//роли
			user_mass = Новый COMSafeArray("VT_BSTR", МассивРолей.Количество());
			ИндексЭлемента = -1;
			Для Каждого ПолучательСсылкаLotus Из МассивРолей Цикл
				ИндексЭлемента = ИндексЭлемента + 1;
				user_mass.SetValue(ИндексЭлемента, ПолучательСсылкаLotus);
			КонецЦикла;
			
			users_for_access = Новый COMSafeArray("VT_BSTR", МассивРолей.Количество() + 1);
			ИндексЭлемента = -1;
			Для Каждого ПолучательСсылкаLotus Из МассивРолей Цикл
				ИндексЭлемента = ИндексЭлемента + 1;
				users_for_access.SetValue(ИндексЭлемента, ПолучательСсылкаLotus);
			КонецЦикла;
			users_for_access.SetValue(ИндексЭлемента + 1, Параметры.ПраваТолькоЧтение[Параметры.ПрефиксДляРоли]);
			
			doc.Replaceitemvalue("PublicEncryptionKeys", 	user_mass);
			doc.Replaceitemvalue("WhoIsReader", 			users_for_access);
			doc.Replaceitemvalue("WhoIsAuthor", 			user_mass);			
			doc.Replaceitemvalue("WhoIsFillialsEditor", 	Параметры.ПраваЧтениеИИзменение[Параметры.ПрефиксДляРоли]);
			
			//шифруем и записываем документ
			Попытка
				doc.Encrypt();
				doc.Save(true, true);
			Исключение
				
				error_rtitem.Appendtext("Ошибка при шифровании файлов! Сотрудник: " + СтрокаДанных.ФИОСотрудника + ".");
				error_rtitem.Addnewline(1);
				
				isErrorFlag = 1;
				Продолжить;
				
			КонецПопытки;
			
		Иначе
			
			error_rtitem.Appendtext("Не получилось добавить расчетный листок в личный кабинет! Сотрудник: " + СтрокаДанных.ФИОСотрудника + ".");
			error_rtitem.Addnewline(1);
			
			isErrorFlag = 1;
			Продолжить;
			
		КонецЕсли;
		
		//-----------------------------------------------------------------------------------------------------------------------
		//формируем письмо
		//-----------------------------------------------------------------------------------------------------------------------
		
		Если Параметры.ВыключитьОповещениеСотруднику = Ложь Тогда
		
			//фамилия и.о.
			ФамилияИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СтрокаДанных.ФИОСотрудника);
			
			//массив получателей		
			user_send = Новый COMSafeArray("VT_BSTR", МассивПолучателей.Количество());
			ИндексЭлемента = -1;
			Для Каждого ПолучательСсылкаLotus Из МассивПолучателей Цикл
				ИндексЭлемента = ИндексЭлемента + 1;
				user_send.SetValue(ИндексЭлемента, ПолучательСсылкаLotus);
			КонецЦикла;
			
			//шапка письма
			maildoc = db.Createdocument();
			maildoc.Replaceitemvalue("Form", 		"Memo");
			maildoc.Replaceitemvalue("Subject", 	ФамилияИО + " Расчетный лист за " + Параметры.ПериодРегистрацииМесяц + " " + Параметры.ПериодРегистрацииГод + ".");
			maildoc.Replaceitemvalue("From", 		Параметры.ИДПрограммы);
			maildoc.Replaceitemvalue("SendTo", 		user_send);
			
			memo_rtitem = maildoc.Createrichtextitem("Body");
			
			//присоединенный фаил
			Если СтрокаДанных.ПрикрепитьФаилКПисьму = Истина Тогда
				Если СтрокаДанных.ФаилСформирован = Истина Тогда
					object = memo_rtitem.EmbedObject(1454, "", СтрокаДанных.Фаил);
				КонецЕсли;
			КонецЕсли;
			
			//тело письма
			memo_rtitem.AppendStyle(richstyle1);
			memo_rtitem.AddNewLine(1);
			memo_rtitem.Appendtext("Сотрудник: " + СтрокаДанных.ФИОСотрудника + ".");
			memo_rtitem.AddNewLine(1);
			memo_rtitem.Appendtext("Расчетный лист за " + Параметры.ПериодРегистрацииМесяц + " " + Параметры.ПериодРегистрацииГод + ".");
			memo_rtitem.AddNewLine(2);
			
			memo_rtitem.AppendStyle(richstyle2);
			memo_rtitem.Appenddoclink(doc, "Ссылка на расчетный лист в личном кабинете Lotus.", "Нажмите на ссылку для того, чтобы открыть расчетный лист.");
			
			Если СтрокаДанных.ПрикрепитьФаилКПисьму = Истина Тогда
				memo_rtitem.AppendStyle(richstyle1);
				memo_rtitem.AddNewLine(2);
				memo_rtitem.Appendtext("Дополнительно: файл прикриплен к письму.");
			КонецЕсли;
			
			Если НЕ СокрЛП(СтрокаДанных.ДополнительноеСообщение) = "" Тогда
				memo_rtitem.AppendStyle(richstyle1);
				memo_rtitem.AddNewLine(2);
				memo_rtitem.Appendtext(СокрЛП(СтрокаДанных.ДополнительноеСообщение));
			КонецЕсли;
			
			//отправка
			Попытка
				maildoc.Send(false);
			Исключение
				
				error_rtitem.Appendtext("Ошибка при отправке письма! Сотрудник: " + СтрокаДанных.ФИОСотрудника + ".");
				error_rtitem.Addnewline(1);
				
				isErrorFlag = 1;
				Продолжить;
				
			КонецПопытки;
			
		КонецЕсли;
		
		//-----------------------------------------------------------------------------------------------------------------------
		//регистрируем отправку
		//-----------------------------------------------------------------------------------------------------------------------
		
		СтрокаДанных.Отправлено = Истина;
		
	КонецЦикла;
	
	// отправляем протокол ошибок, если ошибки были 
	Если isErrorFlag = 1 Тогда
		error_doc.Send(False);
	КонецЕсли;
	
	// завершение
	db = Неопределено;
	ofkdb = Неопределено;
	ЛотусСессия = Неопределено;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСотрудникаВЛотус(Знач СтрокаДанных, Знач ТабСПрефиксом, Знач tView, error_rtitem, isErrorFlag, ВидСотрудника = 0)

	//параметры
	СсылкаЛотус = "";
	
	СотрудникТекст = " Сотрудник: " + СтрокаДанных.ФИОСотрудника + " (" + ТабСПрефиксом + ").";
	Если ВидСотрудника = 1 Тогда
		СотрудникТекст = " Руководитель: " + СтрокаДанных.ФИОРуководитель + " (" + ТабСПрефиксом + "). Расчетный листок сотрудника: " + СтрокаДанных.ФИОСотрудника + ".";
	ИначеЕсли ВидСотрудника = 2 Тогда
		СотрудникТекст = " Сотрудник в копии: " + СтрокаДанных.ФИОКопия1 + " (" + ТабСПрефиксом + "). Расчетный листок сотрудника: " + СтрокаДанных.ФИОСотрудника + ".";
	ИначеЕсли ВидСотрудника = 3 Тогда
		СотрудникТекст = " Сотрудник в копии: " + СтрокаДанных.ФИОКопия2 + " (" + ТабСПрефиксом + "). Расчетный листок сотрудника: " + СтрокаДанных.ФИОСотрудника + ".";
	ИначеЕсли ВидСотрудника = 4 Тогда
		СотрудникТекст = " Сотрудник в копии: " + СтрокаДанных.ФИОКопия3 + " (" + ТабСПрефиксом + "). Расчетный листок сотрудника: " + СтрокаДанных.ФИОСотрудника + ".";
	КонецЕсли;
	
	//поиск в Лотусе
	coll = tView.Getalldocumentsbykey(ТабСПрефиксом, true);
	
	Если coll.Count > 0 Тогда
		
		persondoc = coll.Getfirstdocument();
		userName = persondoc.Getitemvalue("LotusName");
		
		Если userName.GetValue(0) = "" Тогда 
			
			error_rtitem.Appendtext("Лотусовое имя не задано!" + СотрудникТекст);
			error_rtitem.Addnewline(1);
			
			isErrorFlag = 1;
			
		Иначе
			
			СсылкаЛотус = userName.GetValue(0);
			
		КонецЕсли;
		
	ИначеЕсли coll.Count = 0 Тогда
		
		error_rtitem.Appendtext("Табельный номер не найден в базе Lotus!" + СотрудникТекст);
		error_rtitem.Addnewline(1);
		
		isErrorFlag = 1;
		
	КонецЕсли;
	
	//завершение
	Возврат СсылкаЛотус;
	
КонецФункции

#КонецОбласти
