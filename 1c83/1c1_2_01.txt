общий модуль - АФМ_ВзаиморасчетыССотрудниками


#Область ЗаполнениеВедомостейСервер

Процедура ЗаполнениеВедомостей_ВыполнитьКомандуСервер(ИдентификаторКоманды, ТекущийОбъект) Экспорт
	
	//определим параметры заполнения
	ПериодРегистрации=ПолучитьПериодРегистрации(ТекущийОбъект);
	
	//удаление других периодов выплат
	УдалитьЛишниеПериоды(ТекущийОбъект, ПериодРегистрации);
	
	//удаление всех меж-расчетных выплат
	Если СокрЛП(ТекущийОбъект.СпособВыплаты)="Зарплата за месяц (АФМ)" Тогда
		УдалитьМежрасчетныеВыплаты(ТекущийОбъект, ПериодРегистрации);
	КонецЕсли;
	
	//удаление отпусков из выплаты на увольнение
	Попытка
		Если ТекущийОбъект.СпособВыплаты.ВидДокументаОснования = Перечисления.ВидыДокументовМежрасчетныхНачислений.Увольнение Тогда
			УдалитьОтпускаВУвольнении(ТекущийОбъект, ПериодРегистрации);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	//контроль на отрицальную выплату (суммарную),
	//	если отрицательная сумма, то обнуляем, при этом НДФЛ не трогаем
	КонтрольОтрицательнойВыплаты(ТекущийОбъект, ПериодРегистрации);
	
	//добавим долг за работником (отрицательная сумма) на начало периода
	ДобавлениеДолгаСотрудника(ТекущийОбъект, ПериодРегистрации);
	
	//свернем полностью нулевые строки
	СвернутьНулевыеСтроки(ТекущийОбъект);
	
	//дорасчет аванса
	ДоРасчетАвансаПоОтклонениям(ТекущийОбъект, ПериодРегистрации);
	
	//распределение аванса по статьям финансирования, для других выплат распределение работает, если есть
	//	распределение в регистрах накопления
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		РаспределениеАвансаПоСтатьямФинансирования(ТекущийОбъект, ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПериодРегистрации(ТекущийОбъект)
		
	ПараметрыПолученияЗарплатыКВыплате = ВзаиморасчетыССотрудниками.ПараметрыПолученияЗарплатыКВыплатеВедомости(ТекущийОбъект.Ссылка);
	ПериодРегистрации=НачалоМесяца(ПараметрыПолученияЗарплатыКВыплате.ПериодРегистрации);
	Возврат ПериодРегистрации;
	
КонецФункции

Процедура УдалитьЛишниеПериоды(ТекущийОбъект, ПериодРегистрации)
	
	//соберем сводную сумму по межрасчетным документам
	ТаблицаИтогиПоДокументам=Новый ТаблицаЗначений;
	ТаблицаИтогиПоДокументам.Колонки.Добавить("ДокументОснование");
	ТаблицаИтогиПоДокументам.Колонки.Добавить("КВыплате");
	
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		Если ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.Отпуск")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.МатериальнаяПомощь")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.БольничныйЛист")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.Премия")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.ОплатаПоСреднемуЗаработку") //Отсутствие с сохранением оплаты
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.РазовоеНачисление")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.ЕдиновременноеПособиеЗаСчетФСС")
			ИЛИ ТипЗнч(СтрЗарплата.ДокументОснование)=Тип("ДокументСсылка.ОплатаДнейУходаЗаДетьмиИнвалидами") Тогда
			НоваяСтрока=ТаблицаИтогиПоДокументам.Добавить();
			НоваяСтрока.ДокументОснование=СтрЗарплата.ДокументОснование;
			НоваяСтрока.КВыплате=СтрЗарплата.КВыплате;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаИтогиПоДокументам.Свернуть("ДокументОснование","КВыплате");
	
	//очистим таблицу - Зарплаты
	МассивСтрок=Новый Массив;
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		Если НачалоМесяца(СтрЗарплата.ПериодВзаиморасчетов)<ПериодРегистрации Тогда
			//в выплате может быть период, который больше периода регистрации
			МассивСтрок.Добавить(СтрЗарплата);
			
		Иначе
		
			//дополнительная проверка по межрасчетным документам
			//	ДМ0000007298 06.05.2016, ДМ0000007311 11.05.2016
			Если ЗначениеЗаполнено(СтрЗарплата.ДокументОснование) Тогда
				СтруктураПоиска=Новый Структура("ДокументОснование, КВыплате");
				СтруктураПоиска.ДокументОснование=СтрЗарплата.ДокументОснование;
				СтруктураПоиска.КВыплате=0;
				НайденныеНулевыеДокументы=ТаблицаИтогиПоДокументам.НайтиСтроки(СтруктураПоиска);
				Если НайденныеНулевыеДокументы.Количество()>0 Тогда
					МассивСтрок.Добавить(СтрЗарплата);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	УдалитьСтрокиИзТЧ(ТекущийОбъект.Зарплата, МассивСтрок);
	
	//очистим таблицу - НДФЛ
	МассивСтрок=Новый Массив;
	Для Каждого СтрНДФЛ Из ТекущийОбъект.НДФЛ Цикл
		Если НЕ НачалоМесяца(СтрНДФЛ.МесяцНалоговогоПериода)=ПериодРегистрации Тогда
			//берем только за месяц
			МассивСтрок.Добавить(СтрНДФЛ);
		КонецЕсли;
	КонецЦикла;
	
	УдалитьСтрокиИзТЧ(ТекущийОбъект.НДФЛ, МассивСтрок);
	
КонецПроцедуры

Процедура УдалитьМежрасчетныеВыплаты(ТекущийОбъект, ПериодРегистрации)

	//определим список межрасчетных типов документов
	ТипыМежрасчетныхДокументов=Новый Массив;
	
	ИндексЗначения=-1;
	Для Каждого ЗнаяениеПеречисления Из Перечисления.ВидыДокументовМежрасчетныхНачислений Цикл
		ИндексЗначения=ИндексЗначения+1;
		ТипОснования=Метаданные.Перечисления.ВидыДокументовМежрасчетныхНачислений.ЗначенияПеречисления[ИндексЗначения].Имя;
		ТипОснования="ДокументСсылка."+СокрЛП(ТипОснования);
		
		Попытка
			ТипыМежрасчетныхДокументов.Добавить(Тип(ТипОснования));
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	//удалим начисления по документам основаниям
	Если ТипыМежрасчетныхДокументов.Количество()>0 Тогда
		ОбработкатьСтрокиТЧПоДокументуОснования(ТекущийОбъект.Зарплата, ТипыМежрасчетныхДокументов);
		ОбработкатьСтрокиТЧПоДокументуОснования(ТекущийОбъект.НДФЛ,		ТипыМежрасчетныхДокументов);
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьОтпускаВУвольнении(ТекущийОбъект, ПериодРегистрации)

	//определим список типов
	ТипыМежрасчетныхДокументов=Новый Массив;
	ТипОснования="ДокументСсылка.Отпуск";
	ТипыМежрасчетныхДокументов.Добавить(Тип(ТипОснования));
	
	//удалим начисления по документам основаниям - увольнение
	ОбработкатьСтрокиТЧПоДокументуОснования(ТекущийОбъект.Зарплата, ТипыМежрасчетныхДокументов);
	ОбработкатьСтрокиТЧПоДокументуОснования(ТекущийОбъект.НДФЛ,		ТипыМежрасчетныхДокументов);
	
КонецПроцедуры

Процедура ОбработкатьСтрокиТЧПоДокументуОснования(ТЧ, ТипыМежрасчетныхДокументов)
	
	МассивСтрок=Новый Массив;
	Для Каждого СтрЗарплата Из ТЧ Цикл
		Если НЕ ЗначениеЗаполнено(СтрЗарплата.ДокументОснование) Тогда
			Продолжить;
		КонецЕсли;
		
		//проверяем тип документа
		Если НЕ ТипыМежрасчетныхДокументов.Найти(ТипЗнч(СтрЗарплата.ДокументОснование))=Неопределено Тогда
			
			//анализируем документ межрасчетной выплаты
			Если НЕ СтрЗарплата.ДокументОснование.ПорядокВыплаты=Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
				МассивСтрок.Добавить(СтрЗарплата);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	УдалитьСтрокиИзТЧ(ТЧ, МассивСтрок);
	
КонецПроцедуры

Процедура УдалитьСтрокиИзТЧ(МассивУдаления, МассивСтрок)
	
	Для Каждого СтрокаУдаления Из МассивСтрок Цикл
		МассивУдаления.Удалить(СтрокаУдаления);
	КонецЦикла;
	
КонецПроцедуры

Процедура КонтрольОтрицательнойВыплаты(ТекущийОбъект, ПериодРегистрации)
	
	//соберем сводную сумму по сотрудникам
	ТаблицаИтогиПоСотруднику=Новый ТаблицаЗначений;
	ТаблицаИтогиПоСотруднику.Колонки.Добавить("Сотрудник");
	ТаблицаИтогиПоСотруднику.Колонки.Добавить("КВыплате");
	
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		НоваяСтрока=ТаблицаИтогиПоСотруднику.Добавить();
		НоваяСтрока.Сотрудник=СтрЗарплата.Сотрудник;
		НоваяСтрока.КВыплате=СтрЗарплата.КВыплате;
	КонецЦикла;
	
	ТаблицаИтогиПоСотруднику.Свернуть("Сотрудник","КВыплате");
	
	//выделим отрицательные выплаты
	МассивОтрицательных=Новый Массив;
	Для Каждого СтрокаИтог Из ТаблицаИтогиПоСотруднику Цикл
		Если СтрокаИтог.КВыплате<0 Тогда
			МассивОтрицательных.Добавить(СтрокаИтог.Сотрудник);
		КонецЕсли;
	КонецЦикла;
	
	//обнулим строки
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		
		НайденнаОтрицательнаяВыплата=МассивОтрицательных.Найти(СтрЗарплата.Сотрудник);
		
		Если НЕ НайденнаОтрицательнаяВыплата=Неопределено Тогда
			СтрЗарплата.КВыплате=0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавлениеДолгаСотрудника(ТекущийОбъект, ПериодРегистрации)
	
	//проверка
	Если НЕ ТекущийОбъект.СпособВыплаты=Справочники.СпособыВыплатыЗарплаты.Зарплата Тогда
		Возврат;
	КонецЕсли;
	
	//расчет данных
	МассивФЛ=Новый Массив;
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		МассивФЛ.Добавить(СтрЗарплата.ФизическоеЛицо);
	КонецЦикла;
	
	ЗапросДанные=Новый Запрос;
	ЗапросДанные.УстановитьПараметр("ДатаОстатков", 	ПериодРегистрации-1);
	ЗапросДанные.УстановитьПараметр("Организация", 		ТекущийОбъект.Организация);
	ЗапросДанные.УстановитьПараметр("МассивФЛ", 		МассивФЛ);
	
	ЗапросДанные.Текст=
	"ВЫБРАТЬ
	|	ВзаиморасчетыССотрудникамиОстатки.ФизическоеЛицо,
	|	ВзаиморасчетыССотрудникамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТВыбор
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки(
	|			&ДатаОстатков,
	|			Организация = &Организация
	|				И ФизическоеЛицо В (&МассивФЛ)) КАК ВзаиморасчетыССотрудникамиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВыбор.ФизическоеЛицо,
	|	СУММА(ВТВыбор.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	ВТВыбор КАК ВТВыбор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВыбор.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИтоги.ФизическоеЛицо,
	|	ВТИтоги.СуммаВзаиморасчетов
	|ИЗ
	|	ВТИтоги КАК ВТИтоги
	|ГДЕ
	|	ВТИтоги.СуммаВзаиморасчетов < 0";
	
	ТаблицаДанные=ЗапросДанные.Выполнить().Выгрузить();
	
	//добавление
	Для Каждого СтрокаДанных Из ТаблицаДанные Цикл
		
		СтруктураПоиска=Новый Структура("ФизическоеЛицо", СтрокаДанных.ФизическоеЛицо);
		НайтиСтрокиЗП=ТекущийОбъект.Зарплата.НайтиСтроки(СтруктураПоиска);
		Если НайтиСтрокиЗП.Количество()>0 Тогда
			ПоследняяСтрока=НайтиСтрокиЗП[НайтиСтрокиЗП.ВГраница()];
			
			НоваяСтрокаВыплаты=ТекущийОбъект.Зарплата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВыплаты, ПоследняяСтрока);
			
			НоваяСтрокаВыплаты.СтатьяФинансирования="";
			НоваяСтрокаВыплаты.СтатьяРасходов="";
			НоваяСтрокаВыплаты.ДокументОснование="";
			НоваяСтрокаВыплаты.КВыплате=СтрокаДанных.СуммаВзаиморасчетов;
			НоваяСтрокаВыплаты.КомпенсацияЗаЗадержкуЗарплаты=0;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СвернутьНулевыеСтроки(ТекущийОбъект)

	//свернем полностью нулевые строки
	ТблИД=Новый ТаблицаЗначений;
	ТблИД.Колонки.Добавить("ИдентификаторСтроки");
	ТблИД.Колонки.Добавить("Сумма");
	
	Для Каждого СтрСостав Из ТекущийОбъект.Состав Цикл
		НовИД=ТблИД.Добавить();
		НовИД.ИдентификаторСтроки=СтрСостав.ИдентификаторСтроки;
		НовИД.Сумма=0;
	КонецЦикла;
	
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		НовИД=ТблИД.Добавить();
		НовИД.ИдентификаторСтроки=СтрЗарплата.ИдентификаторСтроки;
		НовИД.Сумма=СтрЗарплата.КВыплате;
	КонецЦикла;
	
	Для Каждого СтрНДФЛ Из ТекущийОбъект.НДФЛ Цикл
		НовИД=ТблИД.Добавить();
		НовИД.ИдентификаторСтроки=СтрНДФЛ.ИдентификаторСтроки;
		НовИД.Сумма=СтрНДФЛ.Сумма;
	КонецЦикла;
	
	ТблИД.Свернуть("ИдентификаторСтроки","Сумма");
	Для Каждого СтрокаИД Из ТблИД Цикл
		Если НЕ СтрокаИД.Сумма=0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска=Новый Структура("ИдентификаторСтроки");
		СтруктураПоиска.ИдентификаторСтроки=СтрокаИД.ИдентификаторСтроки;
		НайденныеСтроки=ТекущийОбъект.Состав.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрСостава Из НайденныеСтроки Цикл
			ТекущийОбъект.Состав.Удалить(СтрСостава);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

//--> АФМ-Серверс Дебов Игорь Заявка 000000008689 14.07.2016|19.07.2016
Процедура ДоРасчетАвансаПоОтклонениям(ТекущийОбъект, ПериодРегистрации)
	
	//проверка
	Если НЕ ТипЗнч(ТекущийОбъект.СпособВыплаты) = Тип("СправочникСсылка.СпособыВыплатыЗарплаты") Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ТекущийОбъект.СпособВыплаты.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда
		Возврат;
	КонецЕсли;
	
	ПериодРегистрации15 = Дата(Год(ПериодРегистрации),Месяц(ПериодРегистрации),15,23,59,59);
	
	//контроль на повторную выплату аванса, ошибка возникает т.к.:
	//	1. доработан алгоритм формирования аванса, т.е. аванс заведен фиксированной суммой 12тр, но при заполнении выяснилось, что
	//	месяц отработан не полностью и ему был расчитан аванс 9тр, но при повторном заполнении 1С еще раз
	//	назначит аванс, т.к. видит не выплаченную сумму 3тр.
	//	2. типовая ошибка, т.е. если сотрудник уволился и принялся, то тоже идет задвоение.
	ПовторнаяСверткаНулевыхСтрок = Ложь;
	
	МассивСотрудников = Новый Массив;
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		МассивСотрудников.Добавить(СтрЗарплата.Сотрудник);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Окончание", ПериодРегистрации15);
	Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);
	Запрос.УстановитьПараметр("ТекущийРегистратор", ТекущийОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеАвансом.Сотрудник
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплатеАвансом КАК ЗарплатаКВыплатеАвансом
	|ГДЕ
	|	ЗарплатаКВыплатеАвансом.Активность = ИСТИНА
	|	И ЗарплатаКВыплатеАвансом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ЗарплатаКВыплатеАвансом.Сотрудник В(&Сотрудники)
	|	И ЗарплатаКВыплатеАвансом.Период = &ПериодРегистрации
	|	И ЗарплатаКВыплатеАвансом.Регистратор <> &ТекущийРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеАвансом.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСостоянийСотрудников.Сотрудник
	|ИЗ
	|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ДанныеСостоянийСотрудников.Активность = ИСТИНА
	|	И ДанныеСостоянийСотрудников.Сторно = ЛОЖЬ
	|	И ДанныеСостоянийСотрудников.Сотрудник В(&Сотрудники)
	|	И ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|	И ДанныеСостоянийСотрудников.Начало >= &ПериодРегистрации
	|	И ДанныеСостоянийСотрудников.Начало <= &Окончание
	|	И ДанныеСостоянийСотрудников.Регистратор <> &ТекущийРегистратор";
	
	ТаблицаИсключаемыхСотрудников = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		
		СтруктураПоиска = Новый Структура("Сотрудник", СтрЗарплата.Сотрудник);
		СтрокиВыплаты = ТаблицаИсключаемыхСотрудников.НайтиСтроки(СтруктураПоиска);
		Если СтрокиВыплаты.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрЗарплата.КВыплате = 0; //т.к. аванс выплачивается только один раз в месяц
		ПовторнаяСверткаНулевыхСтрок = Истина;
		
	КонецЦикла;
	
	Если ПовторнаяСверткаНулевыхСтрок = Истина Тогда
		СвернутьНулевыеСтроки(ТекущийОбъект);
	КонецЕсли;
	
	//расчет коэф. отклонения
	МассивСотрудников = Новый Массив;
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		МассивСотрудников.Добавить(СтрЗарплата.Сотрудник);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Начало", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Окончание", ПериодРегистрации15);
	Запрос.УстановитьПараметр("ОкончаниеМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеСостоянийСотрудников.Сотрудник КАК Сотрудник,
	|	ДанныеСостоянийСотрудников.Начало КАК Начало,
	|	ВЫБОР
	|		КОГДА ДанныеСостоянийСотрудников.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И НЕ ДанныеСостоянийСотрудников.ОкончаниеПредположительно = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДанныеСостоянийСотрудников.ОкончаниеПредположительно
	|		ИНАЧЕ ДанныеСостоянийСотрудников.Окончание
	|	КОНЕЦ КАК Окончание
	|ПОМЕСТИТЬ ВТСостоянияСотрудников
	|ИЗ
	|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ДанныеСостоянийСотрудников.Активность = ИСТИНА
	|	И ДанныеСостоянийСотрудников.Сторно = ЛОЖЬ
	|	И ДанныеСостоянийСотрудников.Сотрудник В(&Сотрудники)
	|	И НЕ ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	И НЕ ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|	И НЕ ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком)
	|	И НЕ ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Командировка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСостоянийСотрудников.Сотрудник,
	|	&Начало,
	|	ДОБАВИТЬКДАТЕ(ДанныеСостоянийСотрудников.Начало, ДЕНЬ, -1)
	|ИЗ
	|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ДанныеСостоянийСотрудников.Активность = ИСТИНА
	|	И ДанныеСостоянийСотрудников.Сторно = ЛОЖЬ
	|	И ДанныеСостоянийСотрудников.Сотрудник В(&Сотрудники)
	|	И ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	И ДанныеСостоянийСотрудников.Начало >= &Начало
	|	И ДанныеСостоянийСотрудников.Начало <= &ОкончаниеМесяца
	|	И ДЕНЬ(ДанныеСостоянийСотрудников.Начало) > 1
	|	И ДЕНЬ(ДанныеСостоянийСотрудников.Начало) < 16
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСостоянийСотрудников.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ДанныеСостоянийСотрудников.Начало < &Начало
	|			ТОГДА &Начало
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДанныеСостоянийСотрудников.Начало, ДЕНЬ)
	|	КОНЕЦ КАК Начало,
	|	ВЫБОР
	|		КОГДА ДанныеСостоянийСотрудников.Окончание = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &Окончание
	|		КОГДА ДанныеСостоянийСотрудников.Окончание > &Окончание
	|			ТОГДА &Окончание
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДанныеСостоянийСотрудников.Окончание, ДЕНЬ)
	|	КОНЕЦ КАК Окончание
	|ПОМЕСТИТЬ ВТОтклонения
	|ИЗ
	|	ВТСостоянияСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ДанныеСостоянийСотрудников.Начало >= &Начало
	|					И ДанныеСостоянийСотрудников.Начало <= &Окончание
	|				ТОГДА ИСТИНА
	|			КОГДА ДанныеСостоянийСотрудников.Окончание = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ВЫБОР
	|						КОГДА ДанныеСостоянийСотрудников.Начало <= &Начало
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ДанныеСостоянийСотрудников.Окончание >= &Начало
	|							И ДанныеСостоянийСотрудников.Окончание <= &Окончание
	|						ТОГДА ИСТИНА
	|					КОГДА ДанныеСостоянийСотрудников.Начало >= &Начало
	|							И ДанныеСостоянийСотрудников.Окончание <= &Окончание
	|						ТОГДА ИСТИНА
	|					КОГДА ДанныеСостоянийСотрудников.Начало <= &Начало
	|							И ДанныеСостоянийСотрудников.Окончание >= &Окончание
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОтклонения.Сотрудник КАК Сотрудник,
	|	ВТОтклонения.Начало КАК Начало,
	|	ВТОтклонения.Окончание КАК Окончание
	|ПОМЕСТИТЬ ВТОтклоненияИтог
	|ИЗ
	|	ВТОтклонения КАК ВТОтклонения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОтклонения.Сотрудник,
	|	ВТОтклонения.Начало,
	|	ВТОтклонения.Окончание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикРаботыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТГрафики
	|ИЗ
	|	РегистрСведений.ГрафикРаботыСотрудников.СрезПоследних(
	|			&Окончание,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТОтклоненияИтог.Сотрудник
	|				ИЗ
	|					ВТОтклоненияИтог)) КАК ГрафикРаботыСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Дата КАК ПериодДень,
	|	ВЫБОР
	|		КОГДА ГрафикиРаботыПоВидамВремени.Дата <= &Окончание
	|			ТОГДА ГрафикиРаботыПоВидамВремени.ОсновноеЗначение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Норма,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение КАК НормаМес
	|ПОМЕСТИТЬ ВТНормаПоГрафику
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы В
	|			(ВЫБРАТЬ
	|				ВТГрафики.ГрафикРаботы
	|			ИЗ
	|				ВТГрафики)
	|	И ГрафикиРаботыПоВидамВремени.Месяц = &Начало
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя)
	|	И ГрафикиРаботыПоВидамВремени.ВремяВЧасах = ЛОЖЬ
	|	И ГрафикиРаботыПоВидамВремени.Дата <= КОНЕЦПЕРИОДА(&Окончание, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНормаПоГрафику.ГрафикРаботы КАК ГрафикРаботы,
	|	СУММА(ВТНормаПоГрафику.Норма) КАК Норма,
	|	СУММА(ВТНормаПоГрафику.НормаМес) КАК НормаМес
	|ПОМЕСТИТЬ ВТНормаСводно
	|ИЗ
	|	ВТНормаПоГрафику КАК ВТНормаПоГрафику
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТНормаПоГрафику.ГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТГрафики.Сотрудник КАК Сотрудник,
	|	ВТНормаПоГрафику.ПериодДень КАК ПериодДень,
	|	ЕСТЬNULL(ВТНормаПоГрафику.Норма, 0) КАК Норма,
	|	ЕСТЬNULL(ВТНормаСводно.Норма, 0) КАК НормаСводно,
	|	ЕСТЬNULL(ВТНормаСводно.НормаМес, 0) КАК НормаМес
	|ПОМЕСТИТЬ ВТСотрудникиГрафики
	|ИЗ
	|	ВТГрафики КАК ВТГрафики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаПоГрафику КАК ВТНормаПоГрафику
	|		ПО ВТГрафики.ГрафикРаботы = ВТНормаПоГрафику.ГрафикРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНормаСводно КАК ВТНормаСводно
	|		ПО ВТГрафики.ГрафикРаботы = ВТНормаСводно.ГрафикРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОтклоненияИтог.Сотрудник КАК Сотрудник,
	|	ВТОтклоненияИтог.Начало КАК Начало,
	|	ВТОтклоненияИтог.Окончание КАК Окончание,
	|	ВТСотрудникиГрафики.ПериодДень КАК ПериодДень,
	|	ЕСТЬNULL(ВТСотрудникиГрафики.Норма, 0) КАК Отклонение,
	|	ЕСТЬNULL(ВТСотрудникиГрафики.НормаСводно, 0) КАК НормаСводно,
	|	ЕСТЬNULL(ВТСотрудникиГрафики.НормаМес, 0) КАК НормаМес
	|ПОМЕСТИТЬ ВТСводная
	|ИЗ
	|	ВТОтклоненияИтог КАК ВТОтклоненияИтог
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиГрафики КАК ВТСотрудникиГрафики
	|		ПО ВТОтклоненияИтог.Сотрудник = ВТСотрудникиГрафики.Сотрудник
	|			И ВТОтклоненияИтог.Начало <= ВТСотрудникиГрафики.ПериодДень
	|			И ВТОтклоненияИтог.Окончание >= ВТСотрудникиГрафики.ПериодДень
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник,
	|	КадроваяИсторияСотрудниковСрезПоследних.КоличествоСтавок
	|ПОМЕСТИТЬ ВТСтавка
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	|			&Окончание,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТОтклоненияИтог.Сотрудник
	|				ИЗ
	|					ВТОтклоненияИтог)) КАК КадроваяИсторияСотрудниковСрезПоследних
	|ГДЕ
	|	КадроваяИсторияСотрудниковСрезПоследних.Активность = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСводная.Сотрудник КАК Сотрудник,
	|	СУММА(ВТСводная.Отклонение) КАК Отклонение,
	|	МАКСИМУМ(ВТСводная.НормаСводно) КАК НормаСводно,
	|	МАКСИМУМ(ВТСводная.НормаМес) КАК НормаМес
	|ПОМЕСТИТЬ ВТСвертка
	|ИЗ
	|	ВТСводная КАК ВТСводная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСводная.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСвертка.Сотрудник КАК Сотрудник,
	|	ВТСвертка.Отклонение,
	|	ВТСвертка.НормаСводно,
	|	ВТСвертка.НормаМес,
	|	ЕСТЬNULL(ВТСтавка.КоличествоСтавок, 1) КАК КоличествоСтавок
	|ИЗ
	|	ВТСвертка КАК ВТСвертка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавка КАК ВТСтавка
	|		ПО ВТСвертка.Сотрудник = ВТСтавка.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	ТаблицаОтклонений = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаОтклонений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//определим оклад + РК + СН
	ТаблицаОкладов = Новый ТаблицаЗначений;
	ТаблицаОкладов.Колонки.Добавить("Организация");
	ТаблицаОкладов.Колонки.Добавить("Сотрудник");
	ТаблицаОкладов.Колонки.Добавить("Премия0Процент"); //будет - оклад
	ТаблицаОкладов.Колонки.Добавить("Премия1Считать"); //пусто
	ТаблицаОкладов.Колонки.Добавить("Премия1Процент");
	ТаблицаОкладов.Колонки.Добавить("Премия2Процент"); //пусто
	ТаблицаОкладов.Колонки.Добавить("Премия3Процент"); //пусто
	ТаблицаОкладов.Колонки.Добавить("Премия4Процент"); //выплаты по РК и СН
	ТаблицаОкладов.Колонки.Добавить("Премия5Процент"); //пусто
	
	Для Каждого СтрокаОтклонений Из ТаблицаОтклонений Цикл
		
		НоваяСтрокаОклада = ТаблицаОкладов.Добавить();
		НоваяСтрокаОклада.Организация = ТекущийОбъект.Организация;
		НоваяСтрокаОклада.Сотрудник = СтрокаОтклонений.Сотрудник;
		
	КонецЦикла;
	
	Попытка
		МассивВыплатаПоРН = Новый Массив;
		МассивКвартальнаяПремия = Новый Массив;
		МассивПремияЗаМесяц = Новый Массив;
		МассивНадбавкаЗаВыслугуЛет = Новый Массив;
		
		МассивВыплатаПоРКиСН = АФМ_ИзменениеТиповогоФункционала.СостояниеШтатногоРасписания_ШтатнаяРасстановка_СформироватьМассивНастроек(ПланыВидовХарактеристик.АФМ_ПредопределенныеДанные.ШтатнаяРасстановкаКолонкаВыплатаПоРКиСН, 1);
		МассивПерсональнаяНадбавка = Новый Массив;
		МассивПерсональнаяНадбавка.Добавить(Справочники.ПоказателиРасчетаЗарплаты.Оклад);
		
		АФМ_ИзменениеТиповогоФункционала.СостояниеШтатногоРасписания_ШтатнаяРасстановка_РасчетПремий(ТаблицаОкладов, (ПериодРегистрации15+1),
			МассивВыплатаПоРКиСН, МассивВыплатаПоРН, МассивКвартальнаяПремия, МассивПремияЗаМесяц, МассивНадбавкаЗаВыслугуЛет, МассивПерсональнаяНадбавка);	
	Исключение
	КонецПопытки;
	
	//корректировка сумм в документе
	ПовторнаяСверткаНулевыхСтрок = Ложь;
	
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		
		//анализируем строку из ТЧ документа
		
		//поиск отклонений
		СтруктураПоиска = Новый Структура("Сотрудник", СтрЗарплата.Сотрудник);
		СтрокиОтклонений = ТаблицаОтклонений.НайтиСтроки(СтруктураПоиска);
		Если СтрокиОтклонений.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Отклонение = СтрокиОтклонений[0].Отклонение; //отклонение за первые 15 дней
		НормаСводно = СтрокиОтклонений[0].НормаСводно; //норма за 15 дней
		НормаМес = СтрокиОтклонений[0].НормаМес; //норма за месяц
		Если НормаСводно = 0 ИЛИ Отклонение = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		//поиск начислений
		СуммаОклада = 0;
		СуммаОкладаИсходная = 0;
		ПроцентНадбавки = 0;
		ПроцентНадбавкиИспользовать = 0;
		
		СтрокиОклада = ТаблицаОкладов.НайтиСтроки(СтруктураПоиска);
		Если НЕ СтрокиОклада.Количество() = 0 Тогда
			
			//СуммаОклада = СтрокиОклада[0].Премия0Процент * СтрокиОтклонений[0].КоличествоСтавок;
			СуммаОклада = СтрокиОклада[0].Премия0Процент;
			СуммаОкладаИсходная = СтрокиОклада[0].Премия0Процент;
			ПроцентНадбавки = СтрокиОклада[0].Премия4Процент;
			
			ОрганизацияПрефикс = СокрЛП(ТекущийОбъект.Организация.Префикс);
			Если ОрганизацияПрефикс = "ЗС" ИЛИ ОрганизацияПрефикс = "СБ" ИЛИ ОрганизацияПрефикс = "ВС" Тогда
				//добавим в расчет РК и СН, т.к. по этим организациям не большие базовые оклады
				ПроцентНадбавкиИспользовать = 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ОтработаноДней = НормаСводно - Отклонение; //отработано за первую половину с 1 по 15 (включительно)
		ОтработаноДней = ?(ОтработаноДней <=0, 0, ОтработаноДней);
		Если НормаМес = 0 Тогда
			КВыплатеНовая = 0;
		Иначе
			КВыплатеНовая = (СуммаОклада * ОтработаноДней) / НормаМес;
			КВыплатеНовая = КВыплатеНовая + (КВыплатеНовая * ПроцентНадбавки * ПроцентНадбавкиИспользовать / 100) ;
			КВыплатеНовая = Окр(КВыплатеНовая, 0);
		КонецЕсли;
		
		СтрЗарплата.КВыплате = КВыплатеНовая;
		Если КВыплатеНовая = 0 Тогда
			ПовторнаяСверткаНулевыхСтрок = Истина;
		КонецЕсли;
		
		СтрокиВыплаты = ТаблицаИсключаемыхСотрудников.НайтиСтроки(СтруктураПоиска);
		Если СтрокиВыплаты.Количество() = 0 Тогда
			
			//выводим сообщение пользователю, если это не дубль
			ТекстСообщения = "Сотрудник: " + СокрЛП(СтрЗарплата.Сотрудник) + ", расчет:" + Символы.ПС;
			ТекстСообщения = ТекстСообщения + Формат(КВыплатеНовая, "ЧДЦ=; ЧН=Ноль; ЧГ=0") + "=(" + Формат(СуммаОкладаИсходная, "ЧДЦ=; ЧН=0; ЧГ=0") + " [ставка:" + Формат(СтрокиОтклонений[0].КоличествоСтавок, "ЧДЦ=2; ЧГ=0") + "]";
			Если ПроцентНадбавкиИспользовать = 1 Тогда
				ТекстСообщения = ТекстСообщения + "+" + Формат(ПроцентНадбавки, "ЧДЦ=; ЧГ=0") + "%";
			КонецЕсли;
			ТекстСообщения = ТекстСообщения + ")*" + Формат(ОтработаноДней, "ЧДЦ=; ЧН=0; ЧГ=0") + "/" + Формат(НормаМес, "ЧДЦ=; ЧН=0; ЧГ=0");
			ТекстСообщения = НСтр("ru = '" + ТекстСообщения + "'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЦикла;
	
	//свернем нулевые строки
	Если ПовторнаяСверткаНулевыхСтрок = Истина Тогда
		СвернутьНулевыеСтроки(ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь Заявка 000000008689 14.07.2016|19.07.2016

//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000006316 18.08.2016
Процедура РаспределениеАвансаПоСтатьямФинансирования(ТекущийОбъект, ПериодРегистрации)
	
	//проверка
	Если НЕ ТипЗнч(ТекущийОбъект.СпособВыплаты) = Тип("СправочникСсылка.СпособыВыплатыЗарплаты") Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ТекущийОбъект.СпособВыплаты.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда
		Возврат;
	КонецЕсли;
	
	//параметры
	МассивСотрудников = Новый Массив;
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		МассивСотрудников.Добавить(СтрЗарплата.Сотрудник);
	КонецЦикла;
	
	//чтение распределения по статьям финансирования, только последняя действующая статья
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетРаспределениеОсновногоЗаработка.ПериодРегистрации,
	|	БухучетРаспределениеОсновногоЗаработка.Сотрудник,
	|	БухучетРаспределениеОсновногоЗаработка.СтатьяФинансирования,
	|	БухучетРаспределениеОсновногоЗаработка.ДоляРаспределения,
	|	БухучетРаспределениеОсновногоЗаработка.АФМ_ПериодНачало
	|ПОМЕСТИТЬ ВТВыбор
	|ИЗ
	|	РегистрСведений.БухучетРаспределениеОсновногоЗаработка КАК БухучетРаспределениеОсновногоЗаработка
	|ГДЕ
	|	БухучетРаспределениеОсновногоЗаработка.Активность = ИСТИНА
	|	И БухучетРаспределениеОсновногоЗаработка.Сотрудник В(&Сотрудники)
	|	И БухучетРаспределениеОсновногоЗаработка.ПериодРегистрации <= &ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВыбор.Сотрудник,
	|	МАКСИМУМ(ВТВыбор.ПериодРегистрации) КАК ПериодРегистрации,
	|	МАКСИМУМ(ВТВыбор.АФМ_ПериодНачало) КАК АФМ_ПериодНачало
	|ПОМЕСТИТЬ ВТМаксимальныйПериод
	|ИЗ
	|	ВТВыбор КАК ВТВыбор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВыбор.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТМаксимальныйПериод.Сотрудник,
	|	ВТВыбор.СтатьяФинансирования
	|ИЗ
	|	ВТМаксимальныйПериод КАК ВТМаксимальныйПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыбор КАК ВТВыбор
	|		ПО ВТМаксимальныйПериод.Сотрудник = ВТВыбор.Сотрудник
	|			И ВТМаксимальныйПериод.ПериодРегистрации = ВТВыбор.ПериодРегистрации
	|			И ВТМаксимальныйПериод.АФМ_ПериодНачало = ВТВыбор.АФМ_ПериодНачало";
	
	ТаблицаРаспределения = Запрос.Выполнить().Выгрузить();
	
	//распределение в табличной части документа
	Для Каждого СтрЗарплата Из ТекущийОбъект.Зарплата Цикл
		
		Если НЕ СтрЗарплата.СтатьяФинансирования = Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Сотрудник", СтрЗарплата.Сотрудник);
		СтрокиРаспределения = ТаблицаРаспределения.НайтиСтроки(СтруктураПоиска);
		Если СтрокиРаспределения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрЗарплата.СтатьяФинансирования = СтрокиРаспределения[0].СтатьяФинансирования;
		
	КонецЦикла;
	
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000006316 18.08.2016

#КонецОбласти
	
#Область ОбщийМодуль_ВзаиморасчетыССотрудникамиРасширенный

//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007523 03.06.2016
Процедура ЗаполнитьПараметрыПолученияСотрудниковПоШапкеВедомости_Изменение(ПараметрыПолученияСотрудников, Ведомость, ХарактерВыплаты) Экспорт
	
	//при формировании ведомости на выплату за период, учитываются только сотрудники, которые работают в этом
	//периоде, а нужно что бы в него попадли и уволенные ранее. Смещение взял 12 месяцев (год), с учетом того,
	//что через год все взаиморасчеты с уволенным сотрудником точно прекратятся.
	ПараметрыПолученияСотрудников.НачалоПериода = ДобавитьМесяц(ПараметрыПолученияСотрудников.НачалоПериода, -12);
	
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007523 03.06.2016

//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007165 25.04.2016

//Изменение порядка заполнения Больничных, т.е. если в больничном есть перерасчет,
//	то исключаем его и учитываем сумму полностью. Разница по перерасчету должна учитываться
//	при выплате з/п.
Процедура СоздатьВТЗарплатаКВыплатеМежрасчет_Изменение(МенеджерВременныхТаблиц, ТолькоРазрешенные, Параметры, ИмяВТСотрудники) Экспорт
	
	//проверки
	Если НЕ Параметры.ХарактерВыплаты=Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ДокументыОснования.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТипЗнч(Параметры.ДокументыОснования[0])=Тип("ДокументСсылка.БольничныйЛист") Тогда
		Возврат;
	КонецЕсли;
	
	//добавим к выплате сумму перерасчета,
	//	ситуаций может быть много, но основная - это года отпуск заменяется больничным.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007310 17.05.2016 | 29.08.2016
	//анализ - есть ли перерасчет в документах
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	Начисления.ВидРасчета,
	|	Начисления.ПериодДействия,
	|	Начисления.Результат КАК Сумма,
	|	МАКСИМУМ(Начисления.Сторно) КАК Сторно
	|ПОМЕСТИТЬ ВТПерерасчетАФМ
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТЗарплатаКВыплате.ДокументОснование
	|			ИЗ
	|				ВТЗарплатаКВыплате)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ПериодДействия,
	|	Начисления.Сотрудник,
	|	Начисления.Результат,
	|	Начисления.ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПерерасчетАФМ.Сотрудник
	|ИЗ
	|	ВТПерерасчетАФМ КАК ВТПерерасчетАФМ
	|ГДЕ
	|	ВТПерерасчетАФМ.Сторно = ИСТИНА";
	ТаблицаПерерасчетов = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПерерасчетов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаПерерасчета Из ТаблицаПерерасчетов Цикл
		ТекстСообщения = НСтр("ru = 'При формировании выплаты больничного по сотруднику [" + СокрЛП(СтрокаПерерасчета.Сотрудник) + "] будет исключена [Сумма перерасчета]'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЦикла;
	
	//дополним основную ВТЗарплатаКВыплате
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияУдержанияПоСотрудникам.Сотрудник,
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
	|	НачисленияУдержанияПоСотрудникам.Подразделение,
	|	НачисленияУдержанияПоСотрудникам.Период КАК ПериодВзаиморасчетов,
	|	НачисленияУдержанияПоСотрудникам.СтатьяФинансирования,
	|	НачисленияУдержанияПоСотрудникам.СтатьяРасходов,
	|	НачисленияУдержанияПоСотрудникам.Регистратор КАК ДокументОснование,
	|	СУММА(НачисленияУдержанияПоСотрудникам.Сумма) КАК КВыплате
	|ПОМЕСТИТЬ ВТПерерасчетИтогАФМ
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетАФМ КАК ВТПерерасчетАФМ
	|		ПО НачисленияУдержанияПоСотрудникам.Сотрудник = ВТПерерасчетАФМ.Сотрудник
	|			И НачисленияУдержанияПоСотрудникам.НачислениеУдержание = ВТПерерасчетАФМ.ВидРасчета
	|			И НачисленияУдержанияПоСотрудникам.ПериодДействия = ВТПерерасчетАФМ.ПериодДействия
	|			И НачисленияУдержанияПоСотрудникам.Сумма = ВТПерерасчетАФМ.Сумма
	|ГДЕ
	|	НачисленияУдержанияПоСотрудникам.Регистратор В
	|			(ВЫБРАТЬ
	|				ВТЗарплатаКВыплате.ДокументОснование
	|			ИЗ
	|				ВТЗарплатаКВыплате)
	|	И ЕСТЬNULL(ВТПерерасчетАФМ.Сторно, ЛОЖЬ) = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо,
	|	НачисленияУдержанияПоСотрудникам.Сотрудник,
	|	НачисленияУдержанияПоСотрудникам.СтатьяФинансирования,
	|	НачисленияУдержанияПоСотрудникам.Период,
	|	НачисленияУдержанияПоСотрудникам.Подразделение,
	|	НачисленияУдержанияПоСотрудникам.СтатьяРасходов,
	|	НачисленияУдержанияПоСотрудникам.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗарплатаКВыплате.Сотрудник,
	|	ВТЗарплатаКВыплате.ФизическоеЛицо,
	|	ВТЗарплатаКВыплате.Подразделение,
	|	ВТЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ВТЗарплатаКВыплате.СтатьяФинансирования,
	|	ВТЗарплатаКВыплате.СтатьяРасходов,
	|	ВТЗарплатаКВыплате.ДокументОснование,
	|	ВТЗарплатаКВыплате.КВыплате
	|ПОМЕСТИТЬ ВТОбщаяАФМ
	|ИЗ
	|	ВТЗарплатаКВыплате КАК ВТЗарплатаКВыплате
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТПерерасчетИтогАФМ.Сотрудник,
	|	ВТПерерасчетИтогАФМ.ФизическоеЛицо,
	|	ВТПерерасчетИтогАФМ.Подразделение,
	|	ВТПерерасчетИтогАФМ.ПериодВзаиморасчетов,
	|	ВТПерерасчетИтогАФМ.СтатьяФинансирования,
	|	ВТПерерасчетИтогАФМ.СтатьяРасходов,
	|	ВТПерерасчетИтогАФМ.ДокументОснование,
	|	-1 * ВТПерерасчетИтогАФМ.КВыплате
	|ИЗ
	|	ВТПерерасчетИтогАФМ КАК ВТПерерасчетИтогАФМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПерерасчетАФМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПерерасчетИтогАФМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗарплатаКВыплате
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбщаяАФМ.Сотрудник,
	|	ВТОбщаяАФМ.ФизическоеЛицо,
	|	ВТОбщаяАФМ.Подразделение,
	|	ВТОбщаяАФМ.ПериодВзаиморасчетов,
	|	ВТОбщаяАФМ.СтатьяФинансирования,
	|	ВТОбщаяАФМ.СтатьяРасходов,
	|	ВТОбщаяАФМ.ДокументОснование,
	|	СУММА(ВТОбщаяАФМ.КВыплате) КАК КВыплате
	|ПОМЕСТИТЬ ВТЗарплатаКВыплате
	|ИЗ
	|	ВТОбщаяАФМ КАК ВТОбщаяАФМ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбщаяАФМ.СтатьяРасходов,
	|	ВТОбщаяАФМ.ФизическоеЛицо,
	|	ВТОбщаяАФМ.Подразделение,
	|	ВТОбщаяАФМ.ПериодВзаиморасчетов,
	|	ВТОбщаяАФМ.СтатьяФинансирования,
	|	ВТОбщаяАФМ.Сотрудник,
	|	ВТОбщаяАФМ.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОбщаяАФМ";
	//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007310 17.05.2016 | 29.08.2016
	
	Запрос.Выполнить();
	
КонецПроцедуры

//Добавим в выплату "Период взаиморасчетов", который оказался в следующем
//	"Периоде действия", например отпуск за март выплатили в апреле, при этом когда делаем
//	итоговую ведомость по зарплате за март, в нее не попадает оплата, которая
//	прошла в апреле.
//
//	Замечание. Была идея поменять отбор в запросе "Периоде действия" -> "Период взаиморасчетов",
//	но так делать нельзя, т.к. основной отбор должен быть по периоду действия, в котором может
//	быть любой период взаиморасчетов. Процедура СоздатьВТЗарплатаКВыплатеЗарплата().
Процедура СоздатьВТЗарплатаКВыплате_Изменение(МенеджерВременныхТаблиц, ТолькоРазрешенные, Параметры, ИмяВТСотрудники) Экспорт

	//проверки
	Если НЕ Параметры.ХарактерВыплаты=Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		Возврат;
	КонецЕсли;
	
	//добавление данных
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",		Параметры.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации",	Параметры.ПериодРегистрации);
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗарплатаКВыплате.Сотрудник,
	|	ЗарплатаКВыплате.ФизическоеЛицо,
	|	ЗарплатаКВыплате.Подразделение,
	|	ЗарплатаКВыплате.Период КАК ПериодВзаиморасчетов,
	|	ЗарплатаКВыплате.СтатьяФинансирования,
	|	ЗарплатаКВыплате.СтатьяРасходов,
	|	ЗарплатаКВыплате.ДокументОснование КАК ДокументОснование,
	|	-ЗарплатаКВыплате.СуммаКВыплате КАК КВыплате
	|ПОМЕСТИТЬ ВТДополнительно
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|ГДЕ
	|	ЗарплатаКВыплате.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ЗарплатаКВыплате.Сотрудник В
	|			(ВЫБРАТЬ
	|				Сотрудники.Сотрудник
	|			ИЗ
	|				#ВТСотрудники КАК Сотрудники)
	|	И ЗарплатаКВыплате.Период > &ПериодРегистрации
	|	И НАЧАЛОПЕРИОДА(ЗарплатаКВыплате.ПериодВзаиморасчетов, МЕСЯЦ) = &ПериодРегистрации
	|	И ЗарплатаКВыплате.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗарплатаКВыплате.Сотрудник,
	|	ВТЗарплатаКВыплате.ФизическоеЛицо,
	|	ВТЗарплатаКВыплате.Подразделение,
	|	ВТЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ВТЗарплатаКВыплате.СтатьяФинансирования,
	|	ВТЗарплатаКВыплате.СтатьяРасходов,
	|	ВТЗарплатаКВыплате.ДокументОснование,
	|	ВТЗарплатаКВыплате.КВыплате
	|ПОМЕСТИТЬ ВТОбщая
	|ИЗ
	|	ВТЗарплатаКВыплате КАК ВТЗарплатаКВыплате
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДополнительно.Сотрудник,
	|	ВТДополнительно.ФизическоеЛицо,
	|	ВТДополнительно.Подразделение,
	|	ВТДополнительно.ПериодВзаиморасчетов,
	|	ВТДополнительно.СтатьяФинансирования,
	|	ВТДополнительно.СтатьяРасходов,
	|	ВТДополнительно.ДокументОснование,
	|	ВТДополнительно.КВыплате
	|ИЗ
	|	ВТДополнительно КАК ВТДополнительно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗарплатаКВыплате
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДополнительно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбщая.Сотрудник,
	|	ВТОбщая.ФизическоеЛицо,
	|	ВТОбщая.Подразделение,
	|	ВТОбщая.ПериодВзаиморасчетов,
	|	ВТОбщая.СтатьяФинансирования,
	|	ВТОбщая.СтатьяРасходов,
	|	ВТОбщая.ДокументОснование,
	|	СУММА(ВТОбщая.КВыплате) КАК КВыплате
	|ПОМЕСТИТЬ ВТЗарплатаКВыплате
	|ИЗ
	|	ВТОбщая КАК ВТОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОбщая.СтатьяФинансирования,
	|	ВТОбщая.СтатьяРасходов,
	|	ВТОбщая.ФизическоеЛицо,
	|	ВТОбщая.ДокументОснование,
	|	ВТОбщая.Сотрудник,
	|	ВТОбщая.Подразделение,
	|	ВТОбщая.ПериодВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОбщая";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСотрудники", ИмяВТСотрудники);
	
	Запрос.Выполнить();
	
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007165 25.04.2016

#КонецОбласти
