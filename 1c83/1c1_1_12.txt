//Процедура заполнения обязательств при ежемесячном расчете

&НаСервере
Процедура ЗаполнитьСервер()
	
	//параметры
	ПриказыОтбор = Новый Массив;
	Для Каждого Приказ Из Объект.ОтборПоПриказам Цикл
		Если ЗначениеЗаполнено(Приказ.ПриказОтсроченногоВознаграждения) Тогда
			ПриказыОтбор.Добавить(Приказ.ПриказОтсроченногоВознаграждения);
		КонецЕсли;
	КонецЦикла;
	
	ПроцентВыплатыОбщий = Объект.ПроцентВыплатыОбщий;
	Если ПроцентВыплатыОбщий = 0 Тогда
		ПроцентВыплатыОбщий = 100;
	КонецЕсли;
	Если ПроцентВыплатыОбщий > 100 Тогда
		ПроцентВыплатыОбщий = 100;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТекДокумент",		Объект.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачала",			НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания",		КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	
	Запрос.УстановитьПараметр("ОтборПоПриказу",		?(ПриказыОтбор.Количество() = 0, Ложь, Истина));
	Запрос.УстановитьПараметр("ПриказыОтбор",		ПриказыОтбор);
	Запрос.УстановитьПараметр("ДатаВыплатыНовая",	НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ПроцентВыплатыОбщий",ПроцентВыплатыОбщий);
	
	//1. выбор работающих сотрудников
	ИмяВТСотрудникиОрганизации = "ВТСотрудникиОрганизацииПредварительно";
	КадровыеДанные = "Организация";
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация = Объект.Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные = КадровыеДанные;
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций, ИмяВТСотрудникиОрганизации);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФизическоеЛицо КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Организация КАК Справочник.Организации) КАК Организация
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ВТСотрудникиОрганизацииПредварительно КАК ВТСотрудникиОрганизацииПредварительно";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	//2. выплата
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ПриказОтсроченногоВознаграждения,
	|	ВЫБОР
	|		КОГДА &ОтборПоПриказу = ИСТИНА
	|			ТОГДА &ДатаВыплатыНовая
	|		ИНАЧЕ ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты
	|	КОНЕЦ КАК ДатаВыплаты,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты КАК ДатаВыплатыИсходная,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличина КАК СуммаВыплаты,
	|	ИСТИНА КАК ВходитВВыплату,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаВвода,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличинаИтог - ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличина КАК СтраховыеВзносы,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличина * 0.13 КАК НДФЛ,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличинаИтог,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ОбязательствоСВ,
	|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.СтавкаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТВыплата
	|ИЗ
	|	РегистрСведений.ОФК_СостояниеПриказовОтсроченногоВознаграждения.СрезПоследних(
	|			&ДатаОкончания,
	|			НЕ Регистратор = &ТекДокумент
	|				И Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТСотрудники.Сотрудник
	|					ИЗ
	|						ВТСотрудники)) КАК ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтборПоПриказу = ИСТИНА
	|				ТОГДА ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ПриказОтсроченногоВознаграждения В (&ПриказыОтбор)
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты >= &ДатаНачала
	|							И ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты <= &ДатаОкончания
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Сотрудник,
	|	ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.ПриказОтсроченногоВознаграждения,
	|	СУММА(ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Обязательство) КАК НачисленоВсего,
	|	СУММА(ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.ОбязательствоСВ) КАК ОбязательствоСВНач
	|ПОМЕСТИТЬ ВТНачислено
	|ИЗ
	|	РегистрНакопления.ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения КАК ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения
	|ГДЕ
	|	ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Активность = ИСТИНА
	|	И ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Период <= &ДатаОкончания
	|	И ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Регистратор <> &ТекДокумент
	|	И ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТВыплата.Сотрудник
	|			ИЗ
	|				ВТВыплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.Сотрудник,
	|	ОФК_ОбязательстваПоВыплатеОтсроченногоВознаграждения.ПриказОтсроченногоВознаграждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОФК_ОбязательстваВыплаты.Сотрудник,
	|	ОФК_ОбязательстваВыплаты.ПриказОтсроченногоВознаграждения,
	|	СУММА(ОФК_ОбязательстваВыплаты.СуммаВыплатыИтог) КАК СуммаВыплаты
	|ПОМЕСТИТЬ ВТВыплачено
	|ИЗ
	|	РегистрНакопления.ОФК_ОбязательстваВыплаты КАК ОФК_ОбязательстваВыплаты
	|ГДЕ
	|	ОФК_ОбязательстваВыплаты.Активность = ИСТИНА
	|	И ОФК_ОбязательстваВыплаты.Период <= &ДатаОкончания
	|	И ОФК_ОбязательстваВыплаты.Регистратор <> &ТекДокумент
	|	И ОФК_ОбязательстваВыплаты.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТВыплата.Сотрудник
	|			ИЗ
	|				ВТВыплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОФК_ОбязательстваВыплаты.Сотрудник,
	|	ОФК_ОбязательстваВыплаты.ПриказОтсроченногоВознаграждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВыплата.ПриказОтсроченногоВознаграждения КАК ПриказОтсроченногоВознаграждения,
	|	ВТВыплата.ДатаВыплаты,
	|	ВТВыплата.ДатаВыплатыИсходная,
	|	ВТВыплата.Сотрудник,
	|	ВТВыплата.ФизическоеЛицо,
	|	ВТВыплата.СуммаВыплаты,
	|	ВТВыплата.ДатаВвода,
	|	ВТВыплата.СтраховыеВзносы,
	|	ВТВыплата.НДФЛ,
	|	ВТВыплата.БазоваяВеличинаИтог,
	|	ВТВыплата.СуммаВыплаты - ЕСТЬNULL(ВТНачислено.НачисленоВсего, 0) КАК СуммаКорректировки60349,
	|	ВТВыплата.СтраховыеВзносы - ЕСТЬNULL(ВТНачислено.ОбязательствоСВНач, 0) КАК СуммаКорректировки60349СВ,
	|	ВТВыплата.СуммаВыплаты КАК БазоваяВеличина,
	|	НЕОПРЕДЕЛЕНО КАК ДокументНачисления,
	|	&ПроцентВыплатыОбщий КАК ПроцентВыплаты,
	|	ЕСТЬNULL(ВТВыплачено.СуммаВыплаты, 0) КАК ВыплаченоРанее,
	|	ВЫРАЗИТЬ((ВТВыплата.СуммаВыплаты - ЕСТЬNULL(ВТВыплачено.СуммаВыплаты, 0)) * (&ПроцентВыплатыОбщий / 100) КАК ЧИСЛО(15, 2)) КАК СуммаВыплатыИтог,
	|	ВТВыплата.СтавкаСтраховыхВзносов
	|ПОМЕСТИТЬ ВТСводная
	|ИЗ
	|	ВТВыплата КАК ВТВыплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислено КАК ВТНачислено
	|		ПО ВТВыплата.Сотрудник = ВТНачислено.Сотрудник
	|			И ВТВыплата.ПриказОтсроченногоВознаграждения = ВТНачислено.ПриказОтсроченногоВознаграждения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплачено КАК ВТВыплачено
	|		ПО ВТВыплата.Сотрудник = ВТВыплачено.Сотрудник
	|			И ВТВыплата.ПриказОтсроченногоВознаграждения = ВТВыплачено.ПриказОтсроченногоВознаграждения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСводная.ПриказОтсроченногоВознаграждения,
	|	ВТСводная.ДатаВыплаты,
	|	ВТСводная.ДатаВыплатыИсходная,
	|	ВТСводная.Сотрудник,
	|	ВТСводная.ФизическоеЛицо,
	|	ВТСводная.СуммаВыплаты,
	|	ВТСводная.ДатаВвода,
	|	ВТСводная.СтраховыеВзносы,
	|	ВТСводная.НДФЛ,
	|	ВТСводная.БазоваяВеличинаИтог,
	|	ВТСводная.СуммаКорректировки60349,
	|	ВТСводная.СуммаКорректировки60349СВ,
	|	ВТСводная.БазоваяВеличина,
	|	ВТСводная.ДокументНачисления,
	|	ВТСводная.ПроцентВыплаты,
	|	ВТСводная.ВыплаченоРанее,
	|	ВТСводная.СуммаВыплатыИтог,
	|	ВТСводная.СтавкаСтраховыхВзносов
	|ИЗ
	|	ВТСводная КАК ВТСводная
	|ГДЕ
	|	ВТСводная.СуммаВыплатыИтог > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТСводная.Сотрудник.Наименование,
	|	ВТСводная.ДатаВыплаты,
	|	ВТСводная.ПриказОтсроченногоВознаграждения";
	
	ТаблицаВыплат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаВыплаты Из ТаблицаВыплат Цикл
		НоваяСтрока = Объект.Выплата.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыплаты);
		НоваяСтрока.НДФЛ = Окр(СтрокаВыплаты.НДФЛ, 0);
	КонецЦикла;
	
	//3. расчет - в конце квартала
	Если (Месяц(Объект.ПериодРегистрации) = 3 ИЛИ Месяц(Объект.ПериодРегистрации) = 6
		ИЛИ Месяц(Объект.ПериодРегистрации) = 9 ИЛИ Месяц(Объект.ПериодРегистрации) = 12)
		И ПриказыОтбор.Количество() = 0 Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ПриказОтсроченногоВознаграждения,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличина,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.СтавкаСтраховыхВзносов,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.БазоваяВеличинаИтог,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.КоэффициентТекучестиКадров,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.КоэффициентВероятностиДожития,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.СтавкаДисконтирования,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ПериодВыплаты,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.СтавкаСтраховыхВзносов КАК СтавкаСтраховыхВзносовИсходная,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.КоэффициентТекучестиКадров КАК КоэффициентТекучестиКадровИсходная,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.КоэффициентВероятностиДожития КАК КоэффициентВероятностиДожитияИсходная,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.СтавкаДисконтирования КАК СтавкаДисконтированияИсходная,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаВвода
		|ИЗ
		|	РегистрСведений.ОФК_СостояниеПриказовОтсроченногоВознаграждения.СрезПоследних(
		|			&ДатаОкончания,
		|			НЕ Регистратор = &ТекДокумент
		|				И Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТСотрудники.Сотрудник
		|					ИЗ
		|						ВТСотрудники)) КАК ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыплата КАК ВТВыплата
		|		ПО ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник = ВТВыплата.Сотрудник
		|			И ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ПриказОтсроченногоВознаграждения = ВТВыплата.ПриказОтсроченногоВознаграждения
		|ГДЕ
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Выплачено = ЛОЖЬ
		|	И ЕСТЬNULL(ВТВыплата.ВходитВВыплату, ЛОЖЬ) = ЛОЖЬ
		|	И ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаВвода < &ДатаНачала
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.Сотрудник.Наименование,
		|	ОФК_СостояниеПриказовОтсроченногоВознагражденияСрезПоследних.ДатаПланируемойВыплаты";
		
		ТаблицаРасчет = Запрос.Выполнить().Выгрузить();
		
		//заполнение строк
		Для Каждого СтрокаРасчета Из ТаблицаРасчет Цикл
			НоваяСтрока = Объект.Расчет.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасчета);
		КонецЦикла;
		
		//расчет строк
		Если ТаблицаРасчет.Количество() > 0 Тогда
			МассивСотрудников = ТаблицаРасчет.ВыгрузитьКолонку("Сотрудник");
			РассчитатьСотрудниковНаСервере(МассивСотрудников);
		КонецЕсли;
		
	КонецЕсли;
	
	//очистка памяти
	Запрос = Неопределено;
	
КонецПроцедуры
