// Формирует запрос по документу.
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк.
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечатиШапки(Ведомости) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВедомостьВБанк.Ссылка КАК Ссылка,
	|	ВедомостьВБанк.Номер КАК Номер,
	|	ВедомостьВБанк.Дата КАК Дата,
	|	ВедомостьВБанк.ПериодРегистрации КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА ВедомостьВБанк.АФМ_ПериодРегистрации = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВедомостьВБанк.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВедомостьВБанк.АФМ_ПериодРегистрации, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодРегистрацииАФМ,
	|	ВедомостьВБанк.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВедомостьВБанк.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ВедомостьВБанк.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ВедомостьВБанк.Подразделение КАК Подразделение,
	|	ВедомостьВБанк.СуммаПоДокументу КАК СуммаПоДокументу,
	|	ВедомостьВБанк.Руководитель,
	|	ВедомостьВБанк.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	ВедомостьВБанк.ГлавныйБухгалтер,
	|	ВедомостьВБанк.Бухгалтер,
	|	ВедомостьВБанк.ЗарплатныйПроект.ДатаДоговора КАК ДатаДоговора,
	|	ВедомостьВБанк.ЗарплатныйПроект.НомерДоговора КАК НомерДоговора,
	|	ВедомостьВБанк.НомерРеестра КАК НомерРеестра,
	|	ВедомостьВБанк.Организация.Наименование КАК СокращенноеНазваниеОрганизации,
	|	ВедомостьВБанк.ЗарплатныйПроект.Банк.Наименование КАК НаименованиеБанка,
	|	ВедомостьВБанк.ЗарплатныйПроект.Банк.ИНН КАК ИНН,
	|	ВедомостьВБанк.ЗарплатныйПроект.Банк.Код КАК БИК,
	|	ВедомостьВБанк.ЗарплатныйПроект.Банк.КоррСчет КАК НомерСчета,
	|	ВедомостьВБанк.Организация.ИНН КАК ИННОрганизации,
	|	ВедомостьВБанк.ЗарплатныйПроект.РасчетныйСчет КАК РасчетныйСчет
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВБанк КАК ВедомостьВБанк
	|ГДЕ
	|	ВедомостьВБанк.Ссылка В(&Ведомости)";
	
	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Бухгалтер");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.ПериодРегистрации,
	|	ДанныеДокументов.ПериодРегистрацииАФМ,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НазваниеОрганизации,
	|	ДанныеДокументов.КодПоОКПО,
	|	ДанныеДокументов.Подразделение,
	|	ДанныеДокументов.СуммаПоДокументу,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.РасшифровкаПодписи, """") КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(ВТФИОРуководителейПоследние.РасшифровкаПодписи, """") КАК Руководитель,
	|	ДанныеДокументов.РуководительДолжность,
	|	ЕСТЬNULL(ВТФИОБухгалтерПоследние.РасшифровкаПодписи, """") КАК Бухгалтер,
	|	ДанныеДокументов.ДатаДоговора,
	|	ДанныеДокументов.НомерДоговора,
	|	ДанныеДокументов.НомерРеестра,
	|	ДанныеДокументов.СокращенноеНазваниеОрганизации,
	|	ДанныеДокументов.НаименованиеБанка,
	|	ДанныеДокументов.ИНН,
	|	ДанныеДокументов.БИК,
	|	ДанныеДокументов.ИННОрганизации,
	|	ДанныеДокументов.НомерСчета,
	|	ДанныеДокументов.РасчетныйСчет
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОРуководителейПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОРуководителейПоследние.Ссылка
	|			И ДанныеДокументов.Руководитель = ВТФИОРуководителейПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И ДанныеДокументов.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОБухгалтерПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОБухгалтерПоследние.Ссылка
	|			И ДанныеДокументов.Бухгалтер = ВТФИОБухгалтерПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокументов.Дата, ГОД),
	|	ДанныеДокументов.Номер";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции



// Вывод в макет
Функция ПечатьСписокПеречислений(МассивОбъектов, ОбъектыПечати, ДанныеДляПечати, Макет)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьНаВыплатуЗарплатыВБанк_АльфаБанк";
	
	// получаем данные для печати
	ДанныеДляПечатиШапок = ДанныеДляПечати.ДанныеШапок;
	ДанныеДляПечатиСтрок = ДанныеДляПечати.ДанныеСтрок;
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеДляПечатиШапки Из ДанныеДляПечатиШапок Цикл
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период", ДанныеДляПечатиШапки.Дата);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.ГлавныйБухгалтер
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&Период, ) КАК СведенияОбОтветственныхЛицахСрезПоследних";
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Подсчитываем количество страниц документа - для корректного разбиения на страницы.
		ВсегоСтрокДокумента = ДанныеДляПечатиСтрок.Количество();
		
		ОбластьМакетаШапкаДокумента	= Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапкаТаблицы	= Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице	= Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// Массив с двумя строками - для разбиения на страницы.
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ДанныеДляПечатиШапки);
		ОбластьМакетаШапкаДокумента.Параметры.ПериодРегистрации = Формат(ДанныеДляПечатиШапки.ПериодРегистрацииАФМ, "ДФ=""ММММ гггг""");
		ОбластьМакетаШапкаДокумента.Параметры.ДатаДоговора = Формат(ДанныеДляПечатиШапки.ДатаДоговора, "ДФ=dd.MM.yyyy");
		
		//Вызов функции заполнения реквизитов платежного поручения
		ОбластьМакетаШапкаДокумента.Параметры.РеквизитыПлатежногоПоручения = "№__________ от «_____»_______20__ года";
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		
		ОбластьМакетаШапкаТаблицы.Параметры.Дата = Формат(ДанныеДляПечатиШапки.Дата, "ДЛФ=ДД");
		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТаблицы);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0;
		// Выводим данные по строкам документа.
		НомерСтроки = 0;
		НайденныеСтроки = ДанныеДляПечатиСтрок.НайтиСтроки(Новый Структура("Ведомость", ДанныеДляПечатиШапки.Ссылка));
		Для Каждого ДанныеДляПечатиСтроки Из НайденныеСтроки Цикл
			
			НомерСтроки = НомерСтроки + 1;
			ОснованиеОперации = 1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеДляПечатиСтроки);
			ОбластьМакетаСтрока.Параметры.НомерСтроки = НомерСтроки;
			ОбластьМакетаСтрока.Параметры.ОснованиеОперации = ОснованиеОперации;
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ДанныеДляПечатиСтроки.Сумма;
			
		КонецЦикла;
		
		Если ВыведеноСтрок > 0 Тогда 
			ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = Формат(ИтогоНаСтранице, "ЧДЦ=2");
			ОбластьМакетаИтогПоСтранице.Параметры.КоличествоРаботников = НомерСтроки;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		Если ДанныеДляПечатиШапки.ГлавныйБухгалтер <> "" Тогда
			ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечатиШапки);
			ОбластьМакетаПодвал.Параметры.Дата = Формат(ДанныеДляПечатиШапки.Дата, "ДФ=dd.MM.yyyy");
		Иначе
			ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечатиШапки);
			ОбластьМакетаПодвал.Параметры.Дата = Формат(ДанныеДляПечатиШапки.Дата, "ДФ=dd.MM.yyyy");
			Для Каждого Элемент Из РезультатЗапроса Цикл
				Элемент = ФамилияИнициалы(Строка(Элемент.ГлавныйБухгалтер));
				ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер = Элемент;
			КонецЦикла;
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		Если ЗначениеЗаполнено(ОбъектыПечати) Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечатиШапки.Ссылка);
		КонецЕсли;
		
	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции
