
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Процедура рассылки состояний сотрудников.
//
Процедура РассылкаСостоянийСотрудников(ДатаДанных) Экспорт
	
	//------------------------------------------------------------------------------------------------------------
	// РАСЧЕТ
	//------------------------------------------------------------------------------------------------------------
	
	//выборка данных - ч1 (основная)
	ИмяВТСотрудникиОрганизации = "ВТСотрудникиОрганизацииПредварительно";
	КадровыеДанные = "Организация,ФИОПолные";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаДанных", КонецДня(ДатаДанных));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода = КонецДня(ДатаДанных);
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода = КонецДня(ДатаДанных);
	ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные = КадровыеДанные;
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций, ИмяВТСотрудникиОрганизации);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФизическоеЛицо КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.Организация КАК Справочник.Организации) КАК Организация,
	|	ВЫРАЗИТЬ(ВТСотрудникиОрганизацииПредварительно.ФИОПолные КАК СТРОКА(255)) КАК СотрудникФИО
	|ПОМЕСТИТЬ ВТВыборОсновной
	|ИЗ
	|	ВТСотрудникиОрганизацииПредварительно КАК ВТСотрудникиОрганизацииПредварительно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияСотрудников.Сотрудник,
	|	СостоянияСотрудников.Состояние,
	|	СостоянияСотрудников.Период КАК ПериодНачало,
	|	СостоянияСотрудников.ДействуетДо КАК ПериодОкончание
	|ПОМЕСТИТЬ ВТСостояниеВыбор
	|ИЗ
	|	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
	|ГДЕ
	|	СостоянияСотрудников.Период <= &ДатаДанных
	|	И СостоянияСотрудников.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТВыборОсновной.Сотрудник
	|			ИЗ
	|				ВТВыборОсновной)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостояниеВыбор.Сотрудник,
	|	МАКСИМУМ(ВТСостояниеВыбор.ПериодНачало) КАК ПериодНачало
	|ПОМЕСТИТЬ ВТСостоянияСрез
	|ИЗ
	|	ВТСостояниеВыбор КАК ВТСостояниеВыбор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСостояниеВыбор.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСостоянияСрез.Сотрудник,
	|	ВТСостояниеВыбор.Состояние,
	|	ВТСостоянияСрез.ПериодНачало,
	|	ВТСостояниеВыбор.ПериодОкончание
	|ПОМЕСТИТЬ ВТСостояния
	|ИЗ
	|	ВТСостоянияСрез КАК ВТСостоянияСрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеВыбор КАК ВТСостояниеВыбор
	|		ПО ВТСостоянияСрез.Сотрудник = ВТСостояниеВыбор.Сотрудник
	|			И ВТСостоянияСрез.ПериодНачало = ВТСостояниеВыбор.ПериодНачало
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВыборОсновной.Организация КАК Организация,
	|	ВТВыборОсновной.Сотрудник,
	|	ВТВыборОсновной.СотрудникФИО,
	|	ВТВыборОсновной.Сотрудник.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(ВТСостояния.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ПустаяСсылка)) КАК Состояние,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК СостояниеТекст,
	|	ЕСТЬNULL(ВТСостояния.ПериодНачало, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ПериодНачало,
	|	ЕСТЬNULL(ВТСостояния.ПериодОкончание, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ПериодОкончание
	|ИЗ
	|	ВТВыборОсновной КАК ВТВыборОсновной
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояния КАК ВТСостояния
	|		ПО ВТВыборОсновной.Сотрудник = ВТСостояния.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТВыборОсновной.Организация.Префикс,
	|	ВТВыборОсновной.Сотрудник.Наименование";
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	//выборка данных - ч2 (сотрудники в простое)
	МассивСотрудниковВПростое = ОФК_ОбщегоНазначенияСервер.ПолучитьСотрудниковВПростое(НачалоДня(ДатаДанных), КонецДня(ДатаДанных), Истина);
	
	//формирование представления состояния для Lotus
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаДанных.Состояние) ИЛИ СтрокаДанных.Состояние = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СостояниеТекст = "Отсутствует";
		
		Если СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.Работа
			ИЛИ СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.ПростойНеЗависящийОтРаботодателяИРаботника
			ИЛИ СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком Тогда
			
			СостояниеТекст = "Работа";
			
			//уточним находится ли сотрудник в простое
			Если НЕ МассивСотрудниковВПростое.Найти(СтрокаДанных.Сотрудник) = Неопределено Тогда
				СостояниеТекст = "Простой";
			КонецЕсли;
			
		ИначеЕсли СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком Тогда
			СостояниеТекст = "Отпуск по уходу за ребенком";
		ИначеЕсли СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.ОтпускПоБеременностиИРодам Тогда
			СостояниеТекст = "Отпуск по уходу за ребенком";
		ИначеЕсли СтрокаДанных.Состояние = Перечисления.СостоянияСотрудника.Командировка Тогда
			СостояниеТекст = "Командировка";
		КонецЕсли;
		
		Если СостояниеТекст = "Отсутствует" Тогда
			Если НЕ СтрокаДанных.ПериодНачало = Дата(1,1,1) Тогда
				СостояниеТекст = СостояниеТекст + " с " + Формат(СтрокаДанных.ПериодНачало, "ДФ=dd.MM.yyyy");
			КонецЕсли;
			Если НЕ СтрокаДанных.ПериодОкончание = Дата(1,1,1) Тогда
				СостояниеТекст = СостояниеТекст + " по " + Формат(СтрокаДанных.ПериодОкончание, "ДФ=dd.MM.yyyy");
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДанных.СостояниеТекст = СостояниеТекст;
		
	КонецЦикла;
		
	//------------------------------------------------------------------------------------------------------------
	// ФОРМИРОВАНИЕ ФАЙЛА
	//------------------------------------------------------------------------------------------------------------
	
	//параметры
	УстановитьПривилегированныйРежим(Истина);
	КаталогВыгрузки = СокрЛП(Константы.ОФК_ПутьВыгрузкиРасчетныхЛистков.Получить()); // \\10.100.10.182\RLIST
	УстановитьПривилегированныйРежим(Ложь);
	
	ИмяФайла = КаталогВыгрузки + "\StatusWorker.csv";
	
	//создание файла
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Формат(ДатаДанных, "ДФ=dd.MM.yyyy"));
	МассивСтрок.Добавить("ФИО;Табельный номер;Статус");
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		ТекстоваяСтрока = СокрЛП(СтрокаДанных.СотрудникФИО) + ";" + СокрЛП(СтрокаДанных.Организация.Префикс) + СокрЛП(СтрокаДанных.ТабельныйНомер) + ";" + СокрЛП(СтрокаДанных.СостояниеТекст);
		МассивСтрок.Добавить(ТекстоваяСтрока);
		
	КонецЦикла;
	
	// сохранение файла
	Попытка		
		
		УдалитьФайлы(ИмяФайла);
		
		Текст = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.ANSI);
		Для Каждого ТекстоваяСтрока Из МассивСтрок Цикл
			Текст.ЗаписатьСтроку(ТекстоваяСтрока);
		КонецЦикла;
		Текст.Закрыть();
		
		Текст = Неопределено;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
