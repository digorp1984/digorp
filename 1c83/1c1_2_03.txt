общий модуль - АФМ_ИзменениеТиповыхФорм


#Если Клиент Тогда

Функция ОбработатьПодключаемуюКоманду(Команда, Форма, Источник) Экспорт
	
	Если ТипЗнч(Команда) = Тип("КомандаФормы") Тогда
		ИмяКоманды	= Команда.Имя;
		
		Если ИмяКоманды	= "..." Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции	

//--> АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2016
Процедура ЗаполнениеВедомостей_ВыполнитьКоманду(ИдентификаторКоманды, ДокументВид, ФормаДок) Экспорт
	
	//проверки
	Если ИдентификаторКоманды = "" ИЛИ ДокументВид = "" Тогда
		Возврат;
	КонецЕсли;
	
	//начало анализа и расчета
	ФормаДок.Записать();
	ОчиститьСообщения();
	
	//расчет
	Если ИдентификаторКоманды="ЗаполнитьВыплатуТолькоЗаМесяц" Тогда
		//общие заполнение документа
		ВзаиморасчетыССотрудникамиКлиент.ВедомостьЗаполнить(ФормаДок);
		ФормаДок.Записать();
	КонецЕсли;
	
	//определим параметры заполнения
	ТекущийОбъект = ФормаДок.Объект;	
	
	//выполним процедуры на сервере
	АФМ_ВзаиморасчетыССотрудниками.ЗаполнениеВедомостей_ВыполнитьКомандуСервер(ИдентификаторКоманды, ТекущийОбъект);
	
	//сохраним результат
	КопироватьДанныеФормы(ТекущийОбъект, ФормаДок.Объект);
	ФормаДок.Записать();
		
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2016

#КонецЕсли

#Если Не (ТонкийКлиент Или ВебКлиент) Тогда

Процедура ОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	//Если ТипЗнч(Источник) = Тип("СправочникМенеджер.РегистрацииВНалоговомОргане") И ВидФормы = "ФормаВыбора" Тогда
	//	Если Параметры.Свойство("АФМ_Организация") Тогда
	//		Параметры.Отбор.Вставить("Владелец", Параметры.АФМ_Организация);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияДанныхВыбора(Источник, ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	//Если ТипЗнч(Источник) = Тип("СправочникМенеджер.РегистрацииВНалоговомОргане") Тогда
	//	Если Параметры.Свойство("АФМ_Организация") Тогда
	//		Параметры.Отбор.Вставить("Владелец", Параметры.АФМ_Организация);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	ПриСозданииФормыНаСервере(Форма);
	
	СтруктураПроверки	= Новый Структура("АФМ_ФормаОбработана");
	ЗаполнитьЗначенияСвойств(СтруктураПроверки, Форма);
	
	Если СтруктураПроверки.АФМ_ФормаОбработана <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров	= ПолучитьОписаниеФормы(Форма);
	ИмяФормы	= СтруктураПараметров.ИмяФормы;
	
	//Если ИмяФормы = "Документ.ПлатежноеПоручение.ФормаДокумента" Тогда
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПриСозданииФормыНаСервере(Форма) Экспорт
	СтруктураПроверки	= Новый Структура("АФМ_ФормаОбработана");
	ЗаполнитьЗначенияСвойств(СтруктураПроверки, Форма);
	
	Если СтруктураПроверки.АФМ_ФормаОбработана = Истина Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров	= ПолучитьОписаниеФормы(Форма);
	ИмяФормы	= СтруктураПараметров.ИмяФормы;
	Элементы	= СтруктураПараметров.Элементы;
	
	// Справочник Контрагенты ===============================================================
	
	Если ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		//-->АФМ-Серверс Лалетин 11.02.2016 000000008642
		СтруктураПараметров.Родитель = Форма; 
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_КодСАП");
		//<--АФМ-Серверс Лалетин 11.02.2016 000000008642	
		
	// Справочник Организации ===============================================================
	
	ИначеЕсли ИмяФормы = "Справочник.Организации.Форма.ФормаЭлемента" Тогда
		//-->АФМ-Серверс Лалетин 11.02.2016 000000008642
		Группа				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_Дополнительно", Элементы.ГруппаСтраницы);
		Группа.Вид 			= ВидГруппыФормы.Страница;
		Группа.Заголовок	= "Дополнительно (АФМ)";
		СтруктураПараметров.Родитель = Группа; 
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_КодБЕ");
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_МВЗ");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		//<--АФМ-Серверс Лалетин 11.02.2016 000000008642
		
		//-->АФМ-Серверс Дебов Игорь ДМ0000006153
		Группа0				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ДляВедомостиПеречисленияВзносов", Элементы.АФМ_Дополнительно, , Истина);
		Группа0.ОтображатьЗаголовок = Истина;
		Группа0.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		Группа0.Заголовок	= "Настройки для отчета ""Ведомость перечисления страховых взносов""";
		
		Группа1				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ДопРегНомера", Группа0, , Истина);
		Группа1.ОтображатьЗаголовок = Истина;
		Группа1.Заголовок	= "Регистрационные №:";
		СтруктураПараметров.Родитель = Группа1;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_РегНомерФФОМС");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		
		Группа2				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_Получатели", Группа0, , Истина);
		Группа2.ОтображатьЗаголовок = Истина;
		Группа2.Заголовок	= "Получатели:";
		СтруктураПараметров.Родитель = Группа2;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПолучательПФР");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПолучательФСС");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		
		Группа3				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_КБК", Группа0, , Истина);
		Группа3.ОтображатьЗаголовок = Истина;
		Группа3.Заголовок	= "Коды бюджетной классификации:";
		СтруктураПараметров.Родитель = Группа3;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "КБК_ПФР");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "КБК_ФФОМС");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "КБК_ФСС");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "КБК_ОСС");
		Элемент.РастягиватьПоГоризонтали	= Ложь;
		//<--АФМ-Серверс Дебов Игорь ДМ0000006153
		
	// Справочник ПодразделенияОрганизаций ==================================================
		
	ИначеЕсли ИмяФормы = "Справочник.ПодразделенияОрганизаций.Форма.ФормаЭлемента" Тогда
		//-->АФМ-Серверс Валиев М.А. 26.11.2015 ДМ0000006221
		СтруктураПараметров.Родитель = Элементы.ГруппаБухучетСтратегия;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_КодБух");
		Элемент.Заголовок = "Код бух";
		//<-- АФМ-Серверс Валиев М.А. 26.11.2015 ДМ0000006221
		
		//--> АФМ-Серверс Уфимцев Заявка №8962 27.11.2015 
		СтруктураПараметров.Родитель = Элементы.ВышестоящаяСтруктура;
		СтруктураПараметров.ПередЭлементом = Элементы.СоответствуетСудамЗарегистрированнымВРоссийскомМеждународномРеестреСудов;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ФункциональныйБлок");
		Элемент.Заголовок = "Функциональный блок";
		//<-- АФМ-Серверс Уфимцев Заявка №8962 27.11.2015 
		
		//--> АФМ-Серверс Дебов Игорь 000000008962
		//	отключил, т.к. решили группировать все только по функциональным блокам
		//Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ГруппироватьВШтатномРасписании");
		//<-- АФМ-Серверс Дебов Игорь 000000008962
	
	ИначеЕсли ИмяФормы = "Справочник.ПодразделенияОрганизаций.Форма.ФормаСписка" Тогда
		//--> АФМ-Серверс Валиев М.А. 26.11.2015 ДМ0000006221
		СтруктураПараметров.Родитель = Элементы.Список;
		СтруктураПараметров.ПередЭлементом = Элементы.Список.ПодчиненныеЭлементы.ДатаРасформирования;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_КодБух");
		Элемент.Заголовок = "Код бух";	
		//<-- АФМ-Серверс Валиев М.А. 26.11.2015 ДМ0000006221
		
	// Справочник Сотрудники ================================================================
		
	ИначеЕсли ИмяФормы = "Справочник.Сотрудники.Форма.ФормаЭлемента" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №ДМ0000006161, 17.12.2015
		Если РольДоступна("ПолныеПрава") Или РольДоступна("АФМ_ОграничениеСтажаИзменение") Тогда
			НоваяКоманда	= Форма.Команды.Добавить("АФМ_ОграничениеСтажа");
			НоваяКоманда.Действие	= "АФМ_ОграничениеСтажа";
			
			НовыйЭлемент = Форма.Элементы.Добавить("АФМ_ОграничениеСтажа", Тип("КнопкаФормы"), Элементы.ГруппаДополнительныеДанные1);
			НовыйЭлемент.Вид		= ВидКнопкиФормы.Гиперссылка;
			НовыйЭлемент.ИмяКоманды	= "АФМ_ОграничениеСтажа";
			НовыйЭлемент.Заголовок	= "Ограничение стажа";
		КонецЕсли;
		// <-- АФМ-Серверс, Кинчев, заявка №ДМ0000006161, 17.12.2015
		
	ИначеЕсли ИмяФормы = "Справочник.Сотрудники.Форма.ФормаВыбора" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СтруктураПоказателейПоСотрудникам", Новый ОписаниеТипов());
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_ИспользоватьПоказателиРасчета", Новый ОписаниеТипов("Булево"));
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СписокПоказателей", Новый ОписаниеТипов("СписокЗначений"));
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		
		Если Форма.Параметры.Свойство("АФМ_МассивСтруктурПоказателей") И Форма.Параметры.АФМ_МассивСтруктурПоказателей.Количество() > 0 Тогда
			Элементы.СпискиГруппа.ШиринаПодчиненныхЭлементов	= ШиринаПодчиненныхЭлементовФормы.Авто;
			Группа	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ГруппаПоказателейПоСотрудникам", Элементы.СпискиГруппа, , Истина);
			Группа.Отображение				= ОтображениеОбычнойГруппы.СильноеВыделение;
			Группа.РастягиватьПоГоризонтали	= Ложь;
			Группа.Ширина					= 30;
			Группа.ОтображатьЗаголовок		= Истина;
			Группа.Заголовок				= "Показатели расчета";
			СтруктураПараметров.Родитель	= Группа;
			Элемент = Элементы.Добавить("АФМ_ИспользоватьПоказателиРасчета", Тип("ПолеФормы"), Группа);
			Элемент.Вид						= ВидПоляФормы.ПолеФлажка;
			Элемент.Заголовок				= "Использовать показатели расчета";
			Элемент.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Право;
			Элемент.ПутьКДанным				= "АФМ_ИспользоватьПоказателиРасчета";
			Для Каждого СтрокаПоказатели Из Форма.Параметры.АФМ_МассивСтруктурПоказателей Цикл
				ПутьКДанным		= "АФМ_Показатели_" + СтрокаПоказатели.ПоказательКлюч;
				НовыеРеквизиты	= Новый Массив;
				НовыйРеквизит	= Новый РеквизитФормы(ПутьКДанным, СтрокаПоказатели.ПоказательТип);
				НовыеРеквизиты.Добавить(НовыйРеквизит);
				Форма.ИзменитьРеквизиты(НовыеРеквизиты);
				
				Форма.АФМ_СписокПоказателей.Добавить(СтрокаПоказатели.ПоказательКлюч);
				
				Элемент	= ДобавитьЭлемент(СтруктураПараметров, ПутьКДанным, ПутьКДанным);
				Элемент.Заголовок					= СтрокаПоказатели.ПоказательИмя;
			КонецЦикла;
		КонецЕсли;
		// <-- АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		//--> АФМ-Серверс Уфимцев Заявка №ДМ0000006265 09.02.2016 
		Если Форма.Параметры.Свойство("ПоказыватьСотрудниковПодчиненныхПодразделений") Тогда
			Форма.ПоказыватьСотрудниковПодчиненныхПодразделений = Форма.Параметры.ПоказыватьСотрудниковПодчиненныхПодразделений;
		КонецЕсли;	
		//<-- АФМ-Серверс Уфимцев Заявка №ДМ0000006265 09.02.2016 
	
	// Справочник СпособыВыплатыЗарплаты ====================================================	
	
	ИначеЕсли ИмяФормы = "Справочник.СпособыВыплатыЗарплаты.Форма.ФормаЭлемента" Тогда
		//--> АФМ-Серверс Таширев 15.02.2016 ДМ0000006169
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_НаименованиеДляРасчетногоЛистка");
		//<-- АФМ-Серверс Таширев 15.02.2016 ДМ0000006169
		
	// Справочник ФизическиеЛица ============================================================
	
	ИначеЕсли ИмяФормы = "Справочник.ФизическиеЛица.Форма.ТрудоваяДеятельность" Тогда
		//-->АФМ-Серверс Валиев М.А. 01.12.2015 000000008697
		СтруктураПараметров.Родитель = Элементы.НаградыФизическихЛиц;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_НаградноеСобытие","НаградыФизическихЛиц.АФМ_НаградноеСобытие");
		Элемент.Заголовок = "Наградное событие";	
		//<--АФМ-Серверс Валиев М.А. 01.12.2015 000000008697
		
		//-->АФМ-Серверс Лалетин А.В. 17.02.2016 000000008656
		СтруктураПараметров.Родитель = Элементы.НаградыФизическихЛиц;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "АФМ_Организация","НаградыФизическихЛиц.АФМ_Организация");
		Элемент.Заголовок = "Организация";
		форма.Элементы.НаградыФизическихЛиц.ГоризонтальнаяПолосаПрокрутки = ИспользованиеПолосыПрокрутки.ИспользоватьАвтоматически;
		//<--АФМ-Серверс Лалетин А.В. 17.02.2016 000000008656

	// Справочник ГруппыСотрудников =========================================================
	
	//+++ АФМ Зайцев П.В. добавляем кнопкук открытия фотографии
	ИначеЕсли ИмяФормы = "Справочник.ФизическиеЛица.Форма.ФормаЭлемента" Тогда
		НоваяКоманда	= Форма.Команды.Добавить("АФМ_ОткрытьФотографию");
		НоваяКоманда.Действие	= "АФМ_ОткрытьФотографию";
		
		НовыйЭлемент = Форма.Элементы.Добавить("АФМ_ОткрытьФотографию", Тип("КнопкаФормы"), Элементы.ГруппаДополнительныеРеквизиты);
		НовыйЭлемент.Вид		= ВидКнопкиФормы.Гиперссылка;
		НовыйЭлемент.ИмяКоманды	= "АФМ_ОткрытьФотографию";
		НовыйЭлемент.Заголовок	= "Открыть фотографию на портале";

	//--- АФМ Зайцев П.В. добавляем кнопкук открытия фотографии
	
	ИначеЕсли ИмяФормы = "ОбщаяФорма.ПрисоединенныеФайлы" Тогда
		ТЧ = Элементы.Список;
		
		НовыйЭлемент = Элементы.Добавить("СписокТипФайла", Тип("ПолеФормы"), ТЧ);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
		НовыйЭлемент.ПутьКДанным = "Список.ТипФайла";
		
	ИначеЕсли ИмяФормы = "ОбщаяФорма.ПрисоединенныйФайл" Тогда
		СтруктураПараметров.Родитель = Элементы.ГруппаСведенияЧасть2;
		Элемент  = ДобавитьЭлемент(СтруктураПараметров, "ТипФайла0","ОбъектПрототип[0].АФМ_ТипФайла");
		Элемент.Заголовок = "Тип файла";
	//--- АФМ Зайцев П.В. 

	ИначеЕсли ИмяФормы = "Справочник.ГруппыСотрудников.Форма.ФормаЭлемента" Тогда
		//--> АФМ-Серверс Дебов Игорь 000000008642 08.06.2015
		Группа0				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_НастройкаВыгрузкиВСАП", , , Ложь);
		Группа0.ОтображатьЗаголовок = Истина;
		Группа0.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		Группа0.Заголовок	= "Настройки выгрузки в САП (для проекта)";
		
		Элементы.Переместить(Элементы.АФМ_НастройкаВыгрузкиВСАП, Группа0.Родитель, Элементы.ФормироватьАвтоматическиГруппа);				
		
		СтруктураПараметров.Родитель = Группа0;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектФонд");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектПФМ");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектФС");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		//<-- АФМ-Серверс Дебов Игорь 000000008642 08.06.2015
		
	// Справочник СтатьиФинансированияЗарплата ==============================================
	
	ИначеЕсли ИмяФормы = "Справочник.СтатьиФинансированияЗарплата.Форма.ФормаЭлемента" Тогда
		//--> АФМ-Серверс Дебов Игорь ДМ0000006316 19.08.2015
		Группа0				= ДобавитьОбычнуюГруппу(Элементы, "АФМ_НастройкаВыгрузкиВСАП", , , Ложь);
		Группа0.ОтображатьЗаголовок = Истина;
		Группа0.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		Группа0.Заголовок	= "Настройки выгрузки в САП (для проекта)";
		
		//Элементы.Переместить(Элементы.АФМ_НастройкаВыгрузкиВСАП, Группа0.Родитель, Элементы.ФормироватьАвтоматическиГруппа);				
		
		СтруктураПараметров.Родитель = Группа0;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектФонд");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектПФМ");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		Элемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПроектФС");
		Элемент.РастягиватьПоГоризонтали = Ложь;
		//<-- АФМ-Серверс Дебов Игорь ДМ0000006316 19.08.2015
		
	// Документ Премия ======================================================================
	
	ИначеЕсли ИмяФормы = "Документ.Премия.Форма.ФормаДокумента" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СтруктураПоказателейПоСотрудникам", Новый ОписаниеТипов());
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		// <-- АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		
	// Документ ДоходВНатуральнойФорме =======================================================
	
	ИначеЕсли ИмяФормы = "Документ.ДоходВНатуральнойФорме.Форма.ФормаДокумента" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СтруктураПоказателейПоСотрудникам", Новый ОписаниеТипов());
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		// <-- АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		
	// Документ МатериальнаяПомощь ===========================================================
	
	ИначеЕсли ИмяФормы = "Документ.МатериальнаяПомощь.Форма.ФормаДокумента" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СтруктураПоказателейПоСотрудникам", Новый ОписаниеТипов());
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		// <-- АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		
	// Документ РазовоеНачисление ===========================================================
	
	ИначеЕсли ИмяФормы = "Документ.РазовоеНачисление.Форма.ФормаДокумента" Тогда
		// --> АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_СтруктураПоказателейПоСотрудникам", Новый ОписаниеТипов());
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		// <-- АФМ-Серверс, Кинчев, заявка №000000008766, 08.12.2015
		
	// Документ КадровыйПеревод =============================================================
	
	ИначеЕсли ИмяФормы = "Документ.КадровыйПеревод.Форма.ФормаДокумента" Тогда
		//-->АФМ-Серверс Лалетин 12.11.2015 000000008648		
		Группа	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ДополнительноеСоглашение", Элементы.ДополнительноЛевая);
		Группа.РастягиватьПоГоризонтали	= Ложь;
		СтруктураПараметров.Родитель	= Группа;
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_ДополнительноеСоглашениеНомер");
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_ДополнительноеСоглашениеДата");
		//<--АФМ-Серверс Лалетин 12.11.2015 000000008648
		
		//--> АФМ-Серверс Дебов Игорь Заявка 000000008963 27.07.2016
		Группа	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ДляШтатногоРасписания", Элементы.ДополнительноЛевая);
		Группа.РастягиватьПоГоризонтали	= Истина;
		СтруктураПараметров.Родитель	= Группа;
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_ИныеУсловияДоговора");
		//<-- АФМ-Серверс Дебов Игорь Заявка 000000008963 27.07.2016
		
	// Документ КадровыйПереводСписком ======================================================
	
	ИначеЕсли ИмяФормы = "Документ.КадровыйПереводСписком.Форма.ФормаДокумента" Тогда
		//-->АФМ-Серверс Лалетин 12.11.2015 000000008648
		СтруктураПараметров.Родитель	= Элементы.СотрудникиРеквизитыСтрокиГруппа;
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "Сотрудники.АФМ_ДополнительноеСоглашениеНомер");
		Элемент.Заголовок	= "Номер доп. соглашения";
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "Сотрудники.АФМ_ДополнительноеСоглашениеДата");
		Элемент.Заголовок	= "Дата доп. соглашения";
		//<--АФМ-Серверс Лалетин 12.11.2015 000000008648
	
	// Документ ПланОбученияРазвития ========================================================
	
	ИначеЕсли ИмяФормы = "Документ.ПланОбученияРазвития.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Дебов Игорь ДМ0000008017 26.08.2016
		НовыйЭлемент = Элементы.Добавить("АФМ_СтатьяОбучения", Тип("ПолеФормы"), Элементы.Мероприятия);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.Мероприятия.АФМ_СтатьяОбучения";
		//<-- АФМ-Серверс Дебов Игорь ДМ0000008017 26.08.2016
		
	// Документ Командировка ================================================================
	
	ИначеЕсли ИмяФормы = "Документ.Командировка.Форма.ФормаДокумента" Тогда
		//-->АФМ-Серверс Лалетин 16.11.2015 000000008652
		СтруктураПараметров.Родитель	= Элементы.ОбязательныеРеквизиты;
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "АФМ_СтатусКомандировки");
		Элемент.Заголовок	= "Статус командировки";
		//<--АФМ-Серверс Лалетин 16.11.2015 000000008652
		
		//--> АФМ-Серверс Дебов Игорь ДМ0000008253 26.08.2016
		//	дополнительные реквизиты
		СтруктураПараметров.Родитель = Элементы.ДополнительноСтраница;
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "АФМ_НомерСЗ");
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "АФМ_ДатаСЗ");
		
		Группа	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_РаботаВВыходныеДниСтраница", Элементы.Страницы);
		Группа.Вид = ВидГруппыФормы.Страница;
		Группа.Заголовок = "Работа в выходные дни";
		
		НоваяТЧ = Элементы.Добавить("АФМ_РаботаВВыходныеДни", Тип("ТаблицаФормы"), Группа);
		НоваяТЧ.ПутьКДанным = "Объект.АФМ_РаботаВВыходныеДни";
		НоваяТЧ.УстановитьДействие("ПередНачаломДобавления", "АФМ_РаботаВВыходныеДни_ПередНачаломДобавления");
		НоваяТЧ.УстановитьДействие("ОбработкаВыбора", "АФМ_РаботаВВыходныеДни_ОбработкаВыбора");
		
		НовыйЭлемент = Элементы.Добавить("ДатаВыходного", Тип("ПолеФормы"), НоваяТЧ);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.АФМ_РаботаВВыходныеДни.ДатаВыходного";
		
		Элементы.Руководитель.УстановитьДействие("ПриИзменении", "АФМ_РуководительПриИзменении");
		
		//	значения по умолчанию
		Если Форма.Параметры.Ключ.Пустая() Тогда
			ТекущийОбъект = Форма.Объект;
			ТекущийОбъект.Основание = "служебное задание от  № ";
			ТекущийОбъект.КомандировкаЗаСчетСредств = "бюджета исполнительного аппарата  АО ""ЦИУС ЕЭС""";
		КонецЕсли;
		//<-- АФМ-Серверс Дебов Игорь ДМ0000008253 26.08.2016
		
	ИначеЕсли ИмяФормы = "Документ.Командировка.Форма.ФормаСписка" Тогда
		//-->АФМ-Серверс Лалетин 16.11.2015 000000008652
		ДобавитьВТекстЗапросаПоля(Форма.Список, "АФМ_СтатусКомандировки");
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "АФМ_СтатусКомандировки");
		Элемент.Заголовок	= "Статус командировки";
		//<--АФМ-Серверс Лалетин 16.11.2015 000000008652
		
	// Журнал документов Отпуска ============================================================	
	
	ИначеЕсли ИмяФормы = "ЖурналДокументов.Отпуска.Форма.ФормаСписка" Тогда
	
		//--> АФМ-Серверс Юдинцев В.С. ДМ0000006555 12.04.2016
		Текст = "ВЫБРАТЬ
		|ВЫБОР
		|	КОГДА ЖурналДокументовОтпуска.Ссылка ССЫЛКА Документ.Отпуск
		|		ТОГДА ЖурналДокументовОтпуска.Ссылка.АФМ_ВидыОтпусков
		|	ИНАЧЕ """"
		|КОНЕЦ КАК АФМ_ВидыОтпусков,";
		Форма.Список.ТекстЗапроса = Текст + Сред(Форма.Список.ТекстЗапроса, 8);
		
		СтруктураПараметров.Родитель = Элементы.Список;
		СтруктураПараметров.ПередЭлементом = Элементы.Список.ПодчиненныеЭлементы.Ответственный;
		НовыйЭлемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ВидыОтпусков");
		НовыйЭлемент.Заголовок = "Виды отпусков";
		//<-- АФМ-Серверс Юдинцев В.С. ДМ0000006555 12.04.2016
	 	
	// Документ Совмещение ==================================================================
	
	ИначеЕсли ИмяФормы = "Документ.Совмещение.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Устюжанина 03.12.2015 000000008695
		СтруктураПараметров.Родитель	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ДополнительноеСоглашение", Элементы.Дополнительно);
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_ДополнительноеСоглашениеНомер").Заголовок	= "Доп. соглашение";
		ДобавитьЭлемент(СтруктураПараметров, "АФМ_ДополнительноеСоглашениеДата").Заголовок	= "от";
		//<-- АФМ-Серверс Устюжанина 03.12.2015 000000008695
		
	// Документ ИзменениеПлановыхНачислений =================================================
	
	ИначеЕсли ИмяФормы = "Документ.ИзменениеПлановыхНачислений.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Уфимцев 08.02.2016 ДМ0000006625
		НоваяКоманда	= Форма.Команды.Добавить("АФМ_ЗаполнитьПоНачислениям");
		НоваяКоманда.Действие	= "ЗаполнитьПоНачислениям";

		НовыйЭлемент = Форма.Элементы.Добавить("АФМ_ЗаполнитьПоНачислениям", Тип("КнопкаФормы"), Элементы.ПоказателиСотрудниковПодборЗаполнить);
		НовыйЭлемент.ИмяКоманды	= "АФМ_ЗаполнитьПоНачислениям";
		НовыйЭлемент.Заголовок	= "Заполнить по начислениям";
		//<-- АФМ-Серверс Уфимцев 08.02.2016 ДМ0000006625
	
	// Документ ВедомостьНаВыплатуЗарплатыВБанк =============================================
	
	ИначеЕсли ИмяФормы = "Документ.ВедомостьНаВыплатуЗарплатыВБанк.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		ИзменитьДокументыВыплаты(Форма, Элементы);
		//<-- АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		
	// Документ ВедомостьНаВыплатуЗарплатыВКассу ============================================
	
	ИначеЕсли  ИмяФормы = "Документ.ВедомостьНаВыплатуЗарплатыВКассу.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		ИзменитьДокументыВыплаты(Форма, Элементы);
		//<-- АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		
	// Документ ВедомостьНаВыплатуЗарплатыПеречислением =====================================
	
	ИначеЕсли ИмяФормы = "Документ.ВедомостьНаВыплатуЗарплатыПеречислением.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		ИзменитьДокументыВыплаты(Форма, Элементы);
		//<-- АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2015
		
	// Документ НачислениеОценочныхОбязательствПоОтпускам ===================================
	
	ИначеЕсли ИмяФормы = "Документ.НачислениеОценочныхОбязательствПоОтпускам.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Зайцев П.В. 27.01.2016 000000008660
		Группа	= ДобавитьОбычнуюГруппу(Элементы, "АФМ_ТарифнаяСтавка", Элементы.Страницы);
		Группа.Вид = ВидГруппыФормы.Страница;
		Группа.Заголовок = "Тарифные ставки по группам сотрудников";
		
		// Создание Реквизита формы типа ДанныеФормыДерево
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("АФМ_ДеревоТарифныхСтавок", Новый ОписаниеТипов("ДеревоЗначений")));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ГруппаСотрудника", Новый ОписаниеТипов("СправочникСсылка.ГруппыСотрудников"), "АФМ_ДеревоТарифныхСтавок"));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Ставка", Новый ОписаниеТипов("Число"), "АФМ_ДеревоТарифныхСтавок"));
		
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		
		// Создание элемента формы типа ТаблицаФормы для отображения дерева
		ЭлементДерево = Элементы.Добавить("АФМ_ДеревоТарифныхСтавок", Тип("ТаблицаФормы"),Группа);
		ЭлементДерево.ПутьКДанным = "АФМ_ДеревоТарифныхСтавок";
		ЭлементДерево.Отображение = ОтображениеТаблицы.Дерево;
		
		НовыйЭлемент = Элементы.Добавить("ГруппаСотрудника", Тип("ПолеФормы"), ЭлементДерево);
		НовыйЭлемент.Заголовок = "Группа сотрудника";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "АФМ_ДеревоТарифныхСтавок.ГруппаСотрудника";
		
		НовыйЭлемент = Элементы.Добавить("Ставка", Тип("ПолеФормы"), ЭлементДерево);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "АФМ_ДеревоТарифныхСтавок.Ставка";
		НовыйЭлемент.УстановитьДействие("ПриИзменении",	"АФМ_ПриИзмененииТарифнойСтавки");
		
		КомандаЗаполнить = Форма.Команды.Добавить("АФМ_Заполнить");
		КомандаЗаполнить.Действие     = "АФМ_ЗаполнитьПоследнееНажатие";
		
		Кнопка = Элементы.Добавить("АФМ_Заполнить",Тип("КнопкаФормы"),ЭлементДерево.КоманднаяПанель);
		Кнопка.ИмяКоманды 	= "АФМ_Заполнить";
		Кнопка.Заголовок	= "Заполнить";
		//<-- АФМ-Серверс Зайцев П.В. 27.01.2016 000000008660
		
		//--> АФМ-Серверс Дебов Игорь Заявка 000000008660 16.06.2016
		НовыйЭлемент = Элементы.Добавить("АФМ_ГруппаСотрудника", Тип("ПолеФормы"), Элементы.ОценочныеОбязательства);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.ОценочныеОбязательства.АФМ_ГруппаСотрудника";
		
		Элементы.Переместить(Элементы.АФМ_ГруппаСотрудника, Элементы.ОценочныеОбязательства, Элементы.ОценочныеОбязательстваПодразделение);
		//<-- АФМ-Серверс Дебов Игорь Заявка 000000008660 16.06.2016
		
	// План видов расчета Начисления ===========================================================================	
		
	ИначеЕсли ИмяФормы = "ПланВидовРасчета.Начисления.Форма.ФормаВидаРасчета" Тогда
		СтруктураПараметров.Родитель	= Элементы.ПериодРасчетаБазыГруппа;
		СтруктураПараметров.ПередЭлементом = Элементы.ДлительностьБазовогоПериодаГруппа; 
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "АФМ_ПериодДействияВесьМесяц");
		Элемент.Заголовок	= "Период базовый весь месяц";
		
		//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000006417 15.06.2016
		НовыйЭлемент = Элементы.Добавить("АФМ_РассчитыватьПослеУвольнения", Тип("ПолеФормы"), Элементы.НастройкаВыполненияГруппа);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.АФМ_РассчитыватьПослеУвольнения";
		//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000006417 15.06.2016
		
		//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007757 05.07.2016
		Попытка
			
			НовыйЭлемент = Элементы.Добавить("АФМ_ИсключениеВремени_Текст", Тип("ДекорацияФормы"), Элементы.ПриоритетВышеГруппа);
			НовыйЭлемент.Заголовок = "Настройка исключения времени (АФМ):";
			
			НоваяТЧ = Элементы.Добавить("АФМ_ИсключениеВремени", Тип("ТаблицаФормы"), Элементы.ПриоритетВышеГруппа);
			НоваяТЧ.ПутьКДанным = "Объект.АФМ_ИсключениеВремени";
			НоваяТЧ.Видимость = Истина; 
			
			НовыйЭлемент = Элементы.Добавить("АФМ_НачислениеИсключения", Тип("ПолеФормы"), Элементы.АФМ_ИсключениеВремени);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = "Объект.АФМ_ИсключениеВремени.НачислениеИсключения";
			
		Исключение
		КонецПопытки;
		//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007757 05.07.2016
		
	// Документ ИзменениеАванса ============================================================================
	
	ИначеЕсли ИмяФормы = "Документ.ИзменениеАванса.Форма.ФормаДокумента" Тогда
		//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007097 16.06.2016
		НовыйЭлемент = Элементы.Добавить("АФМ_ПроцентОтОклада", Тип("ПолеФормы"), Элементы.ДатыИзмененияАванса);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.АФМ_ПроцентОтОклада";
		//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007097 16.06.2016
		
	// Документ КомпенсацияЗаЗадержкуЗарплаты ==================================================================
	
	ИначеЕсли ИмяФормы = "Документ.КомпенсацияЗаЗадержкуЗарплаты.Форма.ФормаДокумента" Тогда
		
		//--> АФМ-Серверс ДМ0000006205 Шмалюх А.Ю. 07.12.2015 г
		Форма.УстановитьДействие("ОбработкаОповещения","АФМ_ОбработкаОповещения");
		
		ГруппаРодитель = ДобавитьОбычнуюГруппу(Элементы, "АФМ_ВыплачиватьГруппа", Элементы.ШапкаОсновное, , Истина);
		
		СтруктураПараметров.Родитель = ГруппаРодитель;
		СтруктураПараметров.Родитель.РастягиватьПоГоризонтали = Ложь;
		СтруктураПараметров.Родитель.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Одинаковая;
		
		НовыйЭлемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ВидВедомости");
		НовыйЭлемент.Заголовок	= "Вид ведомости";
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		
		НовыйЭлемент.УстановитьДействие("ПриИзменении",	"АФМ_ВидВедомостиПриИзменении");
		
		НовыеРеквизиты	= Новый Массив;
		
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_ОснованияПредставление", Новый ОписаниеТипов("Строка"));		
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_ОснованияВыбраны", Новый ОписаниеТипов("Булево"));
		
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		
		НовыйЭлемент = ДобавитьЭлемент(СтруктураПараметров, "АФМ_ОснованияПредставление", "АФМ_ОснованияПредставление");
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		НовыйЭлемент.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
		
		НовыйЭлемент.Вид 			    = ВидПоляФормы.ПолеНадписи;
		НовыйЭлемент.Гиперссылка		= Истина;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;   
		
		НовыйЭлемент.УстановитьДействие("Нажатие",	"АФМ_ОснованияПредставлениеНажатие");
		//<-- АФМ-Серверс ДМ0000006205 Шмалюх А.Ю. 07.12.2015 г     	
		
	// Документ НачислениеЗарплаты ==================================================================
	
	ИначеЕсли ИмяФормы = "Документ.НачислениеЗарплаты.Форма.ФормаДокумента" Тогда
		
		СтруктураПараметров.Родитель	= Элементы.НачисленияПерерасчет;
		Элемент	= ДобавитьЭлемент(СтруктураПараметров, "НачисленияПерерасчет.Сторно");
		
	// Документ РаспределениеОсновногоЗаработка =====================================================
	
	ИначеЕсли ИмяФормы = "Документ.РаспределениеОсновногоЗаработка.Форма.ФормаДокумента" Тогда
		
		//--> АФМ-Серверс Дебов Игорь ДМ0000006316 16.08.2016
		//	изменяем шапку документа
		Элементы.Сотрудник.Видимость=Ложь;
		
		//	изменяем ТЧ документа
		Элементы.Сотрудники.УстановитьДействие("ОбработкаВыбора","АФМ_ОбработкаВыбора");
		
		НоваяКоманда = Форма.Команды.Добавить("АФМ_ПодборСотрудников");
		НоваяКоманда.Действие = "АФМ_ПодборСотрудников";
		
		НовыйЭлемент = Форма.Элементы.Добавить("АФМ_ПодборСотрудников", Тип("КнопкаФормы"), Элементы.Сотрудники.КоманднаяПанель);
		НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды	= "АФМ_ПодборСотрудников";
		НовыйЭлемент.Заголовок	= "Подбор";
		
		Элементы.СотрудникиСтатьяФинансирования.Видимость=Ложь;
		Элементы.СотрудникиОблагаетсяЕНВД.Видимость=Ложь;		
		Элементы.СотрудникиСпособОтраженияЗарплатыВБухучете.Видимость=Ложь;
		
		НовыйЭлемент = Элементы.Добавить("АФМ_Сотрудник", Тип("ПолеФормы"), Элементы.Сотрудники);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.РаспределениеОсновногоЗаработка.АФМ_Сотрудник";
		НовыйЭлемент.УстановитьДействие("ПриИзменении",	"АФМ_ПриИзмененииСотрудника");
		
		НовыйЭлемент = Элементы.Добавить("АФМ_СФ", Тип("ПолеФормы"), Элементы.Сотрудники);//отображение зависити от функц. опции
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.РаспределениеОсновногоЗаработка.АФМ_СФ";
		
		НовыйЭлемент = Элементы.Добавить("АФМ_ПериодНачало", Тип("ПолеФормы"), Элементы.Сотрудники);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.РаспределениеОсновногоЗаработка.АФМ_ПериодНачало";
		
		НовыйЭлемент = Элементы.Добавить("АФМ_Перевод", Тип("ПолеФормы"), Элементы.Сотрудники);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.РаспределениеОсновногоЗаработка.АФМ_Перевод";
		
		НоваяКоманда = Форма.Команды.Добавить("АФМ_1_ЗаполнитьЗаМесяц");
		НоваяКоманда.Действие = "АФМ_1_ЗаполнитьЗаМесяц";
		НовыйЭлемент = Элементы.Добавить("АФМ_1_ЗаполнитьЗаМесяц", Тип("КнопкаФормы"), Элементы.СотрудникиКоманднаяПанель);
		НовыйЭлемент.Высота		= 1;
		НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды	= "АФМ_1_ЗаполнитьЗаМесяц";
		НовыйЭлемент.Заголовок	= "Заполнить принятыми в этом месяце";
		НовыйЭлемент.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
		
		НоваяКоманда = Форма.Команды.Добавить("АФМ_2_РассчитатьДоли");
		НоваяКоманда.Действие = "АФМ_2_РассчитатьДоли";
		НовыйЭлемент = Элементы.Добавить("АФМ_2_РассчитатьДоли", Тип("КнопкаФормы"), Элементы.СотрудникиКоманднаяПанель);
		НовыйЭлемент.Высота		= 1;
		НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды	= "АФМ_2_РассчитатьДоли";
		НовыйЭлемент.Заголовок	= "Рассчитать доли (при изменении проекта в расчетном месяце)";
		НовыйЭлемент.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
		
		Элементы.Переместить(Элементы.СотрудникиРезультат, Элементы.Сотрудники);
		//<-- АФМ-Серверс Дебов Игорь ДМ0000006316 16.08.2016
		
	ИначеЕсли ИмяФормы = "Документ.РаспределениеОсновногоЗаработка.Форма.ФормаСписка" Тогда
		
		//--> АФМ-Серверс Дебов Игорь ДМ0000006316 01.04.2016
		Элементы.ПериодРегистрации.Видимость=Ложь;
		Элементы.Сотрудник.Видимость=Ложь;		
		
		НовыйЭлемент = Элементы.Добавить("АФМ_КраткийСоставДокумента", Тип("ПолеФормы"), Элементы.Список);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Список.АФМ_КраткийСоставДокумента";
		
		Элементы.Переместить(Элементы.АФМ_КраткийСоставДокумента, Элементы.Список, Элементы.Ответственный);
		//<-- АФМ-Серверс Дебов Игорь ДМ0000006316 01.04.2016
		
	// Справочник ШтатноеРасписание ==================================================================
	
	ИначеЕсли ИмяФормы = "Справочник.ШтатноеРасписание.Форма.ФормаСписка" Тогда
		
		//--> АФМ-Серверс Дебов Игорь 000000008962
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(Форма.ЭтотОбъект.Список.ТекстЗапроса);
				
		ЗапросВыбора	= СхемаЗапроса.ПакетЗапросов.Получить(СхемаЗапроса.ПакетЗапросов.Количество() - 1);
		ОператорВыбор	= ЗапросВыбора.Операторы[0];
		ОператорВыбор.ВыбираемыеПоля.Добавить("АФМ_ПорядокВШтатномРасписании");
		ЗапросВыбора.Колонки[ЗапросВыбора.Колонки.Количество() - 1].Псевдоним = "АФМ_ПорядокВШтатномРасписании";
		
		Форма.ЭтотОбъект.Список.ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
		НовыйЭлемент = Элементы.Добавить("АФМ_ПорядокВШтатномРасписании", Тип("ПолеФормы"), Элементы.Список);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Список.АФМ_ПорядокВШтатномРасписании";
		//<-- АФМ-Серверс Дебов Игорь 000000008962
		
	ИначеЕсли ИмяФормы = "Справочник.ШтатноеРасписание.Форма.ФормаЭлемента" Тогда
		
		//--> АФМ-Серверс Дебов Игорь 000000008962
		НовыйЭлемент = Элементы.Добавить("АФМ_ПорядокВШтатномРасписании", Тип("ПолеФормы"), Элементы.ГруппаНаименование);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.АФМ_ПорядокВШтатномРасписании";
		//<-- АФМ-Серверс Дебов Игорь 000000008962
		
	// Справочник Должности ==================================================================
	
	ИначеЕсли ИмяФормы = "Справочник.Должности.Форма.ФормаЭлемента" Тогда
		
		//--> АФМ-Серверс Дебов Игорь 000000008962
		НовыйЭлемент = Элементы.Добавить("АФМ_КатегорияСтатистическогоУчета", Тип("ПолеФормы"), Элементы.ГруппаНаименование);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.АФМ_КатегорияСтатистическогоУчета";
		//<-- АФМ-Серверс Дебов Игорь 000000008962
		
	// Обработка УправлениеПерерасчетами =====================================================
	
	ИначеЕсли ИмяФормы = "Обработка.УправлениеПерерасчетами.Форма.Форма" Тогда
		
		//--> АФМ-Серверс Дебов Игорь ДМ0000008051 23.08.2016
		НоваяКоманда = Форма.Команды.Добавить("ПересчитатьАФМ");
		НоваяКоманда.Действие = "ПересчитатьАФМ";
		НовыйЭлемент = Элементы.Добавить("ПересчитатьАФМ", Тип("КнопкаФормы"), Элементы.ТаблицаСреднийЗаработокКоманднаяПанель);
		НовыйЭлемент.Высота		= 1;
		НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
		НовыйЭлемент.ИмяКоманды	= "ПересчитатьАФМ";
		НовыйЭлемент.Заголовок	= "Пересчитать выделенный список (АФМ)";
		//<-- АФМ-Серверс Дебов Игорь ДМ0000008051 23.08.2016
		
	// Отчет РегламентированныйОтчет6НДФЛ ====================================================
		
	ИначеЕсли ИмяФормы = "Отчет.РегламентированныйОтчет6НДФЛ.Форма.ФормаОтчета2016Кв1" Тогда
		//--> АФМ-Серверс Дебов Игорь Заявка ДМ0000007191 13.10.2016
		НовыеРеквизиты	= Новый Массив;
		НовыйРеквизит	= Новый РеквизитФормы("АФМ_ВыводитьПоФормеЦИУС", Новый ОписаниеТипов("Булево"));		
		НовыеРеквизиты.Добавить(НовыйРеквизит);
		Форма.ИзменитьРеквизиты(НовыеРеквизиты);
		
		НовыйЭлемент = Элементы.Добавить("АФМ_ВыводитьПоФормеЦИУС", Тип("ПолеФормы"), Элементы.Подвал);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.Заголовок = "Расчет по алгоритму ЦИУС";
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.ПутьКДанным = "АФМ_ВыводитьПоФормеЦИУС";
		
		Элементы.Переместить(Элементы.АФМ_ВыводитьПоФормеЦИУС, Элементы.Подвал, Элементы.Комментарий);
		//<-- АФМ-Серверс Дебов Игорь Заявка ДМ0000007191 13.10.2016
		
	Иначе
		Возврат;
	КонецЕсли;
	
	НовыеРеквизиты	= Новый Массив;
	НовыйРеквизит	= Новый РеквизитФормы("АФМ_ФормаОбработана", Новый ОписаниеТипов("Булево"));
	НовыеРеквизиты.Добавить(НовыйРеквизит);
	Форма.ИзменитьРеквизиты(НовыеРеквизиты);
	
	Форма.АФМ_ФормаОбработана	= Истина;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(Форма) Экспорт 
	
	СтруктураПараметров	= ПолучитьОписаниеФормы(Форма);
	ИмяФормы	= СтруктураПараметров.ИмяФормы;
	Элементы	= СтруктураПараметров.Элементы;
	
	Если ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОписаниеФормы(Форма)
	ИмяФормы			= Форма.ИмяФормы;
	Элементы			= Форма.Элементы;
	Поз					= Найти(ИмяФормы, ".");
	Поз					= Поз + Найти(Сред(ИмяФормы, Поз+1), ".");
	ПолноеИмяОбъекта	= Лев(ИмяФормы, Поз-1);
	МетаОбъект			= Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	ЭтоСписок			= (Прав(ИмяФормы, 6) = "Списка" Или Прав(ИмяФормы, 6) = "Выбора");
	
	СтруктураПараметров	= Новый Структура();
	СтруктураПараметров.Вставить("Форма",			Форма);
	СтруктураПараметров.Вставить("ИмяФормы",		ИмяФормы);
	СтруктураПараметров.Вставить("Элементы",		Элементы);
	СтруктураПараметров.Вставить("Метаданные",		МетаОбъект);
	СтруктураПараметров.Вставить("ЭтоСписок",		ЭтоСписок);
	СтруктураПараметров.Вставить("Родитель",		Неопределено);
	СтруктураПараметров.Вставить("ПередЭлементом",	Неопределено);
	
	Если ЭтоСписок И Элементы.Найти("Список") <> Неопределено Тогда
		СтруктураПараметров.Родитель	= Элементы.Список;
	КонецЕсли;
	
	Если ЭтоСписок Тогда
		СтруктураПараметров.Вставить("ВладелецРеквизитов",	"Список");
	Иначе
		СтруктураПараметров.Вставить("ВладелецРеквизитов",	"Объект");
	КонецЕсли;
	
	Возврат СтруктураПараметров;
КонецФункции

Процедура ДобавитьБыстрыйОтборПоОрганизации(СтруктураПараметров, ПолеОтбора = "АФМ_Организация")
	//Форма			= СтруктураПараметров.Форма;
	//Элементы		= Форма.Элементы;
	//Список			= Форма.Список;
	//ЭлементОтбора	= Неопределено;
	//
	//ЭлементОтбора	= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ПолеОтбора);
	//ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение	= АФМ_УправлениеПользователями.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	//ЭлементОтбора.Использование		= (АФМ_УправлениеПользователями.ПолучитьЗначениеПоУмолчанию("УчетПоВсемОрганизациям") <> Истина);
	//
	//ИндексЭлементаОтбора	= Список.Отбор.Элементы.Индекс(ЭлементОтбора);
	//
	//ГруппаОтбора	= Элементы.Вставить("АФМ_ОтборОрганизация", Тип("ГруппаФормы"), , Элементы.Список);
	//ГруппаОтбора.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	//ГруппаОтбора.Отображение			= ОтображениеОбычнойГруппы.Нет;
	//ГруппаОтбора.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	//ГруппаОтбора.ОтображатьЗаголовок	= Ложь;
	//
	//Элемент = Элементы.Добавить("АФМ_ОрганизацияОтборИспользование", Тип("ПолеФормы"), ГруппаОтбора);
	//Элемент.Вид					= ВидПоляФормы.ПолеФлажка;
	//Элемент.Заголовок			= "Отбор по организации";
	//Элемент.ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Право;
	//Элемент.ПутьКДанным			= "Список.Отбор[" + ИндексЭлементаОтбора + "].Использование";
	//
	//Элемент = Элементы.Добавить("АФМ_ОрганизацияОтборЗначение", Тип("ПолеФормы"), ГруппаОтбора);
	//Элемент.Вид					= ВидПоляФормы.ПолеВвода;
	//Элемент.ПутьКДанным			= "Список.Отбор[" + ИндексЭлементаОтбора + "].ПравоеЗначение";
	//Элемент.ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Нет;
	//
	//УстановитьДоступностьЭлементаОтУчетаПоВсемОрганизациям(ГруппаОтбора);
КонецПроцедуры

Процедура УстановитьДоступностьЭлементаОтУчетаПоВсемОрганизациям(Элемент)
	//УчетПоВсемОрганизациям	= АФМ_УправлениеПользователями.ПолучитьЗначениеПоУмолчанию("УчетПоВсемОрганизациям");
	//
	//Если УчетПоВсемОрганизациям <> Истина Тогда
	//	Элемент.ТолькоПросмотр	= Истина;
	//КонецЕсли;
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаПоля(Запрос, Поля) Экспорт
	// Для простейших случаев...
	
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		Текст	= Запрос;
		
	ИначеЕсли ТипЗнч(Запрос) = Тип("ДинамическийСписок") Тогда
		Текст	= Запрос.ТекстЗапроса;
		
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда
		Текст	= Запрос.Текст;
	КонецЕсли;
	
	Текст	= СтрЗаменить(Текст, "ВЫБРАТЬ", "ВЫБРАТЬ
	|	" + Поля + ",");
	
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		Запрос	= Текст;
		
	ИначеЕсли ТипЗнч(Запрос) = Тип("ДинамическийСписок") Тогда
		Запрос.ТекстЗапроса	= Текст;
		
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда
		Запрос.Текст	= Текст;
	КонецЕсли;
КонецПроцедуры

// В параметре СтруктураПараметров:
// РодительЭлемента - определяет родителя элемента; если не указан, то берется родитель из ПередЭлементом (если указан)
// ПередЭлементом - перед каким элементом вставить
Функция ДобавитьЭлемент(СтруктураПараметров, ИмяРеквизита, ПутьКДанным = Неопределено, ВидЭлемента = Неопределено, ПоложениеЗаголовка = Неопределено) Экспорт
	Форма				= СтруктураПараметров.Форма;
	МетаОбъект			= СтруктураПараметров.Метаданные;
	ЭтоСписок			= СтруктураПараметров.ЭтоСписок;
	РодительЭлемента	= СтруктураПараметров.Родитель;
	ПередЭлементом		= СтруктураПараметров.ПередЭлементом;
	ВладелецРеквизитов	= СтруктураПараметров.ВладелецРеквизитов;
	
	Если РодительЭлемента = Неопределено
		И ПередЭлементом <> Неопределено Тогда
		РодительЭлемента	= ПередЭлементом.Родитель;
	КонецЕсли;
	
	Поз	= Найти(ИмяРеквизита, ".");
	
	Если Поз = 0 Тогда
		ИмяТЧ	= "";
	Иначе
		ИмяТЧ			= Лев(ИмяРеквизита, Поз-1);
		ИмяРеквизита	= Сред(ИмяРеквизита, Поз+1);
	КонецЕсли;
	
	Если МетаОбъект <> Неопределено Тогда
		Если ЗначениеЗаполнено(ИмяТЧ) И Найти(ИмяТЧ, ".") = 0 Тогда
			МетаТЧ	= МетаОбъект.ТабличныеЧасти.Найти(ИмяТЧ);
		Иначе
			МетаТЧ	= Неопределено;
		КонецЕсли;
		
		Если МетаТЧ <> Неопределено Тогда
			МетаРеквизиты	= МетаТЧ.Реквизиты;
		Иначе
			//--> АФМ-Серверс Юдинцев В.С. ДМ0000006555 12.04.2016
			//МетаРеквизиты	= МетаОбъект.Реквизиты;
			Попытка
				МетаРеквизиты	= МетаОбъект.Реквизиты;
			Исключение
				МетаРеквизиты	= Неопределено;
			КонецПопытки
			//<-- АФМ-Серверс Юдинцев В.С. ДМ0000006555 12.04.2016
		КонецЕсли;
	Иначе
		МетаРеквизиты	= Неопределено;
	КонецЕсли;
	
	ТипЭлемента	= Тип("ПолеФормы");
	
	Если Не ЗначениеЗаполнено(ПоложениеЗаголовка) Тогда
		ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Авто;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидЭлемента) Тогда
		ВидЭлемента	= ВидПоляФормы.ПолеВвода;
		
		Если МетаРеквизиты <> Неопределено Тогда
			МетаРеквизит	= МетаРеквизиты.Найти(ИмяРеквизита);
			Если МетаРеквизит <> Неопределено
				И МетаРеквизит.Тип = Новый ОписаниеТипов("Булево") Тогда
				
				ВидЭлемента			= ВидПоляФормы.ПолеФлажка;
				ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Право;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяТЧ) Тогда
		Если РодительЭлемента <> Неопределено Тогда
			Таблица	= АФМ_ОбщегоНазначения.НайтиТаблицуРодитель(РодительЭлемента);
			Если Таблица <> Неопределено Тогда
				ИмяЭлемента	= Таблица.Имя + ИмяРеквизита;
			Иначе
				ИмяЭлемента	= РодительЭлемента.Имя + ИмяРеквизита;
			КонецЕсли;
		Иначе
			ИмяЭлемента	= ИмяТЧ + ИмяРеквизита;
		КонецЕсли;
	Иначе
		ИмяЭлемента	= ИмяРеквизита;
	КонецЕсли;
	
	Если ПутьКДанным = Неопределено Тогда
		Если ЭтоСписок Тогда
			ПутьКДанным	= ВладелецРеквизитов + "." + ИмяРеквизита;
		ИначеЕсли Не ЗначениеЗаполнено(ИмяТЧ) Тогда
			ПутьКДанным	= ВладелецРеквизитов + "." + ИмяРеквизита;
		Иначе
			ПутьКДанным	= ВладелецРеквизитов + "." + ИмяТЧ + "." + ИмяРеквизита;
		КонецЕсли;
	КонецЕсли;
	
	ИмяЭлемента					= СтрЗаменить(ИмяЭлемента, ".", "");
	Элемент						= Форма.Элементы.Вставить(ИмяЭлемента, ТипЭлемента, РодительЭлемента, ПередЭлементом);
	Элемент.Вид					= ВидЭлемента;
	Элемент.ПоложениеЗаголовка	= ПоложениеЗаголовка;
	Элемент.ПутьКДанным			= ПутьКДанным;
	
	Возврат Элемент;
КонецФункции

Функция ДобавитьОбычнуюГруппу(Элементы, ИмяГруппы, Родитель = Неопределено, ПередЭлементом = Неопределено, Вертикально = Ложь);
	Группа	= Элементы.Вставить(ИмяГруппы, Тип("ГруппаФормы"), Родитель, ПередЭлементом);
	Группа.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Группировка			= ?(Вертикально, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
	Группа.Отображение			= ОтображениеОбычнойГруппы.Нет;
	Группа.ОтображатьЗаголовок	= Ложь;
	
	Возврат Группа;
КонецФункции

//--> АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2016
//	для документов: ВедомостьНаВыплатуЗарплатыВБанк, ВедомостьНаВыплатуЗарплатыВКассу, ВедомостьНаВыплатуЗарплатыПеречислением
Процедура ИзменитьДокументыВыплаты(Форма, Элементы)
	
	//--> АФМ-Серверс Уфимцев Заявка №ДМ0000006265, ДМ0000007335 11.12.2015 	
	Элементы.Состав.УстановитьДействие("ОбработкаВыбора",			"АФМ_СоставОбработкаВыбора");
	Элементы.Состав.УстановитьДействие("ПередНачаломДобавления",	"АФМ_СоставПередНачаломДобавления");
	Форма.Команды.Подобрать.Действие = "АФМ_Подобрать";
	//<-- АФМ-Серверс Уфимцев Заявка №ДМ0000006265, ДМ0000007335 11.12.2015 
	
	//заполнение реквизитов
	Если Форма.Объект.АФМ_ПериодРегистрации = Дата(1,1,1) Тогда
		Форма.Объект.АФМ_ПериодРегистрации = Форма.Объект.ПериодРегистрации;
	КонецЕсли;
	
	//разместим новые элементы
	ГруппаПериод = ДобавитьОбычнуюГруппу(Элементы, "АФМ_ГруппаПериод", Элементы.ШапкаОсновное, , Ложь);
	ГруппаПериод.ОтображатьЗаголовок = Ложь;
	ГруппаПериод.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	Элементы.Переместить(Элементы.АФМ_ГруппаПериод, Элементы.ШапкаОсновное, Элементы.ПериодРегистрации);
	
	Элементы.ПериодРегистрации.УстановитьДействие("Регулирование", "АФМ_ПериодРегистрацииРегулирование");
	
	НовыйЭлемент = Элементы.Добавить("АФМ_ПериодРегистрации", Тип("ПолеФормы"), Элементы.ШапкаОсновное);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.АФМ_ПериодРегистрации";
	
	Элементы.Переместить(Элементы.ПериодРегистрации, Элементы.АФМ_ГруппаПериод);
	Элементы.Переместить(Элементы.АФМ_ПериодРегистрации, Элементы.АФМ_ГруппаПериод);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Элементы.Заполнить.Видимость = Ложь;
	КонецЕсли;
	
	НоваяКоманда = Форма.Команды.Добавить("АФМ_ЗаполнитьЗаМесяц");
	НоваяКоманда.Действие = "АФМ_ЗаполнитьЗаМесяц";
	НовыйЭлемент = Элементы.Добавить("АФМ_ЗаполнитьЗаМесяц", Тип("КнопкаФормы"), Элементы.ЗаполнениеГруппа);
	НовыйЭлемент.Высота		= 1;
	НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
	НовыйЭлемент.ИмяКоманды	= "АФМ_ЗаполнитьЗаМесяц";
	НовыйЭлемент.Заголовок	= "Заполнить за месяц (АФМ)";
	НовыйЭлемент.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
	
	НоваяКоманда = Форма.Команды.Добавить("АФМ_ПереЗаполнить");
	НоваяКоманда.Действие = "АФМ_ПереЗаполнить";
	НовыйЭлемент = Элементы.Добавить("АФМ_ПереЗаполнить", Тип("КнопкаФормы"), Элементы.ЗаполнениеГруппа);
	НовыйЭлемент.Высота		= 1;
	НовыйЭлемент.Вид		= ВидКнопкиФормы.КнопкаКоманднойПанели;
	НовыйЭлемент.ИмяКоманды	= "АФМ_ПереЗаполнить";
	НовыйЭлемент.Заголовок	= "Перезаполнить выплату (АФМ)";
	НовыйЭлемент.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
	
КонецПроцедуры
//<-- АФМ-Серверс Дебов Игорь ДМ0000007372 01.06.2016

#КонецЕсли
