Процедура ОбработкаПроведения(Отказ, Режим)
	
	//регистр сведений "Статусы заявок"
	Если ОтклонитьЗаявку Тогда
		СтатусЗаявки = Перечисления.СтатусыЗаявок.НеПринята;
	ИначеЕсли ЗначениеЗаполнено(ДатаВыполнения) Тогда
		СтатусЗаявки = Перечисления.СтатусыЗаявок.Выполнена;
	ИначеЕсли ЗначениеЗаполнено(ДатаПоручения) Тогда
		СтатусЗаявки = Перечисления.СтатусыЗаявок.ВРаботе;
	Иначе
		Если ОформитьДокументы Тогда
			Если ЗначениеЗаполнено(ОтветственныйЗаОформление) Тогда
				СтатусЗаявки = Перечисления.СтатусыЗаявок.НаРассмотрении;
			Иначе
				СтатусЗаявки = Перечисления.СтатусыЗаявок.Оформляется;
			КонецЕсли;
		Иначе
			СтатусЗаявки = Перечисления.СтатусыЗаявок.НаРассмотрении;
		КонецЕсли;
	КонецЕсли; 
	Движения.СтатусыЗаявок.Записывать = Истина;
	Движения.СтатусыЗаявок.Очистить();
	Движение = Движения.СтатусыЗаявок.Добавить();
	Движение.Заявка = Ссылка;
	Движение.Статус = СтатусЗаявки;
	
	//регистр сведений "Выполнения заявок"
	Движения.ВыполненияЗаявок.Записывать = Истина;
	Движения.ВыполненияЗаявок.Очистить();
	Если СтатусЗаявки = Перечисления.СтатусыЗаявок.ВРаботе Тогда
		Движение = Движения.ВыполненияЗаявок.Добавить();
		Движение.Заявка         = Ссылка;
		Движение.Курьер         = Курьер;
		Движение.ДатаПоручения  = ДатаПоручения;
		Движение.ДатаВыполнения = "";
	ИначеЕсли СтатусЗаявки = Перечисления.СтатусыЗаявок.Выполнена Тогда
		Движение = Движения.ВыполненияЗаявок.Добавить();
		Движение.Заявка         = Ссылка;
		Движение.Курьер         = Курьер;
		Движение.ДатаПоручения  = ДатаПоручения;
		Движение.ДатаВыполнения = ДатаВыполнения;
	Иначе
		Движения.Записать();
	КонецЕсли; 

	//регистр накопления "Взаиморасчеты с заказчиками"
	Движения.ВзаиморасчетыСЗаказчиками.Записывать = Истина;
	Движения.ВзаиморасчетыСЗаказчиками.Очистить();
	Если ЗначениеЗаполнено(ДатаВыполнения) Тогда
		Движение = Движения.ВзаиморасчетыСЗаказчиками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период      = ДатаВыполнения;
		Движение.Заказчик    = ЗаказчикОрганизация;
		Движение.Заявка      = Ссылка;
		Движение.Сумма       = СуммаВсего;
	КонецЕсли;
	
	// регистр объем оказанных услуг 
	Движения.ОбъемОказанныхУслуг.Записывать = Истина;
	Движения.ОбъемОказанныхУслуг.Очистить();
	Если ЗначениеЗаполнено(ДатаВыполнения) Тогда
		Для Каждого ТекСтрокаСодержаниеЗаявки Из СодержаниеЗаявки Цикл
			Движение = Движения.ОбъемОказанныхУслуг.Добавить();
			Движение.Период    = ДатаВыполнения;
			Движение.ВидУслуг  = ТекСтрокаСодержаниеЗаявки.Операция;
			Движение.Сумма     = ТекСтрокаСодержаниеЗаявки.Сумма;
		КонецЦикла;
		Если ДопУслугаСтоимость <> 0 Тогда
			Движение = Движения.ОбъемОказанныхУслуг.Добавить();
			Движение.Период    = ДатаВыполнения;
			Движение.ВидУслуг  = "Доп.расходы";
			Движение.Сумма     = ДопУслугаСтоимость;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры
