//чтение из XML данных + поиск или создание контрагента
//алгоритм: ищем по коду договор, из него определяем контрагента. Если не нашли то создаем договор
//			и ищем контрагента по ИНН или Наименованию, если не нашли контрагента, то создаем.
Процедура ПолучитьСсылкуНаКонтрагентаИДоговор(КонтрагентDOM)
	
	//параметры
	КонфИд=НайтиПараметр("КонфИд");
	СпрДоговора=Справочники.ДоговорыКонтрагентов;
	Договор=СпрДоговора.ПустаяСсылка();
	СпрКонтрагенты=Справочники.Контрагенты;
	Контрагент=СпрКонтрагенты.ПустаяСсылка();
	СпрБС=Справочники.БанковскиеСчета;
	СпрБанки=Справочники.Банки;
	
	ТипКонтрагента=1;
	НаименованиеКонтрагента="";
	ИННКонтрагента="";
	КППКонтрагента="";
	ОКПОКонтрагента="";
	ЛогинКонтрагента="";
	ПочтаКонтрагента="";
	ФаксКонтрагента="";
	ТелефонКонтрагента="";
	ЮрАдресКонтрагента="";
	ФактАдресКонтрагента="";
	АдресДоставкиКонтрагента="";
	НомерДоговораКонтрагента="";
	ДатаДоговораКонтрагента="";
	КодДоговора="";
	СчетКонтрагента="";
	КоррСчетКонтрагента="";
	НаимБанкаКонтрагента="";
	БИКБанкаКонтрагента="";
	КППКонтрагента="";
	
	//чтение из xml
	ЧислоРеквизитов	= КонтрагентDOM.ДочерниеУзлы.Количество();
	Для СчРекв = 0 По (ЧислоРеквизитов-1) Цикл
		
		гРеквизит = КонтрагентDOM.ДочерниеУзлы.Элемент(СчРекв);
		НаименованиеРеквизита = СокрЛП(гРеквизит.ИмяУзла);
		ЗначениеРеквизита = УбратьКавычки(гРеквизит.ТекстовоеСодержимое);
		
		Если НаименованиеРеквизита = "type" Тогда
			
			//тип контрагента: 1 - Юр.лицо. 2 - Физ. лицо.
			ТипКонтрагента = ПреобразоватьКЧислу(?(ЗначениеРеквизита="", "1", ЗначениеРеквизита));
			
		ИначеЕсли НаименованиеРеквизита = "name" Тогда
			
			//Наименование (ФИО) контрагента
			НаименованиеКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "inn" Тогда
			
			//ИНН
			ИННКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "login" Тогда
			
			//Логин
			ЛогинКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "email" Тогда
			
			//Почта
			ПочтаКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "phone" Тогда
			
			//Телефон
			ТелефонКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "fax" Тогда
			
			//Факс
			ФаксКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "address2" Тогда
			
			//Физ. адресс 
			ФактАдресКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "address3" Тогда
			
			//адресс доставки 
			АдресДоставкиКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "address1" Тогда
			
			//Юр. адресс 
			ЮрАдресКонтрагента = ЗначениеРеквизита;
			
		ИначеЕсли НаименованиеРеквизита = "type1" Тогда      
			
			// поля для юр.лиц
			ЧислоРеквизитов2=гРеквизит.ДочерниеУзлы.Количество();
			Для СчРекв2 = 0 По (ЧислоРеквизитов2-1) Цикл
				гРеквизит2 = гРеквизит.ДочерниеУзлы.Элемент(СчРекв2);
				НаименованиеРеквизита2 = СокрЛП(гРеквизит2.ИмяУзла);
				ЗначениеРеквизита2 = УбратьКавычки(гРеквизит2.ТекстовоеСодержимое);
				Если НаименованиеРеквизита2 = "kpp" Тогда
					//КПП контрагента
					КППКонтрагента = ЗначениеРеквизита2;
				ИначеЕсли НаименованиеРеквизита2 = "okpo" Тогда
					//ОКПО контрагента
					ОКПОКонтрагента = ЗначениеРеквизита2;
				ИначеЕсли НаименованиеРеквизита2 = "settl" Тогда
					//рассчетный счет контрагента
					СчетКонтрагента=ЗначениеРеквизита2;
				ИначеЕсли НаименованиеРеквизита2 = "corr" Тогда
					//корр. счет контрагента
					КоррСчетКонтрагента=ЗначениеРеквизита2;
				ИначеЕсли НаименованиеРеквизита2 = "bank_name" Тогда
					//наименование банка контрагента
					НаимБанкаКонтрагента=ЗначениеРеквизита2;
				ИначеЕсли НаименованиеРеквизита2 = "bik" Тогда
					//БИК банка контрагента
					БИКБанкаКонтрагента=ЗначениеРеквизита2;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли НаименованиеРеквизита = "agreement" Тогда      
			
			// Номер договора
			ЧислоРеквизитов2=гРеквизит.ДочерниеУзлы.Количество();
			Для СчРекв2 = 0 По (ЧислоРеквизитов2-1) Цикл
				гРеквизит2 = гРеквизит.ДочерниеУзлы.Элемент(СчРекв2);
				НаименованиеРеквизита2 = СокрЛП(гРеквизит2.ИмяУзла);
				ЗначениеРеквизита2 = УбратьКавычки(гРеквизит2.ТекстовоеСодержимое);
				Если НаименованиеРеквизита2 = "number" Тогда
			       	//№ договора
					НомерДоговораКонтрагента= СокрЛП(ЗначениеРеквизита2);
					НомерДоговораКонтрагента= Лев(НомерДоговораКонтрагента,20);//максимум 20 символов
				ИначеЕсли НаименованиеРеквизита2 = "date" Тогда
					//дата договора
					ДатаДоговораКонтрагента = ДатаМ(ЗначениеРеквизита2);
				ИначеЕсли НаименованиеРеквизита2 = "code" Тогда
					//уникальный код договора (для связи с 1С)
					КодДоговора	= ЗначениеРеквизита2;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//проверка
	НаименованиеКонтрагента = ?(НаименованиеКонтрагента="", НайтиПараметр("ПустоеНаиманование"), НаименованиеКонтрагента);
	
	//поиск договора по коду
	Если (КодДоговора="0") или (КодДоговора=" ") или (КодДоговора="") Тогда
		КодДоговора="";
		ПоискДоговра=СпрДоговора.ПустаяСсылка();
	Иначе
		ПоискДоговра=СпрДоговора.НайтиПоКоду(КодДоговора);
	КонецЕсли;
	
	//поиск договора по номеру (если по коду не найден)
	Если (ПоискДоговра=СпрДоговора.ПустаяСсылка()) И (НЕ СокрЛП(НомерДоговораКонтрагента)="") Тогда
		
		ЗапросДоговра=Новый Запрос;
		ЗапросДоговра.УстановитьПараметр("Организация", НайтиПараметр("Организация",2));
		
		ЗапросДоговра.Текст=
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка,
		|	ДоговорыКонтрагентов.Наименование,
		|	ДоговорыКонтрагентов.Номер
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
		|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
		
		ВыборкаДоговора=ЗапросДоговра.Выполнить().Выбрать();
		
		Пока ВыборкаДоговора.Следующий() Цикл
			Если СокрЛП(НомерДоговораКонтрагента)=СокрЛП(ВыборкаДоговора.Номер) Тогда
				ПоискДоговра=ВыборкаДоговора.Ссылка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ПоискДоговра=СпрДоговора.ПустаяСсылка() Тогда
		
		//поиск контрагента по ИНН
		Если (СокрЛП(ИННКонтрагента)="0") ИЛИ (СокрЛП(ИННКонтрагента)="") Тогда
			ПоискКонтрагента=СпрКонтрагенты.ПустаяСсылка();
		Иначе
			ПоискКонтрагента=СпрКонтрагенты.НайтиПоРеквизиту("ИНН",СокрЛП(ИННКонтрагента));
		КонецЕсли;
		
		//поиск контрагента по наименованию
		Если (ПоискКонтрагента=СпрКонтрагенты.ПустаяСсылка()) И (НЕ СокрЛП(НаименованиеКонтрагента)="") Тогда
			ПоискКонтрагента=СпрКонтрагенты.НайтиПоНаименованию(СокрЛП(НаименованиеКонтрагента));
		КонецЕсли;
		
		Если ПоискКонтрагента=СпрКонтрагенты.ПустаяСсылка() Тогда
			
			//создание контрагента
			НовыйЭлемент = СпрКонтрагенты.СоздатьЭлемент();
			Если НЕ ПапкаНовыхКонтрагентов.Пустая() Тогда
				НовыйЭлемент.Родитель=ПапкаНовыхКонтрагентов;
			КонецЕсли;
			НовыйЭлемент.Наименование = СокрЛП(НаименованиеКонтрагента);
			НовыйЭлемент.НаименованиеПолное = НаименованиеКонтрагента;
			НовыйЭлемент.ИНН = СокрЛП(ИННКонтрагента);
			НовыйЭлемент.КПП = КППКонтрагента;
			НовыйЭлемент.ЮридическоеФизическоеЛицо = ?(ТипКонтрагента=1,Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо,Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
			НовыйЭлемент.КодПоОКПО = ОКПОКонтрагента;
			НовыйЭлемент.ОбособленноеПодразделение = Ложь;
			НовыйЭлемент.Записать();
			
			ПоискКонтрагента = НовыйЭлемент.Ссылка;
			ДобавитьСообщениеВЛог("     Создан контрагент - " + СокрЛП(ПоискКонтрагента));
			
			//запись контактной информации (адреса, контакты, руководители и т.д.)
			Если НЕ СокрЛП(ЮрАдресКонтрагента) = "" Тогда
				
				//юр. адрес 1
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
				ТЧКонтакты.Представление = ЮрАдресКонтрагента;
				
				XMLСхема = "<КонтактнаяИнформация xmlns=""http://www.v8.1c.ru/ssl/contactinfo"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Представление=""ВставляемыйРеквизит""><Комментарий/><Состав xsi:type=""Адрес"" Страна=""РОССИЯ""><Состав xsi:type=""АдресРФ""><ОКТМО>0</ОКТМО><ДопАдрЭл ТипАдрЭл=""10100000"" Значение=""""/><Адрес_по_документу>ВставляемыйРеквизит</Адрес_по_документу></Состав></Состав></КонтактнаяИнформация>";
				XMLСхема = СтрЗаменить(XMLСхема, "ВставляемыйРеквизит", ЮрАдресКонтрагента);
				ТЧКонтакты.ЗначенияПолей = XMLСхема;
				
			КонецЕсли;
			
			Если НЕ СокрЛП(ФактАдресКонтрагента) = "" Тогда
				
				//фактический адрес
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				ТЧКонтакты.Представление = ФактАдресКонтрагента;
				
				XMLСхема = "<КонтактнаяИнформация xmlns=""http://www.v8.1c.ru/ssl/contactinfo"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Представление=""ВставляемыйРеквизит""><Комментарий/><Состав xsi:type=""Адрес"" Страна=""РОССИЯ""><Состав xsi:type=""АдресРФ""><ОКТМО>0</ОКТМО><ДопАдрЭл ТипАдрЭл=""10100000"" Значение=""""/><Адрес_по_документу>ВставляемыйРеквизит</Адрес_по_документу></Состав></Состав></КонтактнаяИнформация>";
				XMLСхема = СтрЗаменить(XMLСхема, "ВставляемыйРеквизит", ФактАдресКонтрагента);
				ТЧКонтакты.ЗначенияПолей = XMLСхема;
				
				//почтовый
				ТЧКонтактыДоп = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ЗаполнитьЗначенияСвойств(ТЧКонтактыДоп, ТЧКонтакты);
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента;
				
			КонецЕсли;
			
			Если НЕ СокрЛП(ТелефонКонтрагента) = "" Тогда
				
				//телефон
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
				ТЧКонтакты.Представление = ТелефонКонтрагента;
				ТЧКонтакты.НомерТелефона = ТелефонКонтрагента;
				ТЧКонтакты.НомерТелефонаБезКодов = ТелефонКонтрагента;
				
				XMLСхема = "<КонтактнаяИнформация xmlns=""http://www.v8.1c.ru/ssl/contactinfo"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Представление=""ВставляемыйРеквизит""><Комментарий/><Состав xsi:type=""НомерТелефона"" КодСтраны="""" КодГорода="""" Номер=""ВставляемыйРеквизит"" Добавочный=""""/></КонтактнаяИнформация>";
				XMLСхема = СтрЗаменить(XMLСхема, "ВставляемыйРеквизит", ТелефонКонтрагента);
				ТЧКонтакты.ЗначенияПолей = XMLСхема;
				
			КонецЕсли;
			
			Если НЕ СокрЛП(ПочтаКонтрагента) = "" Тогда
				
				//почта
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты;
				ТЧКонтакты.Представление = ПочтаКонтрагента;
				ТЧКонтакты.АдресЭП = ПочтаКонтрагента;
				
				ТочкаРазделения = СтрНайти(ПочтаКонтрагента, "@");
				ТЧКонтакты.ДоменноеИмяСервера = Прав(ПочтаКонтрагента, СтрДлина(ПочтаКонтрагента) - ТочкаРазделения);
				
				XMLСхема = "<КонтактнаяИнформация xmlns=""http://www.v8.1c.ru/ssl/contactinfo"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Представление=""ВставляемыйРеквизит""><Комментарий/><Состав xsi:type=""ЭлектроннаяПочта"" Значение=""ВставляемыйРеквизит""/></КонтактнаяИнформация>";
				XMLСхема = СтрЗаменить(XMLСхема, "ВставляемыйРеквизит", ПочтаКонтрагента);
				ТЧКонтакты.ЗначенияПолей = XMLСхема;
				
			КонецЕсли;
			
			Если НЕ СокрЛП(ФаксКонтрагента) = "" Тогда
				
				//факс
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.Факс;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ФаксКонтрагенты;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ФаксКонтрагенты;
				ТЧКонтакты.Представление = ФаксКонтрагента;
				
				XMLСхема = "<КонтактнаяИнформация xmlns=""http://www.v8.1c.ru/ssl/contactinfo"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" Представление=""ВставляемыйРеквизит""><Комментарий/><Состав xsi:type=""НомерФакса"" КодСтраны="""" КодГорода="" Номер=""ВставляемыйРеквизит"" Добавочный=""""/></КонтактнаяИнформация>";
				XMLСхема = СтрЗаменить(XMLСхема, "ВставляемыйРеквизит", ФаксКонтрагента);
				ТЧКонтакты.ЗначенияПолей = XMLСхема;
				
			КонецЕсли;
			
			Если НЕ СокрЛП(ЛогинКонтрагента) = "" Тогда
				ТЧКонтакты = НовыйЭлемент.КонтактнаяИнформация.Добавить();//логин
				ТЧКонтакты.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;
				ТЧКонтакты.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты;
				ТЧКонтакты.ВидДляСписка = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты;
				ТЧКонтакты.Представление = "Логин: " + ЛогинКонтрагента;
			КонецЕсли;
			
			НовыйЭлемент.Записать();
			
		КонецЕсли;
		
		Контрагент = ПоискКонтрагента;
		
		//создание договора
		НовыйЭлемент = СпрДоговора.СоздатьЭлемент();
		НовыйЭлемент.Владелец = Контрагент;
		НовыйЭлемент.Организация = НайтиПараметр("Организация",2);
		НовыйЭлемент.Наименование = "Договор "+СокрЛП(КодДоговора);
		НовыйЭлемент.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
		Если НЕ КодДоговора = "" Тогда
			НовыйЭлемент.Код = КодДоговора;
		КонецЕсли;
		НовыйЭлемент.Номер=СокрЛП(НомерДоговораКонтрагента);
		НовыйЭлемент.Дата=ДатаДоговораКонтрагента;
		НовыйЭлемент.ВалютаВзаиморасчетов=НайтиПараметр("Валюта");
		НовыйЭлемент.Записать();
		
		ПоискДоговра = НовыйЭлемент.Ссылка;
		
		//создание счета
		Если Контрагент.ОсновнойБанковскийСчет.Пустая() Тогда
			
			СчетКонтрагента = ?(СчетКонтрагента="",НайтиПараметр("ПустойСчет"),СчетКонтрагента);
			БИКБанкаКонтрагента = ?(БИКБанкаКонтрагента="",НайтиПараметр("ПустойБИК"),БИКБанкаКонтрагента);
			
			НовыйОбъект = СпрБС.СоздатьЭлемент();
			НовыйОбъект.Владелец = Контрагент;
			НовыйОбъект.Наименование = "Основной";
			НовыйОбъект.НомерСчета = СчетКонтрагента;
			НовыйОбъект.ВидСчета = "Расчетный";
			НовыйОбъект.ВалютаДенежныхСредств = НайтиПараметр("Валюта");
			
			ПоискБанка = СпрБанки.НайтиПоКоду(БИКБанкаКонтрагента);
			Если ПоискБанка = СпрБанки.ПустаяСсылка() Тогда
				НовыйОбъект2 = СпрБанки.СоздатьЭлемент();
				НовыйОбъект2.Код = БИКБанкаКонтрагента;
				НовыйОбъект2.Наименование = НаимБанкаКонтрагента;
				НовыйОбъект2.КоррСчет = КоррСчетКонтрагента;
				НовыйОбъект2.Записать();
				ПоискБанка = НовыйОбъект2.Ссылка;
			КонецЕсли;
			
			НовыйОбъект.Банк = ПоискБанка;
			НовыйОбъект.Записать();
			
			КонтрагентОбъект = Контрагент.ПолучитьОбъект();
			КонтрагентОбъект.ОсновнойБанковскийСчет = НовыйОбъект.Ссылка;
			КонтрагентОбъект.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Договор = ПоискДоговра;
	Контрагент = Договор.Владелец;
	
	//завершение
	СписокПараметровДок.Добавить(Контрагент, "Контрагент");
	СписокПараметровДок.Добавить(Договор, "Договор");
	ДобавитьСообщениеВЛог("     КОНТРАГЕНТ=" + СокрЛП(Контрагент) + " И ДОГОВОР=" + СокрЛП(Договор));
	
КонецПроцедуры
