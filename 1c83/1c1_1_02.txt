общийй модуль - ОФК_УчетСтраховыхВзносов



#Область РСВ

//--> ОФК MSK-2016-00097 Дебов Игорь 09.11.2016 | 11.11.2016
Процедура ЗначенияПоказателей_РСВ1_2015Кв1_ИзменениеДанных(ПараметрыОтчета,
	РасчетыСФондамиТекст, ОстаткиНаНачалоПериодаТекст, ЗарегистрированныеИсправленияТекст,
	НачалоПериода, ОкончаниеПериода, ОписаниеТаблиц, ПодробныеДанные = Ложь) Экспорт
	
	//проверка
	Если ПараметрыОтчета.Организация.ОбособленноеПодразделение = Истина Тогда
		//если это филиал, то собираем только по филиалу
		УчетСтраховыхВзносов.РасчетПоказателей_РСВ1_2015(НачалоПериода, ОкончаниеПериода, ПараметрыОтчета.Организация, ОписаниеТаблиц, ПодробныеДанные);
		Возврат;
	КонецЕсли;
	
	//часть 1 - исправление отборов в запросах
	РасчетыСФондамиТекст = СтрЗаменить(РасчетыСФондамиТекст,
		"И РасчетыПоСтраховымВзносамОбороты.Организация = &ОбособленноеПодразделение",
		"");
	
	ОстаткиНаНачалоПериодаТекст = СтрЗаменить(ОстаткиНаНачалоПериодаТекст,
		"Организация = &ОбособленноеПодразделение",
		"Истина");
		
	ЗарегистрированныеИсправленияТекст = СтрЗаменить(ЗарегистрированныеИсправленияТекст,
		"СтраховыеВзносыИсчисленные.Организация = &ОбособленноеПодразделение",
		"Истина");
		
	ЗарегистрированныеИсправленияТекст = СтрЗаменить(ЗарегистрированныеИсправленияТекст,
		"СтраховыеВзносыИсчисленные.ГоловнаяОрганизация = &ГоловнаяОрганизация",
		"Истина");
		
	//часть 2 - расчет показателей
	НомерПП = 0;
	
	//	расчет по каждой организации
	ВыборкаОрганизаций = Справочники.Организации.Выбрать();
	Пока ВыборкаОрганизаций.Следующий() Цикл
		
		//проверка
		Если ВыборкаОрганизаций.ПометкаУдаления = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		//счетчик
		НомерПП = НомерПП + 1;
		
		//копируем структуру расчетных таблиц
		ОписаниеТаблицПромежуточная = Новый Структура;
		Для Каждого ЭлементСтруктуры Из ОписаниеТаблиц Цикл
			ОписаниеТаблицПромежуточная.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
		КонецЦикла;
		
		//расчет по организации
		УчетСтраховыхВзносов.РасчетПоказателей_РСВ1_2015(НачалоПериода, ОкончаниеПериода, ВыборкаОрганизаций.Ссылка, ОписаниеТаблицПромежуточная, ПодробныеДанные);
		
		//скопируем структуру колонок
		Если НомерПП = 1 Тогда
			Для Каждого ЭлементСтруктуры Из ОписаниеТаблиц Цикл
				ОписаниеТаблиц.Вставить(ЭлементСтруктуры.Ключ, ОписаниеТаблицПромежуточная[ЭлементСтруктуры.Ключ].СкопироватьКолонки());
			КонецЦикла;
		КонецЕсли;
			
		//добавление данных в общую таблицу
		Для Каждого ЭлементСтруктуры Из ОписаниеТаблиц Цикл
			ТаблицаЗначенийОбщая = ЭлементСтруктуры.Значение.Скопировать();
			Для Каждого СтрокаДанных Из ОписаниеТаблицПромежуточная[ЭлементСтруктуры.Ключ] Цикл
				НоваяСтрока = ТаблицаЗначенийОбщая.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			КонецЦикла;
			ОписаниеТаблиц.Вставить(ЭлементСтруктуры.Ключ, ТаблицаЗначенийОбщая);
		КонецЦикла;
		
	КонецЦикла;
	
	//	соберем итоговую общую таблицу
	Для Каждого ЭлементСтруктуры Из ОписаниеТаблиц Цикл
		
		ТаблицаЗначенийОбщая = ЭлементСтруктуры.Значение.Скопировать();
		ТаблицаЗначенийОбщая.Колонки.Добавить("ОФКГруппа");
		СтрокиГрупп = "";
		СтрокиСумм = "";
		
		//поля группировки и суммирования
		Если СокрЛП(ЭлементСтруктуры.Ключ) = "ВсегоЗастрахованных" Тогда
			
			СтрокиГрупп = "ОФКГруппа";
			СтрокиСумм = "КолЗастрахованных";
			
		Иначе
			
			Для Каждого Колонка Из ТаблицаЗначенийОбщая.Колонки Цикл
				Если Лев(СокрЛП(Колонка.Имя), 4) = "П000" Тогда
					//числовая колонка
					СтрокиСумм = СтрокиСумм + ?(СтрокиСумм = "", "", ",") + СокрЛП(Колонка.Имя);
				Иначе
					//значение для группировки
					СтрокиГрупп = СтрокиГрупп + ?(СтрокиГрупп = "", "", ",") + СокрЛП(Колонка.Имя);
				КонецЕсли;
			КонецЦикла;
			
			
		КонецЕсли;
		
		//проверка
		Если СтрокиГрупп = "" И СтрокиСумм = "" Тогда
			Продолжить;
		КонецЕсли;
		
		//свертка итоговых таблиц значений
		ТаблицаЗначенийОбщая.Свернуть(СтрокиГрупп, СтрокиСумм);
		Если СтрНайти(СтрокиГрупп, "ОФКГруппа") > 0 Тогда
			ТаблицаЗначенийОбщая.Колонки.Удалить("ОФКГруппа");
		КонецЕсли;
		ОписаниеТаблиц.Вставить(ЭлементСтруктуры.Ключ, ТаблицаЗначенийОбщая);
		
	КонецЦикла;
	
КонецПроцедуры
//<-- ОФК MSK-2016-00097

//--> ОФК MSK-2016-00097 Дебов Игорь 10.11.2016
Процедура СоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ2014(МенеджерВременныхТаблиц, 
	Организация, ПериодРасчета, ПараметрыДляСоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ, ПараметрыОтбора) Экспорт
	
	Если Организация.ОбособленноеПодразделение = Истина Тогда
		
		//если это филиал, то собираем только по филиалу (типовой вариант)
		ПерсонифицированныйУчет.СоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ2014(
			МенеджерВременныхТаблиц, 
			Организация,
			ПериодРасчета,
			ПараметрыДляСоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ, 
			ПараметрыОтбора);									
		
	Иначе
		
		//собираем по центру + филиалам
		
		//параметры
		ВТСведенияОВзносахЗаработкеСтажеЗЛ = Новый ТаблицаЗначений;
		НомерПП = 0;
		
		//расчет по каждой организации
		ВыборкаОрганизаций = Справочники.Организации.Выбрать();
		Пока ВыборкаОрганизаций.Следующий() Цикл
			
			//проверка
			Если ВыборкаОрганизаций.ПометкаУдаления = Истина Тогда
				Продолжить;
			КонецЕсли;
			
			//счетчик
			НомерПП = НомерПП + 1;
			
			//расчет по одной организации
			МенеджерВТ = Новый МенеджерВременныхТаблиц;
			ПерсонифицированныйУчет.СоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ2014(
				МенеджерВТ, 
				ВыборкаОрганизаций.Ссылка,
				ПериодРасчета,
				ПараметрыДляСоздатьВТСведенияОВзносахЗаработкеСтажеЗЛ, 
				ПараметрыОтбора);
				
			//добавляем данные в итоговую таблицу
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	ВТСведенияОВзносахЗаработкеСтажеЗЛ КАК ВТСведенияОВзносахЗаработкеСтажеЗЛ";
			
			Если НомерПП = 1 Тогда
				ВТСведенияОВзносахЗаработкеСтажеЗЛ = Запрос.Выполнить().Выгрузить();
			Иначе
				ВТСведенияОВзносахЗаработкеСтажеЗЛПромежуточная = Запрос.Выполнить().Выгрузить();
				Для Каждого СтрокаДанных Из ВТСведенияОВзносахЗаработкеСтажеЗЛПромежуточная Цикл
					НоваяСтрока = ВТСведенияОВзносахЗаработкеСтажеЗЛ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДанных);
				КонецЦикла;
			КонецЕсли;
			
			//очистка памяти временного расчета
			МенеджерВТ = Неопределено;
			
		КонецЦикла;
		
		//КОНТРОЛЬ 1 - удалим нулевые строки
		УдаляемыеФизЛица = Новый Массив;
		ФизЛицаСведенияОЗаработкеНулевые = Новый Массив;
		ФизЛицаСотрудникиНулевые = Новый Массив;
		
		//		определим нулевой заработок
		СтруктураПоиска = Новый Структура("ИмяТаблицы", "СведенияОЗаработке");
		ТаблицаСотрудников = ВТСведенияОВзносахЗаработкеСтажеЗЛ.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
			Если СтрокаДанных.Заработок = 0 И СтрокаДанных.ОблагаетсяВзносамиДоПредельнойВеличины = 0
				 И СтрокаДанных.ПоДоговорамГПХДоПредельнойВеличины = 0  И СтрокаДанных.ОблагаетсяВзносамиСвышеПредельнойВеличины = 0 Тогда
				ФизЛицаСведенияОЗаработкеНулевые.Добавить(СтрокаДанных.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
		
		//		оределим нулевые строки начисленно
		СтруктураПоиска = Новый Структура("ИмяТаблицы", "Сотрудники");
		ТаблицаСотрудников = ВТСведенияОВзносахЗаработкеСтажеЗЛ.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
			Если СтрокаДанных.НачисленоСтраховая = 0 И СтрокаДанных.ДоНачисленоСтраховая = 0 Тогда
				ФизЛицаСотрудникиНулевые.Добавить(СтрокаДанных.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
		
		//		анализ
		Для Каждого ФизЛицо Из ФизЛицаСведенияОЗаработкеНулевые Цикл
			Если НЕ ФизЛицаСотрудникиНулевые.Найти(ФизЛицо) = Неопределено Тогда
				УдаляемыеФизЛица.Добавить(ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		//		удаление из общей таблицы
		Для Каждого УдаляемоеФЛ Из УдаляемыеФизЛица Цикл
			СтруктураПоиска = Новый Структура("ФизическоеЛицо", УдаляемоеФЛ);
			УдаляемыеСтроки = ВТСведенияОВзносахЗаработкеСтажеЗЛ.НайтиСтроки(СтруктураПоиска);
			Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
				ВТСведенияОВзносахЗаработкеСтажеЗЛ.Удалить(УдаляемаяСтрока);
			КонецЦикла;
		КонецЦикла;
		
		//КОНТРОЛЬ 2 - уволенные и принятые физ-лица в одном периоде
		//	пример: Алешин Андрей Игоревич
		
		//	анализ повторяющихся сотрудников
		МассивСотрудников = Новый Массив;
		МассивДублей = Новый Массив;
		
		СтруктураПоиска = Новый Структура("ИмяТаблицы", "Сотрудники");
		ТаблицаСотрудников = ВТСведенияОВзносахЗаработкеСтажеЗЛ.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
			Если МассивСотрудников.Найти(СтрокаДанных.ФизическоеЛицо) = Неопределено Тогда
				МассивСотрудников.Добавить(СтрокаДанных.ФизическоеЛицо);
			Иначе
				Если МассивДублей.Найти(СтрокаДанных.ФизическоеЛицо) = Неопределено Тогда
					МассивДублей.Добавить(СтрокаДанных.ФизическоеЛицо);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		//	свертка повторяющихся сотрудников по таблице [Сотрудники]
		МассивУдаляемыхСтрок = Новый Массив;
		
		Для Каждого ФизЛицоДубль Из МассивДублей Цикл
			
			//подсчитаем итоги по физ-лицу
			НачисленоСтраховая = 0;
			ДоНачисленоСтраховая = 0;
			Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
				Если СтрокаДанных.ФизическоеЛицо = ФизЛицоДубль Тогда
					НачисленоСтраховая = НачисленоСтраховая + СтрокаДанных.НачисленоСтраховая;
					ДоНачисленоСтраховая = ДоНачисленоСтраховая + СтрокаДанных.ДоНачисленоСтраховая;
				КонецЕсли;
			КонецЦикла;
			
			//определим удаляемые строки
			НомерСтроки = 0;
			Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
				Если СтрокаДанных.ФизическоеЛицо = ФизЛицоДубль Тогда
					НомерСтроки = НомерСтроки + 1;
					Если НомерСтроки = 1 Тогда
						СтрокаДанных.НачисленоСтраховая = НачисленоСтраховая;
						СтрокаДанных.ДоНачисленоСтраховая = ДоНачисленоСтраховая;
					Иначе
						МассивУдаляемыхСтрок.Добавить(СтрокаДанных);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		//	свертка повторяющихся сотрудников по таблице [СведенияОЗаработке]
		СтруктураПоиска = Новый Структура("ИмяТаблицы", "СведенияОЗаработке");
		ТаблицаСотрудников = ВТСведенияОВзносахЗаработкеСтажеЗЛ.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого ФизЛицоДубль Из МассивДублей Цикл
			
			//подсчитаем итоги по физ-лицу
			ТаблицаЗаработок = Новый ТаблицаЗначений;
			ТаблицаЗаработок.Колонки.Добавить("Месяц");
			ТаблицаЗаработок.Колонки.Добавить("КатегорияЗастрахованныхЛиц");
			ТаблицаЗаработок.Колонки.Добавить("Заработок");
			ТаблицаЗаработок.Колонки.Добавить("ОблагаетсяВзносамиДоПредельнойВеличины");
			ТаблицаЗаработок.Колонки.Добавить("ПоДоговорамГПХДоПредельнойВеличины");
			ТаблицаЗаработок.Колонки.Добавить("ОблагаетсяВзносамиСвышеПредельнойВеличины");
			ТаблицаЗаработок.Колонки.Добавить("Учтено");
			
			Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
				Если СтрокаДанных.ФизическоеЛицо = ФизЛицоДубль Тогда
					НоваяСтрока = ТаблицаЗаработок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
					НоваяСтрока.Учтено = Ложь;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаЗаработок.Свернуть("Месяц,КатегорияЗастрахованныхЛиц,Учтено",
					"Заработок,ОблагаетсяВзносамиДоПредельнойВеличины,ПоДоговорамГПХДоПредельнойВеличины,ОблагаетсяВзносамиСвышеПредельнойВеличины");
			
			//определим удаляемые строки
			Для Каждого СтрокаДанных Из ТаблицаСотрудников Цикл
				Если СтрокаДанных.ФизическоеЛицо = ФизЛицоДубль Тогда
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Месяц", СтрокаДанных.Месяц);
					СтруктураПоиска.Вставить("КатегорияЗастрахованныхЛиц", СтрокаДанных.КатегорияЗастрахованныхЛиц);
					СтруктураПоиска.Вставить("Учтено", Ложь);
					
					ЗаработокПоСтрокеДанных = ТаблицаЗаработок.НайтиСтроки(СтруктураПоиска);
					Если ЗаработокПоСтрокеДанных.Количество() > 0 Тогда
						СтрокаДанных.Заработок = ЗаработокПоСтрокеДанных[0].Заработок;
						СтрокаДанных.ОблагаетсяВзносамиДоПредельнойВеличины = ЗаработокПоСтрокеДанных[0].ОблагаетсяВзносамиДоПредельнойВеличины;
						СтрокаДанных.ПоДоговорамГПХДоПредельнойВеличины = ЗаработокПоСтрокеДанных[0].ПоДоговорамГПХДоПредельнойВеличины;
						СтрокаДанных.ОблагаетсяВзносамиСвышеПредельнойВеличины = ЗаработокПоСтрокеДанных[0].ОблагаетсяВзносамиСвышеПредельнойВеличины;
						ЗаработокПоСтрокеДанных[0].Учтено = Истина;
					Иначе
						МассивУдаляемыхСтрок.Добавить(СтрокаДанных);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		//	удаление строк повторов
		Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
			ВТСведенияОВзносахЗаработкеСтажеЗЛ.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		//	сообщение контроля
		Для Каждого ФизЛицоДубль Из МассивДублей Цикл
			ТекстСообщения = НСтр("ru = 'Необходим дополнительный контроль [Раздела 6] по физ-лицу: %1'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", СокрЛП(ФизЛицоДубль));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
		
		//сортировка
		ВТСведенияОВзносахЗаработкеСтажеЗЛ.Сортировать("ИмяТаблицы, Наименование, ДатаНачалаПериода, Месяц");
		
		//переносим таблицу в итоговую ВТ
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВТСведенияОВзносахЗаработкеСтажеЗЛ", ВТСведенияОВзносахЗаработкеСтажеЗЛ);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТСведенияОВзносахЗаработкеСтажеЗЛ
		|ИЗ
		|	&ВТСведенияОВзносахЗаработкеСтажеЗЛ КАК ВТСведенияОВзносахЗаработкеСтажеЗЛПромежуточная";
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры
//<-- ОФК MSK-2016-00097

#КонецОбласти

#Область СЗВМ 

//--> ОФК MSK-2016-00150 Дебов Игорь 16.12.2016
Процедура СоздатьВТФизическиеЛицаОрганизацииОФК(МенеджерВременныхТаблиц, ДанныеОбъекта) Экспорт
	
	Если ДанныеОбъекта.Организация.ОбособленноеПодразделение = Истина Тогда
		
		//если это филиал, то собираем только по филиалу (типовой вариант)
		Документы.СведенияОЗастрахованныхЛицахСЗВ_М.СоздатьВТФизическиеЛицаОрганизации(МенеджерВременныхТаблиц, ДанныеОбъекта);
		
	Иначе
		
		//собираем по центру + филиалам
		
		//параметры
		ВТФизическиеЛицаОрганизации = Новый ТаблицаЗначений;
		НомерПП = 0;
		
		//заполнение физ-лиц по каждой организации
		ВыборкаОрганизаций = Справочники.Организации.Выбрать();
		Пока ВыборкаОрганизаций.Следующий() Цикл
			
			//проверка
			Если ВыборкаОрганизаций.ПометкаУдаления = Истина Тогда
				Продолжить;
			КонецЕсли;
			
			//счетчик
			НомерПП = НомерПП + 1;
			
			//преобразуем структуры формы в обычную структуру, что бы можно было изменять передаваемые параметры
			ДанныеОбъектаНовые = Новый Структура;
			ДанныеОбъектаНовые.Вставить("Дата", 						ДанныеОбъекта.Дата);
			ДанныеОбъектаНовые.Вставить("ДокументПринятВПФР", 			ДанныеОбъекта.ДокументПринятВПФР);
			ДанныеОбъектаНовые.Вставить("ОкончаниеОтчетногоПериода", 	ДанныеОбъекта.ОкончаниеОтчетногоПериода);
			ДанныеОбъектаНовые.Вставить("Организация", 					ВыборкаОрганизаций.Ссылка); //замена
			ДанныеОбъектаНовые.Вставить("ОтчетныйПериод", 				ДанныеОбъекта.ОтчетныйПериод);
			ДанныеОбъектаНовые.Вставить("Ссылка", 						ДанныеОбъекта.Ссылка);
			
			//заполнение по одной организации
			МенеджерВТ = Новый МенеджерВременныхТаблиц;
			Документы.СведенияОЗастрахованныхЛицахСЗВ_М.СоздатьВТФизическиеЛицаОрганизации(МенеджерВТ, ДанныеОбъектаНовые);
				
			//добавляем данные в итоговую таблицу
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	ВТФизическиеЛицаОрганизации КАК ВТФизическиеЛицаОрганизации";
			
			Если НомерПП = 1 Тогда
				ВТФизическиеЛицаОрганизации = Запрос.Выполнить().Выгрузить();
			Иначе
				ВТФизическиеЛицаОрганизацииПромежуточная = Запрос.Выполнить().Выгрузить();
				Для Каждого СтрокаДанных Из ВТФизическиеЛицаОрганизацииПромежуточная Цикл
					НоваяСтрока = ВТФизическиеЛицаОрганизации.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДанных);
				КонецЦикла;
			КонецЕсли;
			
			//очистка памяти
			МенеджерВТ = Неопределено;
			
		КонецЦикла;
		
		//контроль - удаление повторов физ-лиц
		МассивФЛ = Новый Массив;
		МассивУдаляемыхСтрок = Новый Массив;
		
		Для Каждого СтрокаДанных Из ВТФизическиеЛицаОрганизации Цикл
			Если МассивФЛ.Найти(СтрокаДанных.ФизическоеЛицо) = Неопределено Тогда
				МассивФЛ.Добавить(СтрокаДанных.ФизическоеЛицо);
			Иначе
				МассивУдаляемыхСтрок.Добавить(СтрокаДанных);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
			ВТФизическиеЛицаОрганизации.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		//сортировка по наименованию физ-лица
		ВТФизическиеЛицаОрганизации.Колонки.Добавить("ОФКСортировка");
		Для Каждого СтрокаДанных Из ВТФизическиеЛицаОрганизации Цикл
			СтрокаДанных.ОФКСортировка = СокрЛП(СтрокаДанных.ФизическоеЛицо.Наименование);
		КонецЦикла;
		ВТФизическиеЛицаОрганизации.Сортировать("ОФКСортировка");
		ВТФизическиеЛицаОрганизации.Колонки.Удалить("ОФКСортировка");
		
		//переносим таблицу в итоговую ВТ
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВТФизическиеЛицаОрганизации", ВТФизическиеЛицаОрганизации);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ ВТФизическиеЛицаОрганизации
		|ИЗ
		|	&ВТФизическиеЛицаОрганизации КАК ВТФизическиеЛицаОрганизацииПромежуточная";
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры
//<-- ОФК MSK-2016-00150

#КонецОбласти

#Область ФСС

//Справочно: доработаны сами процедуры расчета данных для отчета.
//
//	УчетСтраховыхВзносов.ЗначенияПоказателей_4ФСС_2016Кв1()
//	УчетСтраховыхВзносов.РасчетПоказателей_4ФСС_2016Кв1()
//
//	УчетПособийСоциальногоСтрахования.РасчетПоказателей_4ФСС_2016Кв1()
//	УчетПособийСоциальногоСтрахования.РасчетПоказателей_4ФСС_2015Кв1()
//	УчетПособийСоциальногоСтрахования.РасчетПоказателей_4ФСС_2012Кв1()

#КонецОбласти
