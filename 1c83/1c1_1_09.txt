// Процедура актуализации закрытых рабочих периодов.
//		
//		Процедура фиксирует закрытые рабочие периоды, т.е. дата конца меньше даты расчета, для того что бы в случае
//		корректировки периода в 1С он не изменялся в отчете. У 1С таблица "заработанных прав на отпуск" динамическая, со временем
//		рабочий период перерасчитывается в пределах дня, двух или больше (разные ситуации). Но при этом в ранее созданных
//		документах "отпуск" данные не изменяются. Из за этого на типовых регистрах не получится точно собрать отчет по остаткам
//		отпусков в разрезе рабочих периодов.
//
Процедура ВыполнитьАктуализациюЗРП(ДатаДанных, ДельтаДней = 10, ВыводитьНулевойЛог = Истина) Экспорт
	
	//cправочно: процедура вызывается в трех режимах - ручной, автоматически из регл. задания, во время формирования отчета.
	
	//контроль даты
	ДатаРасчета = ДатаДанных;
	АктуальнаяДата = ТекущаяДата();
	//Если ДатаРасчета > АктуальнаяДата Тогда
	//	//блокировка нужна для случая когда мы формируем отчет на год вперед, получается многие периоды будут закрыты, но этого делать не нужно
	//	ДатаРасчета = АктуальнаяДата;
	//КонецЕсли;
	
	//выбор данных
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДанных", ДатаРасчета);
	Запрос.УстановитьПараметр("ДельтаДнейПлюс", ДельтаДней);
	Запрос.УстановитьПараметр("ДельтаДнейМинус", ДельтаДней * (-1));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаработанныеПраваНаОтпуска.Сотрудник КАК Сотрудник,
	|	ЗаработанныеПраваНаОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ЗаработанныеПраваНаОтпуска.ДатаНачала КАК ДатаНачала,
	|	ЗаработанныеПраваНаОтпуска.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТЗаработанныеПрава
	|ИЗ
	|	РегистрСведений.ЗаработанныеПраваНаОтпуска КАК ЗаработанныеПраваНаОтпуска
	|ГДЕ
	|	ЗаработанныеПраваНаОтпуска.ДатаОкончания <= &ДатаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаработанныеПраваНаОтпуска.Сотрудник,
	|	ЗаработанныеПраваНаОтпуска.ВидЕжегодногоОтпуска,
	|	ЗаработанныеПраваНаОтпуска.ДатаНачала,
	|	ЗаработанныеПраваНаОтпуска.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОФК_ЗакрытыеРабочиеПериодыОтпусков.Сотрудник КАК Сотрудник,
	|	ОФК_ЗакрытыеРабочиеПериодыОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ОФК_ЗакрытыеРабочиеПериодыОтпусков.ДатаНачала КАК ДатаНачалаЗакрытая,
	|	ОФК_ЗакрытыеРабочиеПериодыОтпусков.ДатаОкончания КАК ДатаОкончанияЗакрытая,
	|	ИСТИНА КАК ПериодЗакрыт
	|ПОМЕСТИТЬ ВТЗакрытыеПериоды
	|ИЗ
	|	РегистрСведений.ОФК_ЗакрытыеРабочиеПериодыОтпусков КАК ОФК_ЗакрытыеРабочиеПериодыОтпусков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаработанныеПрава.Сотрудник КАК Сотрудник,
	|	ВТЗаработанныеПрава.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ВТЗаработанныеПрава.ДатаНачала КАК ДатаНачала,
	|	ВТЗаработанныеПрава.ДатаОкончания КАК ДатаОкончания,
	|	ВТЗакрытыеПериоды.ДатаНачалаЗакрытая КАК ДатаНачалаЗакрытая,
	|	ВТЗакрытыеПериоды.ДатаОкончанияЗакрытая КАК ДатаОкончанияЗакрытая,
	|	ЕСТЬNULL(ВТЗакрытыеПериоды.ПериодЗакрыт, ЛОЖЬ) КАК ПериодЗакрыт
	|ПОМЕСТИТЬ ВТРасчет
	|ИЗ
	|	ВТЗаработанныеПрава КАК ВТЗаработанныеПрава
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗакрытыеПериоды КАК ВТЗакрытыеПериоды
	|		ПО ВТЗаработанныеПрава.Сотрудник = ВТЗакрытыеПериоды.Сотрудник
	|			И ВТЗаработанныеПрава.ВидЕжегодногоОтпуска = ВТЗакрытыеПериоды.ВидЕжегодногоОтпуска
	|			И (ВЫБОР
	|				КОГДА РАЗНОСТЬДАТ(ВТЗаработанныеПрава.ДатаНачала, ВТЗакрытыеПериоды.ДатаНачалаЗакрытая, ДЕНЬ) >= &ДельтаДнейМинус
	|						И РАЗНОСТЬДАТ(ВТЗаработанныеПрава.ДатаНачала, ВТЗакрытыеПериоды.ДатаНачалаЗакрытая, ДЕНЬ) <= &ДельтаДнейПлюс
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА РАЗНОСТЬДАТ(ВТЗаработанныеПрава.ДатаОкончания, ВТЗакрытыеПериоды.ДатаОкончанияЗакрытая, ДЕНЬ) >= &ДельтаДнейМинус
	|						И РАЗНОСТЬДАТ(ВТЗаработанныеПрава.ДатаОкончания, ВТЗакрытыеПериоды.ДатаОкончанияЗакрытая, ДЕНЬ) <= &ДельтаДнейПлюс
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасчет.Сотрудник КАК Сотрудник,
	|	ВТРасчет.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
	|	ВТРасчет.ДатаНачала КАК ДатаНачала,
	|	ВТРасчет.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	ВТРасчет КАК ВТРасчет
	|ГДЕ
	|	ВТРасчет.ПериодЗакрыт = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ВидЕжегодногоОтпуска,
	|	ДатаНачала";
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	//добавление новых данных в рег. свежений
	СозданоЗаписей = 0;
	ОшибокПриСоздании = 0;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		МенеджерЗаписи = РегистрыСведений.ОФК_ЗакрытыеРабочиеПериодыОтпусков.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Сотрудник = СтрокаДанных.Сотрудник;
		МенеджерЗаписи.ВидЕжегодногоОтпуска = СтрокаДанных.ВидЕжегодногоОтпуска;
		МенеджерЗаписи.ДатаНачала = СтрокаДанных.ДатаНачала;
		МенеджерЗаписи.ДатаОкончания = СтрокаДанных.ДатаОкончания;
		
		Попытка
			МенеджерЗаписи.Записать();
			СозданоЗаписей = СозданоЗаписей + 1;
		Исключение
			ОшибокПриСоздании = ОшибокПриСоздании + 1;
		КонецПопытки;
		
	КонецЦикла;
	
	//фиксируем результат в журнале регистрации
	ТекстСообщения = "Дата выполнения: " + Формат(ДатаДанных, "ДФ=dd.MM.yyyy") + Символы.ПС;
	ТекстСообщения = ТекстСообщения + "      всего данных: " + Формат(ТаблицаДанных.Количество(), "ЧДЦ=; ЧН=0; ЧГ=0") + Символы.ПС;
	ТекстСообщения = ТекстСообщения + "      сохранено рабочих периодов: " + Формат(СозданоЗаписей, "ЧДЦ=; ЧН=0; ЧГ=0") + Символы.ПС;
	ТекстСообщения = ТекстСообщения + "      ошибок: " + Формат(ОшибокПриСоздании, "ЧДЦ=; ЧН=0; ЧГ=0");
	
	Если ВыводитьНулевойЛог = Ложь И ТаблицаДанных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ЗаписьЖурналаРегистрации("Актуализация закрытых рабочих периодов", УровеньЖурналаРегистрации.Информация,,, ТекстСообщения);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
