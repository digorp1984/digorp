#Область Этап2_ПолучениеPDF

&НаСервере
Функция ПолучитьВсеРасчетныеЛистки(МассивФизическихЛиц)
	
	//период отчета
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.ДатаНачала    = НачалоМесяца(Объект.ПериодРегистрации);
	ПериодОтчета.ДатаОкончания = КонецМесяца(Объект.ПериодРегистрации);
	
	//подготовим СКД с параметрами (версия 2)
	ОтчетРасчетныйЛисток = Отчеты.АнализНачисленийИУдержаний.Создать();
	ОтчетРасчетныйЛисток.КомпоновщикНастроек.ЗагрузитьНастройки(ОтчетРасчетныйЛисток.СхемаКомпоновкиДанных.ВариантыНастроек.РасчетныйЛисток.Настройки);
	ОтчетРасчетныйЛисток.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КлючВарианта", "РасчетныйЛисток");
		
	//изменим пользовательские настройки
	ОтчетРасчетныйЛисток.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("Период", ПериодОтчета);
	
	Для Каждого ЭлементПользовательскойНастройки Из ОтчетРасчетныйЛисток.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементПользовательскойНастройки) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			
			Если ТипЗнч(ЭлементПользовательскойНастройки.Значение) = Тип("СтандартныйПериод") Тогда
				ЭлементПользовательскойНастройки.Значение = ПериодОтчета;
			ИначеЕсли ЭлементПользовательскойНастройки.Параметр = Новый ПараметрКомпоновкиДанных("ВыводитьСуммуНачисленнойЗарплатыВРазделеКВыплате") Тогда
				ЭлементПользовательскойНастройки.Значение = Истина;
			ИначеЕсли ЭлементПользовательскойНастройки.Параметр = Новый ПараметрКомпоновкиДанных("ВыводитьОснованияНачисленийИУдержаний") Тогда
				ЭлементПользовательскойНастройки.Значение = Истина;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	//изменим основные настройки (итоговые настройки получаются объединением пользовательских + основных, с приоритетом пользовательских)
	НастройкиОтчета = ОтчетРасчетныйЛисток.КомпоновщикНастроек.Настройки;
	
	ПараметрОтчета = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьПоказателиНачислений"));
	Если ПараметрОтчета <> Неопределено Тогда
		ПараметрОтчета.Значение = Истина;
	КонецЕсли;
	
	//изменим отбор в отчете
	Отбор = ОтчетРасчетныйЛисток.КомпоновщикНастроек.Настройки.Отбор;
	Отбор.Элементы.Очистить();
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "Организация", ВидСравненияКомпоновкиДанных.Равно, Объект.Организация);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, МассивФизическихЛиц);
	
	//формирование отчета (версия 2)
	ДокументРезультат = Новый ТабличныйДокумент;
	ОтчетРасчетныйЛисток.СкомпоноватьРезультат(ДокументРезультат);
	
	//завершение
	Возврат ДокументРезультат;
	
КонецФункции

&НаСервере
Функция ПолучитОбластьНаСервере(ДокументРезультат, ВерхПредыдущего, ВерхСледующего, ЛеваяГраница, ПраваяГраница)
	
	ОтдельныйРасчетныйЛисток = ДокументРезультат.ПолучитьОбласть(ВерхПредыдущего, ЛеваяГраница, ВерхСледующего, ПраваяГраница);
	
	ОтдельныйРасчетныйЛисток.АвтоМасштаб = Истина;
	ОтдельныйРасчетныйЛисток.ОтображатьЗаголовки = Ложь;
	ОтдельныйРасчетныйЛисток.ОтображатьСетку = Ложь;
	ОтдельныйРасчетныйЛисток.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ОтдельныйРасчетныйЛисток.КлючПараметровПечати = "ОФК_РассылкаРасчетныхЛистов31_2";
	
	ОтдельныйРасчетныйЛисток.ПолеСверху = 15;
	ОтдельныйРасчетныйЛисток.ПолеСнизу = 0;
	ОтдельныйРасчетныйЛисток.ПолеСлева = 10;
	ОтдельныйРасчетныйЛисток.ПолеСправа = 10;
	
	Возврат ОтдельныйРасчетныйЛисток;
	
КонецФункции

&НаКлиенте
Процедура СформироватьФайлы(Команда)
	
	//проверка
	ОчиститьСообщения();
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	//параметры
	ПрефиксОрганизации = ПолучитОбластьПрефиксОрганизации();
	
	//очистка ссылок в таблице данных
	Для Каждого СтрокаДанных Из Объект.РасчетныеЛисты Цикл
		СтрокаДанных.СуммаКВыплате = 0;
		СтрокаДанных.ФаилРасчетногоЛистка = "";
		СтрокаДанных.ТекстОшибкиОтправки = "";
	КонецЦикла;
	
	//сообщение
	ТекстСообщения = НСтр("ru = 'Формирование файлов расчетных листков в формате PDF ...'");
	Состояние(ТекстСообщения);
	
	//формирование файлов в PDF
	
	//разобъем сотрудников на пачки (для более ускоренного расчета)
	ПачкиСотрудников = Новый Массив;
	МассивФизическихЛиц = Новый Массив;
	
	НомерПП = 0;
	Для Каждого СтрокаДанных Из Объект.РасчетныеЛисты Цикл
		
		Если СтрокаДанных.Отправлено = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		НомерПП = НомерПП + 1;
		МассивФизическихЛиц.Добавить(СтрокаДанных.ФизическоеЛицо);
		
		Если НомерПП > 19 Тогда //20-ть физ-лиц в пачке
			НомерПП = 0;
			ПачкиСотрудников.Добавить(МассивФизическихЛиц);
			МассивФизическихЛиц = Новый Массив;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		ПачкиСотрудников.Добавить(МассивФизическихЛиц);
	КонецЕсли;
	
	//получаем по каждой пачке расчетные листки и формируем файлы, результат пишем в табличную часть
	Для Каждого МассивФизическихЛиц Из ПачкиСотрудников Цикл
		
		//получим общий табличный документ расчетного листка
		ДокументРезультат = ПолучитьВсеРасчетныеЛистки(МассивФизическихЛиц);
		
		//разрезка общего документа на отдельные расчетные листки по сотрудникам
		ЛеваяГраница = 1;
		ПраваяГраница = ДокументРезультат.ШиринаТаблицы;
		
		ОбластьКонцаПредыдущего = ДокументРезультат.Область(1, 1, 1, 1);
		ОбластьНачалаСледующего = ДокументРезультат.НайтиТекст("РАСЧЕТНЫЙ ЛИСТОК", ОбластьКонцаПредыдущего, ,ЛОЖЬ);
		
		Пока НЕ ОбластьНачалаСледующего = Неопределено Цикл
			
			ЕстьОшибка = Ложь;
			ТабельныйНомер = "";
			СуммаКВыплате = 0;
			
			Попытка
				
				//расчет строк
				ОбластьКонцаПредыдущего = ОбластьНачалаСледующего;
				ОбластьНачалаСледующего = ДокументРезультат.НайтиТекст("РАСЧЕТНЫЙ ЛИСТОК", ОбластьКонцаПредыдущего, ,ЛОЖЬ);
				
				ВерхПредыдущего = ОбластьКонцаПредыдущего.Верх;
				ВерхСледующего = ДокументРезультат.ВысотаТаблицы;
				Если НЕ ОбластьНачалаСледующего = Неопределено Тогда
					ВерхСледующего = ОбластьНачалаСледующего.Верх - 2;
				КонецЕсли;
				
				//выделение расчетного листка
				ОтдельныйРасчетныйЛисток = ПолучитОбластьНаСервере(ДокументРезультат, ВерхПредыдущего, ВерхСледующего, ЛеваяГраница, ПраваяГраница);
				
				//выделение табельного номера
				ОбластьТабельныйНомер = ОтдельныйРасчетныйЛисток.Область(2, 1, 2, 1);
				ТекстОбласти = СокрЛП(ОбластьТабельныйНомер.Текст);
				
				ПозицияСкобки1 = СтрНайти(ТекстОбласти, "(");
				ПозицияСкобки2 = СтрНайти(ТекстОбласти, ")");
				Если ПозицияСкобки1 = 0 ИЛИ ПозицияСкобки2 = 0 Тогда
					ЕстьОшибка = Истина;
				Иначе
					ТабельныйНомер = СокрЛП(Сред(ТекстОбласти, ПозицияСкобки1 + 1, ПозицияСкобки2 - ПозицияСкобки1 - 1));
				КонецЕсли;
				
				//выделение суммы выплаты
				ОбластьСуммаКВыплате = ОтдельныйРасчетныйЛисток.Область(2, 32, 2, 32);
				ТекстОбласти = СокрЛП(ОбластьСуммаКВыплате.Текст);
				ТекстОбласти = СтрЗаменить(ТекстОбласти, " ", ""); // пробел - символ 1
				ТекстОбласти = СтрЗаменить(ТекстОбласти, " ", ""); // пробел - символ 2
				ТекстОбласти = СтрЗаменить(ТекстОбласти, ",", ".");
				
				Если НЕ ТекстОбласти = "" Тогда
					Попытка
						СуммаКВыплате = Число(ТекстОбласти);
					Исключение
					КонецПопытки;
				КонецЕсли;
				
				//сохранение расчетного листка в PDF
				Если ТабельныйНомер <> "" Тогда
					ФаилРасчетногоЛистка = СокрЛП(Объект.КаталогФайлов) + "\" + ПрефиксОрганизации + Формат(Объект.ПериодРегистрации, "ДФ=yyyyMMdd") + "_" + ТабельныйНомер + ".PDF";
					ОтдельныйРасчетныйЛисток.Записать(ФаилРасчетногоЛистка, ТипФайлаТабличногоДокумента.PDF);
				Иначе
					ЕстьОшибка = Истина;
				КонецЕсли;
				
			Исключение
				ЕстьОшибка = Истина;
			КонецПопытки;
			
			ТекстСообщения = ФаилРасчетногоЛистка;
			Если ЕстьОшибка = Истина Тогда
				ТекстСообщения = "Ошибка формирования";
			КонецЕсли;
			
			//перенос результат в табличную часть обработки
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ТабельныйНомер", ТабельныйНомер);
			НайденныеСтроки = Объект.РасчетныеЛисты.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаДанных Из НайденныеСтроки Цикл
				СтрокаДанных.ФаилРасчетногоЛистка = ТекстСообщения;
				СтрокаДанных.СуммаКВыплате = СуммаКВыплате;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//отметим пустые ссылки - как ошибки
	Для Каждого СтрокаДанных Из Объект.РасчетныеЛисты Цикл
		
		Если СтрокаДанных.Отправлено = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Если СокрЛП(СтрокаДанных.ФаилРасчетногоЛистка) = "" Тогда
			СтрокаДанных.ФаилРасчетногоЛистка = "Ошибка формирования";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
